{"version":3,"sources":["routes/HomeRoute/styles.module.css","view_components/CenteredContainer/styles.module.css","component/RwdYoutube.module.css","utils/firebase.js","store/BaseStore.js","store/PlayerStore.js","use_cases/addPlayer.js","view_components/CenteredContainer/index.js","entities/Game.js","store/GameStore.js","use_cases/getGame.js","routes/JoinRoute.js","use_cases/getPlayer.js","store/AnswerStore.js","utils/popKey.js","store/QuestionStore.js","use_cases/addAnswer.js","routes/PlayerRoute.js","use_cases/getLobbyPlayers.js","routes/LobbyRoute.js","store/UserStore.js","use_cases/signupUser.js","use_cases/loginUser.js","routes/LoginRoute.js","use_cases/getCurrentUser.js","use_cases/getCurrentUserGames.js","routes/MyGamesRoute.js","use_cases/createGame.js","routes/CreateGameRoute.js","use_cases/getQuestions.js","use_cases/saveQuestion.js","use_cases/deleteQuestion.js","view_components/EditableQuestion.js","routes/GameDetailsRoute.js","use_cases/startNextQuestion.js","utils/calculateTimeLeft.js","routes/PendingQuestionRoute.js","use_cases/getQuestion.js","use_cases/calculateQuestionResults.js","use_cases/countTotalQuestions.js","routes/QuestionResultsRoute.js","use_cases/calculateFinalResults.js","routes/FinalResultsRoute.js","use_cases/showCurrentQuestion.js","view_components/Question.js","routes/CurrentQuestionRoute.js","Header.js","pages/Signin.js","pages/Draw.js","pages/MySettings.js","component/RwdYoutube.js","pages/Mainpage.js","use_cases/findGamesByShortCode.js","pages/JoinS.js","App.js","index.js","pages/styles.module.css"],"names":["module","exports","hero_heading","centered","videobox","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_FIREBASE_CONFIG","BaseStore","_createClass","props","_classCallCheck","this","undefined","firestore","auth","PlayerStore","_BaseStore","_inherits","_super","_createSuper","apply","arguments","key","value","playerId","scopes","collection","doc","gameId","get","then","_convertDocToPlayer","attributes","chain","add","playerRef","_this","onChange","limit","onSnapshot","playersSnapshot","players","forEach","playerDoc","push","snapshot","docs","map","p","_convertDocToQuestion","Object","assign","id","data","addPlayer","create","CenteredContainer","React","createElement","Container","className","styles","style","maxWidth","height","verticalCentered","children","Game","GameStore","state","STATE_DRAFT","ref","_convertDocToGame","_getGameDoc","gameDoc","_this2","where","ownerId","shortCode","a","currentQuestion","currentQuestionId","update","game","path","getGame","JoinForm","_ref","playerName","setPlayerName","joinGame","Form","onSubmit","e","preventDefault","FormGroup","Label","Input","target","Button","color","type","JoinRoute","playUrl","useParams","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setPlayerId","_useState5","_useState6","setGame","useEffect","set","name","console","log","catch","error","window","location","replace","concat","getPlayer","AnswerStore","_popAttr","questionId","player","join","question","answerRef","_convertDocToAnswer","answerDoc","obj","attr","val","popKey","QuestionStore","addAttrs","questionDoc","attributesCopy","qnRef","qnDoc","_this3","from","orderBy","q","addAttributes","addAnswer","questionStore","timestamp","Date","getTime","isCorrect","correctAnswer","choice","AnswerGrid","recordAnswer","isAnswerDisabled","Row","ans","Col","sm","md","onClick","disabled","PlayerRoute","_useParams","currentGame","setCurrentGame","answer","setAnswer","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","setIsAnswerDisabled","handleGameChange","setTimeout","SECONDS_TO_CHOOSE","Alert","Fragment","getLobbyPlayers","playerStore","list","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","PlayerList","Spinner","ListGroup","ListGroupItem","QRCode","_ref2","imageSize","qrcodeData","setQRCodeData","canvasRef","useRef","imageRef","QRUrl","href","_ref3","_asyncToGenerator","_callee","url","dataURL","_context","qrcode","toDataURL","t0","_x","generateQRCode","canvas","current","ctx","getContext","img","Image","src","onload","clearRect","width","drawImage","display","alt","LobbyRoute","setPlayers","currentUrl","origin","displayUrl","joinUrl","isModalOpen","setIsModalOpen","Grid","columns","Column","rel","verticalAlign","fontSize","outline","Modal","basic","open","onClose","close","Link","to","size","UserStore","email","password","createUserWithEmailAndPassword","userCredentials","firebaseUser","user","_convertUser","errorCode","code","message","alert","signInWithEmailAndPassword","handleChange","onAuthStateChanged","uid","signupUser","loginUser","login","handleSubmit","event","authFn","successCallback","SignupForm","onUserChange","setEmail","setPassword","for","LoginForm","LoginRoute","isExistingUser","setIsExistingUser","_useState11","_useState12","setUser","toggleForm","Navigate","getCurrentUser","userStore","onCurrentUserChange","getCurrentUserGames","gameStore","MyGamesRoute","games","setGames","redirectUrl","setRedirectUrl","tag","action","createGame","String","Math","floor","random","CreateGameRoute","gameName","setGameName","gameAttributes","onCreate","getQuestions","saveQuestion","deleteQuestion","db","deleteDoc","reload","_x2","EditableQuestion","draftQuestion","setDraftQuestion","componentState","setComponentState","updateDraft","newAttributes","handleDeleteQuestion","Card","body","CardTitle","InputGroup","placeholder","text","ansKey","InputGroupAddon","addonType","InputGroupText","_defineProperty","data-testid","hidden","GameDetailsRoute","questions","setQuestions","editMode","setEditMode","navigate","useNavigate","handleDeleteGame","marginBottom","order","newQn","startNextQuestion","nextOrder","questionArray","tickTimer","endDate","intervalCallback","endedCallback","timeLeft","date","difference","now","calculateTimeLeft","startTimer","seconds","PendingQuestionRoute","parentUrl","setTimeLeft","nextQuestion","setNextQuestion","ceil","getQuestion","calculateQuestionResults","answerStore","answers","results","A","B","C","D","latestAnswers","reduce","acc","countTotalQuestions","isCorrectChoice","ResultBoard","result","entries","inverse","CardBody","CardText","QuestionResultsRoute","_ref4","setResult","setQuestion","totalQuestionCount","setTotalQuestionCount","calculateFinalResults","filter","curr","sortScores","b","score1","score2","Leaderboard","scores","sort","index","Badge","FinalResultsRoute","setResults","showCurrentQuestion","Question","ShowResultsBtn","isVisible","linkTo","CurrentQuestionRoute","Header","_React$useState","_React$useState2","currentUser","Menu","Item","as","position","signOut","Signin","activeItem","setActiveItem","_React$useState3","_React$useState4","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","isLoading","setIsLoading","widths","active","label","Message","negative","loading","storage","getStorage","InputField","fieldName","_ref$type","canvasProps","setCanvasProps","htmlFor","prevCanvasProps","_objectSpread","min","max","Draw","setPlayUrl","svgRef","setSvgRef","equalParam","lastIndexOf","substring","lastParam","SID","computedSvgRef","backgroundImage","preserveBackgroundImageAspectRatio","strokeWidth","eraserWidth","strokeColor","canvasColor","borderRight","svgStyle","exportWithBackgroundImage","withTimestamp","allowOnlyPointerType","withViewBox","createRef","penButtonOutline","setPenButtonOutline","eraserButtonOutline","setEraserButtonOutline","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setSVG","_React$useState15","_React$useState16","setPaths","_React$useState17","stroke","isEraser","_React$useState18","setLastStroke","_React$useState19","_React$useState20","isDone","setIsDone","createButton","handler","themeColor","spacingClass","buttonsPenEraser","_canvasRef$current2","eraseMode","_canvasRef$current3","buttonsWithHandlers","_canvasRef$current4","undo","_canvasRef$current5","redo","_canvasRef$current6","clearCanvas","_canvasRef$current7","resetCanvas","buttonsDone","_canvasRef$current","exportSvg","exportedDataURI","blob","Blob","uploadBytes","buttonsNext","class","ReactSketchCanvas","updatedPaths","onStroke","role","aria-label","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","MySettings","isNameModalOpen","setIsNameModalOpen","isPasswordModalOpen","setIsPasswordModalOpen","setDisplayName","oldPassword","setOldPassword","newPassword","setNewPassword","floated","Segment","vertical","Content","fluid","Actions","updateProfile","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","RwdYoutube","frameBorder","allowFullScreen","title","Mainpage","marginTop","fontWeight","controls","small_note","textAlign","findGamesByShortCode","STATE_WAITING_FOR_PLAYERS","JoinS","setShortCode","App","HashRouter","Routes","Route","element","exact","ReactDOM","render","document","getElementById","nomal_text"],"mappings":"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","file":"static/js/main.f3105f30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_heading\":\"styles_hero_heading__1Twp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centered\":\"styles_centered__3iYAP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videobox\":\"RwdYoutube_videobox__Z9csr\"};","import firebase from 'firebase/compat/app';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAUlqVFqNfKTY34UCA0_jt9kHlTqMgDzi0\",\r\n    authDomain: \"ar-classroom-1bb48.firebaseapp.com\",\r\n    projectId: \"ar-classroom-1bb48\",\r\n    storageBucket: \"ar-classroom-1bb48.appspot.com\",\r\n    messagingSenderId: \"801778279327\",\r\n    appId: \"1:801778279327:web:e63f67b115057a5e2c53aa\",\r\n    measurementId: \"G-DEC44C4SPG\"\r\n  };\r\n\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n    // firebase.firestore.setLogLevel('debug');\r\n  }\r\n\r\n\r\nexport default firebase;","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth'\r\n\r\nconst REACT_APP_FIREBASE_CONFIG = {\r\n    apiKey: \"AIzaSyAUlqVFqNfKTY34UCA0_jt9kHlTqMgDzi0\",\r\n    authDomain: \"ar-classroom-1bb48.firebaseapp.com\",\r\n    projectId: \"ar-classroom-1bb48\",\r\n    storageBucket: \"ar-classroom-1bb48.appspot.com\",\r\n    messagingSenderId: \"801778279327\",\r\n    appId: \"1:801778279327:web:e63f67b115057a5e2c53aa\",\r\n    measurementId: \"G-DEC44C4SPG\"\r\n};\r\n\r\n//const FIREBASE_CONFIG = REACT_APP_FIREBASE_CONFIG;\r\n\r\n\r\nclass BaseStore {\r\n  constructor(props) {\r\n    // workaround to prevent initializing multiple times\r\n    if(firebase.apps !== undefined){\r\n      if (!firebase.apps.length) {\r\n        firebase.initializeApp(REACT_APP_FIREBASE_CONFIG);\r\n        // firebase.firestore.setLogLevel('debug');\r\n      }\r\n    }\r\n    \r\n\r\n    this.firestore = firebase.firestore();\r\n    this.auth = firebase.auth();\r\n  }\r\n}\r\n\r\nexport default BaseStore;\r\n","import BaseStore from './BaseStore';\r\n\r\nclass PlayerStore extends BaseStore {\r\n  get(playerId, scopes = {}) {\r\n    return this.firestore\r\n      .collection('games')\r\n      .doc(scopes.gameId)\r\n      .collection('players')\r\n      .doc(playerId)\r\n      .get()\r\n      .then(this._convertDocToPlayer)\r\n  }\r\n\r\n  create(attributes = {}) {\r\n    let chain = this.firestore;\r\n    if ('gameId' in attributes) {\r\n      const gameId = attributes.gameId;\r\n      delete attributes.gameId;\r\n\r\n      chain = chain.collection('games').doc(gameId).collection('players');\r\n    }\r\n\r\n    return chain\r\n      .add(attributes)\r\n      .then(playerRef => playerRef.get())\r\n      .then(this._convertDocToPlayer)\r\n  }\r\n\r\n  list(scopes = {}, onChange) {\r\n    let chain = this.firestore;\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId);\r\n    }\r\n    chain = chain.collection('players');\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    if (onChange !== undefined) {\r\n      return chain.onSnapshot(playersSnapshot => {\r\n        let players = [];\r\n        playersSnapshot.forEach(playerDoc => players.push(this._convertDocToPlayer(playerDoc)));\r\n        onChange(players);\r\n      });\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((p) => this._convertDocToQuestion(p)))\r\n  }\r\n\r\n  _convertDocToPlayer(playerDoc) {\r\n    return Object.assign({ id: playerDoc.id }, playerDoc.data());\r\n  }\r\n}\r\n\r\nexport default PlayerStore;\r\n","import PlayerStore from '../store/PlayerStore';\r\n\r\n\r\nconst addPlayer = (attributes) => {\r\n  return new PlayerStore().create(attributes);\r\n};\r\n\r\nexport default addPlayer;\r\n","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nimport styles from './styles.module.css';\r\n\r\n/**\r\n * Vertically and horizontally centered container. Parent height should be 100%.\r\n */\r\nconst CenteredContainer = props => {\r\n  return (\r\n    <Container className={styles.centered} style={{ maxWidth: props.maxWidth || null, height: props.verticalCentered ? \"100%\" : null }}>\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CenteredContainer;\r\n\r\n","export default class Game {\r\n  static get STATE_DRAFT() { return 'draft' }\r\n  static get STATE_WAITING_FOR_PLAYERS() { return 'waitingForPlayers' }\r\n}\r\n","import BaseStore from './BaseStore';\r\nimport Game from '../entities/Game';\r\n\r\n\r\nclass GameStore extends BaseStore {\r\n  create(attributes = {}) {\r\n    return this.firestore\r\n      .collection('games')\r\n      .add(Object.assign({ state: Game.STATE_DRAFT }, attributes))\r\n      .then(ref => ref.get())\r\n      .then(this._convertDocToGame)\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {String} gameId\r\n   * @param {Function} onChange - if provided, will trigger when Game is updated\r\n   * @returns\r\n   * @memberof GameStore\r\n   */\r\n  get(gameId, onChange) {\r\n    const doc = this._getGameDoc(gameId)\r\n\r\n    if (onChange !== undefined) {\r\n      return doc.onSnapshot(gameDoc => onChange(this._convertDocToGame(gameDoc)));\r\n    }\r\n\r\n    return doc.get().then(this._convertDocToGame);\r\n  }\r\n\r\n  list(scopes = {}) {\r\n    let chain = this.firestore.collection('games');\r\n\r\n    if ('ownerId' in scopes) {\r\n      // FIXME: ideally this would be independent of the gameId\r\n      chain = chain.where(\"ownerId\", \"==\", scopes.ownerId);\r\n    }\r\n\r\n    if ('state' in scopes) {\r\n      chain = chain.where(\"state\", \"==\", scopes.state);\r\n    }\r\n\r\n    if ('shortCode' in scopes) {\r\n      chain = chain.where(\"shortCode\", \"==\", scopes.shortCode);\r\n    }\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToGame(a)))\r\n  }\r\n\r\n  update(gameId, attributes) {\r\n    const doc = this._getGameDoc(gameId);\r\n\r\n    if ('currentQuestionId' in attributes) {\r\n      attributes.currentQuestion = doc.collection('questions').doc(attributes.currentQuestionId);\r\n      delete attributes.currentQuestionId;\r\n    }\r\n\r\n    return doc.update(attributes);\r\n  }\r\n\r\n  _getGameDoc(gameId) {\r\n    return this.firestore\r\n      .collection('games')\r\n      .doc(gameId);\r\n  }\r\n\r\n  _convertDocToGame(gameDoc) {\r\n    let game = Object.assign({ id: gameDoc.id }, gameDoc.data());\r\n    if ('currentQuestion' in game) {\r\n      game.currentQuestionId = game.currentQuestion.id;\r\n      game.currentQuestion = game.currentQuestion.path;  // TODO: remove this\r\n    }\r\n    return game;\r\n  }\r\n}\r\n\r\nexport default GameStore;\r\n","import GameStore from '../store/GameStore';\r\n\r\n\r\nconst getGame = (gameId, onChange) => {\r\n  return new GameStore().get(gameId, onChange);\r\n};\r\n\r\nexport default getGame;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Button, FormGroup, Label, Input, Form } from 'reactstrap';\r\nimport firebase from \"../utils/firebase\";\r\n\r\nimport addPlayer from '../use_cases/addPlayer';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport getGame from '../use_cases/getGame';\r\n\r\n\r\n\r\nconst JoinForm = ({ playerName, setPlayerName, joinGame }) => {\r\n  return (\r\n    <Form onSubmit={e => {\r\n      e.preventDefault();\r\n      joinGame();\r\n    }}>\r\n      <FormGroup>\r\n        <Label>輸入你的暱稱:</Label>\r\n        <Input\r\n          value={playerName}\r\n          onChange={e => setPlayerName(e.target.value)}\r\n        />\r\n      </FormGroup>\r\n      <Button color=\"primary\" type=\"submit\">加入房間</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst JoinRoute = () => {\r\n  let { gameId } = useParams();\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [playerId, setPlayerId] = useState('');\r\n  const [game, setGame] = useState(null);\r\n  let playUrl = \"\";\r\n\r\n  useEffect(() => {\r\n    if (playerId) {\r\n      const db = firebase.firestore();\r\n      const sidCollection = db.collection('SID'); \r\n\r\n      sidCollection.doc(playerId).set({\r\n        name: playerName,\r\n        id: playerId\r\n      })\r\n      .then(() => {\r\n        console.log(\"Player data stored in Firestore!\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error storing player data: \", error);\r\n      });\r\n    }\r\n  }, [playerId, playerName]);\r\n\r\n  useEffect(() => {\r\n    if (gameId && game === null) {\r\n      getGame(gameId).then(setGame);\r\n    }\r\n  }, [gameId, game])\r\n\r\n  playUrl =  \"?playUrl=/play/\" + gameId + \"/as/\" + playerId;\r\n\r\n  const redirectToPlay = () => {\r\n    window.location.replace(`/Avatar-classroom/#/draw${playUrl}`);\r\n  };\r\n\r\n  return (\r\n    <CenteredContainer maxWidth={500} verticalCentered>\r\n      <h1>{game ? game.name : null}</h1>\r\n      {playerId ? (\r\n          redirectToPlay()\r\n       ) : (\r\n          <JoinForm\r\n            playerName={playerName}\r\n            setPlayerName={setPlayerName}\r\n            joinGame={() => addPlayer({ name: playerName, gameId }).then(p => setPlayerId(p.id))}\r\n          />\r\n      )}\r\n    </CenteredContainer>\r\n  )\r\n  \r\n}\r\n\r\nexport default JoinRoute\r\n","import PlayerStore from '../store/PlayerStore';\r\n\r\n\r\nconst getPlayer = (playerId, scopes = {}) => {\r\n  return new PlayerStore().get(playerId, scopes);\r\n};\r\n\r\nexport default getPlayer;\r\n","import BaseStore from './BaseStore';\r\n\r\nclass AnswerStore extends BaseStore {\r\n  /**\r\n   * Creates an Answer.\r\n   *\r\n   * @param {Object} attributes - `gameId` will be used to nest the subcollection\r\n   *  and generate a fully qualified reference for `playerId` and `questionId`\r\n   * @returns Object - an \"Answer\" object\r\n   * @memberof AnswerStore\r\n   */\r\n  create(attributes) {\r\n    const gameId = this._popAttr(attributes, 'gameId');\r\n    const playerId = this._popAttr(attributes, 'playerId');\r\n    const questionId = this._popAttr(attributes, 'questionId');\r\n\r\n    const subcollection = this.firestore\r\n      .collection('games')\r\n      .doc(gameId)\r\n      .collection('answers');\r\n\r\n    return subcollection\r\n      .add(Object.assign({\r\n        player: this.firestore.doc(['/games', gameId, 'players', playerId].join('/')),\r\n        question: this.firestore.doc(['/games', gameId, 'questions', questionId].join('/'))\r\n      }, attributes))\r\n      .then(answerRef => answerRef.get())\r\n      .then(this._convertDocToAnswer)\r\n  }\r\n\r\n  list(scopes = {}) {\r\n    let chain = this.firestore;\r\n\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId);\r\n    }\r\n    chain = chain.collection('answers');\r\n\r\n    if ('questionId' in scopes) {\r\n      // FIXME: ideally this would be independent of the gameId\r\n      chain = chain.where(\"question\", \"==\", this.firestore.doc(`games/${scopes.gameId}/questions/${scopes.questionId}`));\r\n    }\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToAnswer(a)))\r\n  }\r\n\r\n  _convertDocToAnswer(answerDoc) {\r\n    return Object.assign({ id: answerDoc.id }, answerDoc.data());\r\n  }\r\n\r\n  _popAttr(obj, attr) {\r\n    const val = obj[attr];\r\n    delete obj[attr];\r\n    return val;\r\n  }\r\n}\r\n\r\nexport default AnswerStore;\r\n","export function popKey(obj, key) {\r\n  const value = obj[key];\r\n  delete obj[key];\r\n  return value;\r\n}\r\n","import BaseStore from './BaseStore';\r\nimport { popKey } from '../utils/popKey';\r\n\r\nclass QuestionStore extends BaseStore {\r\n  /**\r\n   * Retrieves a Question from the store\r\n   *\r\n   * @param {string} questionId - if a scope is not provided, this must be a\r\n   *   fully qualified ref, as there is no top-level questions collection.\r\n   * @param {Object} [scopes={}]\r\n   * @returns Object\r\n   * @memberof QuestionStore\r\n   */\r\n  get(questionId, scopes = {}) {\r\n    let chain = this.firestore;\r\n    let addAttrs = {};\r\n\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\r\n      addAttrs['gameId'] = scopes.gameId;\r\n    }\r\n\r\n    return chain\r\n      .doc(questionId)\r\n      .get()\r\n      .then(questionDoc => this._convertDocToQuestion(questionDoc, addAttrs));\r\n  }\r\n\r\n  create(attributes) {\r\n    let attributesCopy = Object.assign({}, attributes);\r\n    const gameId = popKey(attributesCopy, 'gameId');\r\n\r\n    let collection = this.firestore.collection('games').doc(gameId).collection('questions');\r\n\r\n    return collection\r\n      .add(attributesCopy)\r\n      .then(qnRef => qnRef.get())\r\n      .then(qnDoc => this._convertDocToQuestion(qnDoc, { gameId }));\r\n  }\r\n\r\n  /**\r\n   * Update an object\r\n   *\r\n   * @param {String} questionId\r\n   * @param {Object} attributes\r\n   * @returns Promise<void>\r\n   * @memberof QuestionStore\r\n   */\r\n  update(questionId, attributes) {\r\n    let attributesCopy = Object.assign({}, attributes);\r\n    const gameId = popKey(attributesCopy, 'gameId');\r\n\r\n    let doc = this.firestore.collection('games').doc(gameId).collection('questions').doc(questionId);\r\n\r\n    return doc.update(attributesCopy);\r\n  }\r\n\r\n  list(scopes = {}) {\r\n    let chain = this.firestore;\r\n    let addAttrs = {};\r\n\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\r\n      addAttrs['gameId'] = scopes.gameId;\r\n    }\r\n    if ('from' in scopes) {\r\n      chain = chain.where(\"order\", \">\", scopes.from);\r\n    }\r\n\r\n    chain = chain.orderBy(\"order\");\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((q) => this._convertDocToQuestion(q, addAttrs)));\r\n  }\r\n\r\n  _convertDocToQuestion(questionDoc, addAttributes = {}) {\r\n    return Object.assign({ id: questionDoc.id }, questionDoc.data(), addAttributes);\r\n  }\r\n}\r\n\r\nexport default QuestionStore;\r\n","import GameStore from '../store/GameStore';\r\nimport AnswerStore from '../store/AnswerStore';\r\nimport QuestionStore from '../store/QuestionStore';\r\n\r\n\r\n/**\r\n * Saves an Answer.\r\n *\r\n * @param {Object} attributes\r\n * @returns Object - an \"Answer\"\r\n */\r\nconst addAnswer = (attributes) => {\r\n  const questionStore = new QuestionStore();\r\n  const timestamp = new Date().getTime();\r\n\r\n  return new GameStore()\r\n    .get(attributes.gameId)\r\n    .then(game => {\r\n      return questionStore.get(game.currentQuestionId, { gameId: game.id });\r\n    })\r\n    .then(question => {\r\n      attributes.isCorrect = question.correctAnswer === attributes.choice;\r\n      attributes.questionId = question.id;\r\n      attributes.timestamp = timestamp;\r\n      console.log(attributes)\r\n      return new AnswerStore().create(attributes);\r\n    })\r\n};\r\n\r\nexport default addAnswer;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Button, Row, Col, Alert } from 'reactstrap';\r\n\r\nimport getPlayer from '../use_cases/getPlayer';\r\nimport addAnswer from '../use_cases/addAnswer';\r\nimport getGame from '../use_cases/getGame';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\nconst SECONDS_TO_CHOOSE = 3;\r\n\r\n\r\nconst AnswerGrid = ({ recordAnswer, isAnswerDisabled }) => {\r\n  return (\r\n    <Row>\r\n      {\r\n        ['A', 'B', 'C', 'D'].map((ans) =>\r\n          <Col sm={12} md={6} className=\"mb-4\" key={ans}>\r\n            <Button\r\n              className=\"w-100 h-100\"\r\n              onClick={() => recordAnswer(ans)}\r\n              disabled={isAnswerDisabled}>\r\n                <strong>{ans}</strong>\r\n            </Button>\r\n          </Col>\r\n        )\r\n      }\r\n    </Row>\r\n  )\r\n}\r\n\r\nconst PlayerRoute = () => {\r\n  let { gameId, playerId } = useParams()\r\n  const [currentGame, setCurrentGame] = useState();\r\n  const [playerName, setPlayerName] = useState('')\r\n  const [answer, setAnswer] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [isAnswerDisabled, setIsAnswerDisabled] = useState(false);\r\n\r\n  const handleGameChange = (game) => {\r\n    if (game) {\r\n      // workaround to clear answer\r\n      setAnswer(null);\r\n      setCurrentGame(game);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (gameId && playerId) {\r\n      getGame(gameId, handleGameChange);\r\n      getPlayer(playerId, { gameId })\r\n        .then(player => setPlayerName(player.name))\r\n    }\r\n  }, [gameId, playerId])\r\n\r\n  const recordAnswer = ans => {\r\n    // playerName is for convenience later, though it feels a little like this knows more about the store than it should\r\n    if (isAnswerDisabled) {\r\n      // If answer selection is disabled, do nothing\r\n      return;\r\n    }\r\n    setIsAnswerDisabled(true); // Disable answer selection\r\n    addAnswer({ playerId, playerName, gameId, choice: ans })\r\n      .then(answer => {\r\n        setAnswer(answer);\r\n        setTimeout(() => {\r\n          setAnswer(null); // Clear the answer after the timeout\r\n          setIsAnswerDisabled(false); // Enable answer selection after the timeout\r\n        }, SECONDS_TO_CHOOSE * 1000);\r\n      })\r\n      .catch(e => {\r\n        setErrorMessage(e);\r\n        setTimeout(() => {\r\n          setErrorMessage('');\r\n          setIsAnswerDisabled(false); // Enable answer selection after an error\r\n        }, 5000);\r\n      });\r\n    }\r\n\r\n  switch (currentGame ? currentGame.state : null) {\r\n    case 'pendingQuestion':\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          準備回答下一題...請看投影喔!\r\n        </CenteredContainer>\r\n      )\r\n    case 'showingQuestion':\r\n      /*if (answer) {\r\n        return (\r\n          <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n            你選了 {answer.choice}!\r\n          </CenteredContainer>\r\n        )\r\n      }*/\r\n\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          <Row className=\"mb-4\">\r\n            <Col sm={12}>\r\n              <h2>Hi {playerName}!</h2>\r\n              <h3>看投影選擇答案:</h3>\r\n            </Col>\r\n          </Row>\r\n          <AnswerGrid recordAnswer={recordAnswer} isAnswerDisabled={isAnswerDisabled}/>\r\n          {errorMessage ? <Alert color=\"danger\">{errorMessage}</Alert> : null}\r\n          {answer && isAnswerDisabled ? (\r\n            \r\n            <Row className=\"mb-4\">\r\n              <Col sm={12}>\r\n                <h2>你選了 {answer.choice}!</h2>                \r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <></>\r\n          )\r\n          }\r\n          \r\n        </CenteredContainer>\r\n      );\r\n    case 'showingQuestionResults':\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          <div>顯示回答結果...請看投影喔!</div>\r\n        </CenteredContainer>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          等待課程開始...開始後請看投影喔!\r\n        </CenteredContainer>\r\n      )\r\n  }\r\n}\r\n\r\nexport default PlayerRoute\r\n","import PlayerStore from '../store/PlayerStore';\r\nimport GameStore from '../store/GameStore';\r\n\r\n\r\nconst getLobbyPlayers = (gameId, onChange, playerStore = new PlayerStore(), gameStore = new GameStore()) => {\r\n  gameStore.update(gameId, { state: 'waitingForPlayers' });\r\n  return playerStore.list({ gameId }, onChange);\r\n};\r\n\r\nexport default getLobbyPlayers;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { Button, ListGroup, ListGroupItem, Spinner } from 'reactstrap';\r\nimport qrcode from \"qrcode\";\r\nimport getLobbyPlayers from '../use_cases/getLobbyPlayers';\r\nimport getGame from '../use_cases/getGame';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport styles from './HomeRoute/styles.module.css'\r\nimport { Grid, Modal } from 'semantic-ui-react';\r\n\r\n\r\nconst PlayerList = ({ players }) => {\r\n  return (\r\n    <div>\r\n      <a className={styles.hero_heading}>正在等待學生加入</a>\r\n      <Spinner\r\n        color=\"dark\"\r\n        type=\"grow\"\r\n      >\r\n        Loading...\r\n      </Spinner>\r\n      <h1>已有&nbsp;<a className=\"display-3\">{players.length}</a>&nbsp;位學生加入</h1>\r\n      <ListGroup>\r\n        {\r\n          players.map(player => (\r\n            <ListGroupItem key={player.id}>{player.name}</ListGroupItem>\r\n          ))\r\n        }\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst QRCode = ({ imageSize }) => {\r\n  const [qrcodeData, setQRCodeData] = useState(null);\r\n  const canvasRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n  const currentUrl = window.location.href;\r\n  const QRUrl = currentUrl.replace(\"lobby\", \"join\");\r\n\r\n  useEffect(() => {\r\n    const generateQRCode = async (url) => {\r\n      try {\r\n        const dataURL = await qrcode.toDataURL(url);\r\n        setQRCodeData(dataURL);\r\n      } catch (error) {\r\n        console.error(\"QR code generation error:\", error);\r\n      }\r\n    };\r\n\r\n    generateQRCode(QRUrl);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (qrcodeData) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const img = new Image();\r\n      img.src = qrcodeData;\r\n\r\n      img.onload = () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.drawImage(img, 0, 0);\r\n      };\r\n    }\r\n  }, [qrcodeData]);\r\n\r\n  return (\r\n    <div className=\"qr-code-container\">\r\n      <canvas ref={canvasRef} width={imageSize} height={imageSize} style={{ display: 'none' }}/>\r\n      <img ref={imageRef} src={qrcodeData} alt=\"QR Code\" className=\"qr-code-image\" style={{ width: imageSize, height: imageSize }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LobbyRoute = props => {\r\n  let { gameId } = useParams();\r\n  const [players, setPlayers] = useState([]);\r\n  const [game, setGame] = useState(null);\r\n  const currentUrl = window.location.origin;\r\n  const displayUrl = `${currentUrl.replace(\"https://\", \"\")}/Avatar-classroom/#/join-s/`;\r\n  const joinUrl = `${currentUrl}/Avatar-classroom/#/join-s/`;\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (gameId) {\r\n      getLobbyPlayers(gameId, setPlayers);\r\n      getGame(gameId).then(setGame);\r\n    }\r\n  }, [gameId])\r\n\r\n  return (\r\n    <Grid>\r\n      \r\n      <Grid.Row centered columns={2}>\r\n        \r\n        <Grid.Column className='mr-3'>\r\n          <Grid.Row>\r\n          <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n            \r\n            <h2>\r\n              加入遊戲請前往\r\n              <br/>\r\n              <a href={joinUrl} rel=\"noopener noreferrer\" target=\"_blank\">{displayUrl}</a> \r\n              <br/>\r\n              並輸入房間代碼\r\n            </h2>\r\n          </CenteredContainer>\r\n          </Grid.Row>\r\n          <Grid.Row verticalAlign='middle'>\r\n            <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n              <br/>\r\n            <h1 className={styles.hero_heading} style={{fontSize:60}}>\r\n              <strong>{game ? game.shortCode : \"___\"}</strong>\r\n            </h1>\r\n            </CenteredContainer>\r\n          </Grid.Row>\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n          <h2>\r\n            或掃描 QR code&nbsp;\r\n            <Button \r\n              outline\r\n              color=\"dark\"\r\n              onClick={() => setIsModalOpen(true)}\r\n            >\r\n              放大\r\n            </Button>\r\n          </h2>\r\n          <Modal basic open={isModalOpen} onClose={() => setIsModalOpen(false)}>\r\n            <Button\r\n              close\r\n              color='primary'\r\n              onClick={() => setIsModalOpen(false)}\r\n            ></Button>\r\n            <CenteredContainer>\r\n              <QRCode imageSize=\"700px\"/>\r\n            </CenteredContainer>\r\n          </Modal>\r\n          <QRCode />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n            <Link to={`/host/${gameId}/questions/pending`}>\r\n              <Button size='lg' color=\"primary\">開始</Button>\r\n            </Link>\r\n        </CenteredContainer>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n          <PlayerList players={players} />\r\n        </CenteredContainer>\r\n      </Grid.Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LobbyRoute\r\n","import BaseStore from './BaseStore';\r\n\r\nclass UserStore extends BaseStore {\r\n  create(attributes = {}) {\r\n    const { email, password } = attributes;\r\n\r\n    return this.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const firebaseUser = userCredentials.user;\r\n        return this._convertUser(firebaseUser);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // auth/email-already-in-use\r\n        // auth/invalid-email\r\n        // auth/operation-not-allowed\r\n        if (errorCode === 'auth/weak-password') {\r\n          alert('The password is too weak.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n      });\r\n  }\r\n\r\n  login({ email, password }) {\r\n    return this.auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const firebaseUser = userCredentials.user;\r\n        return this._convertUser(firebaseUser);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // auth/email-already-in-use\r\n        // auth/invalid-email\r\n        // auth/operation-not-allowed\r\n        if (errorCode === 'auth/weak-password') {\r\n          alert('The password is too weak.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n      });\r\n  }\r\n\r\n  onCurrentUserChange(handleChange) {\r\n    this.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        handleChange(this._convertUser(user));\r\n      }\r\n    })\r\n  }\r\n\r\n  _convertUser(firebaseUser) {\r\n    return {\r\n      id: firebaseUser.uid,\r\n      email: firebaseUser.email,\r\n      name: firebaseUser.displayName,\r\n    };\r\n  }\r\n}\r\n\r\nexport default UserStore;\r\n","import UserStore from \"../store/UserStore\";\r\n\r\nconst signupUser = ({ email, password }) => {\r\n  const userStore = new UserStore();\r\n\r\n  return userStore.create({ email, password });\r\n}\r\n\r\nexport default signupUser;\r\n","import UserStore from \"../store/UserStore\";\r\n\r\nconst loginUser = ({ email, password }) => {\r\n  const userStore = new UserStore();\r\n\r\n  return userStore.login({ email, password });\r\n}\r\n\r\nexport default loginUser;\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport signupUser from '../use_cases/signupUser';\r\nimport loginUser from '../use_cases/loginUser';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\nconst handleSubmit = (event, { email, password, authFn, successCallback }) => {\r\n  event.preventDefault();\r\n  authFn({ email, password })\r\n    .then(user => successCallback(user))\r\n}\r\n\r\nconst SignupForm = ({ onUserChange }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  return (\r\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: signupUser, successCallback: onUserChange })}>\r\n      <FormGroup>\r\n        <Label for=\"email\">Email:</Label>\r\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Password:</Label>\r\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n      </FormGroup>\r\n      <Button color=\"primary\">Sign Up</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst LoginForm = ({ onUserChange }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  return (\r\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: loginUser, successCallback: onUserChange })}>\r\n      <FormGroup>\r\n        <Label for=\"email\">Email:</Label>\r\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Password:</Label>\r\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n      </FormGroup>\r\n      <Button color=\"primary\">Login</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst LoginRoute = props => {\r\n  const [isExistingUser, setIsExistingUser] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const toggleForm = event => {\r\n    event.preventDefault();\r\n    setIsExistingUser(!isExistingUser);\r\n  }\r\n\r\n  if (user) {\r\n    return <Navigate to='/games' />\r\n  } else if (isExistingUser) {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered>\r\n        <h1>Login to Cahoots!</h1>\r\n        <LoginForm onUserChange={setUser} />\r\n        <div>\r\n          No account? <br />\r\n          <Button color=\"link\" onClick={toggleForm}>Sign Up!</Button>\r\n        </div>\r\n      </CenteredContainer>\r\n    );\r\n  } else {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered>\r\n        <h1>Signup for Cahoots!</h1>\r\n        <SignupForm onUserChange={setUser} />\r\n        <div>\r\n          Have an account? <br />\r\n          <Button color=\"link\" onClick={toggleForm}>Login</Button>\r\n        </div>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginRoute\r\n","import UserStore from \"../store/UserStore\";\r\n\r\nconst getCurrentUser = () => {\r\n  const userStore = new UserStore();\r\n\r\n  return new Promise(resolve => userStore.onCurrentUserChange(resolve));\r\n}\r\n\r\nexport default getCurrentUser;\r\n","\r\nimport GameStore from \"../store/GameStore\";\r\nimport getCurrentUser from \"./getCurrentUser\";\r\n\r\n\r\nconst getCurrentUserGames = () => {\r\n  const gameStore = new GameStore();\r\n\r\n  return getCurrentUser().then(user => user ? gameStore.list({ ownerId: user.id }) : null);\r\n}\r\n\r\nexport default getCurrentUserGames;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport getCurrentUserGames from '../use_cases/getCurrentUserGames';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst MyGamesRoute = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [redirectUrl, setRedirectUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCurrentUserGames().then(setGames);\r\n  }, []);\r\n\r\n  if (redirectUrl) {\r\n    return <Navigate to={redirectUrl} />;\r\n  } else {\r\n    return (\r\n      <Container style={{maxWidth: \"500px\"}}>\r\n        <h1>我的課程</h1>\r\n        <ListGroup>\r\n          {\r\n            games.map(game => (\r\n              <ListGroupItem\r\n                key={game.id}\r\n                onClick={() => setRedirectUrl(`/games/${game.id}`)}\r\n                tag=\"button\"\r\n                action\r\n              >\r\n                {game.name}\r\n              </ListGroupItem>\r\n            ))\r\n          }\r\n          <ListGroupItem\r\n            onClick={() => setRedirectUrl('/games/create')}\r\n            tag=\"button\"\r\n            color=\"info\"\r\n            action\r\n          >\r\n            創建新課程\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyGamesRoute\r\n","import GameStore from '../store/GameStore';\r\n\r\n\r\nconst createGame = (attributes, gameStore = new GameStore()) => {\r\n  // generate a random shortcode\r\n  const shortCode = String(Math.floor(Math.random() * Math.floor(9999)));\r\n  return gameStore.create(Object.assign({ shortCode }, attributes));\r\n};\r\n\r\nexport default createGame;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport getCurrentUser from '../use_cases/getCurrentUser';\r\nimport createGame from '../use_cases/createGame';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst save = (gameAttributes, onCreate) => {\r\n  return createGame(gameAttributes).then(onCreate);\r\n}\r\n\r\nconst CreateGameRoute = props => {\r\n  const [user, setUser] = useState(null);\r\n  const [gameName, setGameName] = useState('');\r\n  const [game, setGame] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCurrentUser().then(setUser);\r\n  }, []);\r\n\r\n  if (game) {\r\n    return <Navigate to=\"/games\" />;\r\n  } else {\r\n    return (\r\n      <Container style={{maxWidth: \"500px\"}}>\r\n        <h1>創建您的課程</h1>\r\n        <FormGroup>\r\n          <Label for=\"name\">課程名稱:</Label>\r\n          <Input id=\"name\" name=\"name\" value={gameName} onChange={e => setGameName(e.target.value)} />\r\n        </FormGroup>\r\n        <Button color=\"primary\" onClick={() => save({ name: gameName, ownerId: user.id }, setGame)}>確認</Button>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateGameRoute\r\n","import QuestionStore from \"../store/QuestionStore\";\r\n\r\nconst getQuestions = (scopes) => {\r\n  const questionStore = new QuestionStore();\r\n  return questionStore.list(scopes)\r\n};\r\n\r\nexport default getQuestions;\r\n","import QuestionStore from \"../store/QuestionStore\";\r\nimport { popKey } from '../utils/popKey';\r\n\r\n/**\r\n * Creates a new Question or saves an existing one.\r\n *\r\n * @param {Object} attributes - should minimally contain `gameId`. If no `id` is included, is assumed to be a new Question\r\n * @returns Promise - resolves to either Object or void\r\n */\r\nconst saveQuestion = (attributes, questionStore = new QuestionStore()) => {\r\n  let attributesCopy = Object.assign({}, attributes);\r\n\r\n  if ('id' in attributesCopy) {\r\n    const questionId = popKey(attributesCopy, 'id');\r\n    return questionStore.update(questionId, attributesCopy);\r\n  } else {\r\n    return questionStore.create(attributesCopy);\r\n  }\r\n};\r\n\r\nexport default saveQuestion;\r\n","import { doc, deleteDoc } from \"firebase/firestore\";\r\nimport firebase from \"../utils/firebase\";\r\nimport { useParams } from \"react-router-dom\"\r\n\r\n\r\nconst deleteQuestion = async (questionId, gameId) => {\r\n    \r\n    const db = firebase.firestore();\r\n    \r\n    try {\r\n        await deleteDoc(doc(db, 'games', gameId, 'questions', questionId))\r\n        window.location.reload();\r\n    } catch (error) {\r\n        throw new Error('Error deleting question: ' + error.message);\r\n    }\r\n};\r\n\r\nexport default deleteQuestion;\r\n","import React, { useState, useParams } from 'react';\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input, Card, CardTitle, Button, Spinner, FormGroup, Label } from 'reactstrap';\r\nimport saveQuestion from '../use_cases/saveQuestion';\r\nimport deleteQuestion from '../use_cases/deleteQuestion';\r\n\r\nconst STATE_DEFAULT = 'default';\r\nconst STATE_SAVING = 'saving';\r\n\r\n\r\nexport const EditableQuestion = ({ question, game }) => {\r\n  const [draftQuestion, setDraftQuestion] = useState(question)\r\n  const [componentState, setComponentState] = useState(STATE_DEFAULT);\r\n\r\n  const updateDraft = (newAttributes) => {\r\n    setDraftQuestion(Object.assign({}, draftQuestion, newAttributes));\r\n  }\r\n\r\n  const handleDeleteQuestion = async () => {\r\n    setComponentState(STATE_SAVING);\r\n    try {\r\n      await deleteQuestion(draftQuestion.id, game); // Replace 'draftQuestion.id' with the appropriate way to identify the question in Firebase.\r\n      // Assuming 'deleteQuestion' function deletes the question in Firebase.\r\n      setComponentState(STATE_DEFAULT);\r\n      // Optionally, you can clear the draftQuestion state or handle any other cleanup.\r\n    } catch (error) {\r\n      console.error(\"Error deleting question\", error);\r\n      setComponentState(STATE_DEFAULT);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Card body className=\"mt-4 mb-4\">\r\n        <CardTitle>\r\n          <InputGroup className=\"mb-2\">\r\n            <Input\r\n              type=\"textarea\"\r\n              placeholder=\"請輸入完整題目\"\r\n              value={draftQuestion.text || ''}\r\n              onChange={e => updateDraft({ text: e.target.value })}\r\n            />\r\n          </InputGroup>\r\n        </CardTitle>\r\n        {['answerA', 'answerB', 'answerC', 'answerD'].map((ansKey) => (\r\n          <InputGroup key={ansKey} className=\"mb-2\">\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText>{ansKey}</InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input\r\n              placeholder=\"請輸入選項\"\r\n              value={ansKey in draftQuestion ? draftQuestion[ansKey] : ''}\r\n              onChange={e => updateDraft({[ansKey]: e.target.value})}\r\n            />\r\n          </InputGroup>\r\n        ))}\r\n        <FormGroup>\r\n          <Label for=\"correctAnswerDropdown\">正確答案</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"correctAnswer\"\r\n            id=\"correctAnswerDropdown\"\r\n            data-testid=\"correctAnswerDropdown\"\r\n            value={draftQuestion.correctAnswer || '選擇正確答案'}\r\n            onChange={e => updateDraft({ correctAnswer: e.target.value })}\r\n          >\r\n            <option>A</option>\r\n            <option>B</option>\r\n            <option>C</option>\r\n            <option>D</option>\r\n            <option hidden>選擇正確答案</option>\r\n          </Input>\r\n        </FormGroup>\r\n        {componentState === STATE_SAVING ?\r\n          <Button disabled color=\"primary\" className=\"mt-4\">\r\n            <Spinner type=\"grow\" size=\"sm\" color=\"info\" className=\"mr-2\" />\r\n            保存中...\r\n          </Button>\r\n          :\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"mt-4\"\r\n            onClick={() => {\r\n              setComponentState(STATE_SAVING);\r\n              saveQuestion(draftQuestion).then(() => setComponentState(STATE_DEFAULT));\r\n            }}\r\n          >\r\n            保存\r\n          </Button>\r\n          \r\n        }\r\n        <Button\r\n          color=\"danger\"\r\n          className=\"mt-4\"\r\n          onClick={handleDeleteQuestion}\r\n          disabled={componentState === STATE_SAVING}\r\n        >\r\n          {componentState === STATE_SAVING ? (\r\n            <>\r\n              <Spinner type=\"grow\" size=\"sm\" color=\"info\" className=\"mr-2\" />\r\n              刪除中...\r\n            </>\r\n          ) : (\r\n            \"刪除題目\"\r\n          )}\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Container } from 'reactstrap';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport getGame from '../use_cases/getGame';\r\nimport getQuestions from '../use_cases/getQuestions';\r\nimport { EditableQuestion } from '../view_components/EditableQuestion';\r\nimport saveQuestion from '../use_cases/saveQuestion';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport { doc, deleteDoc } from \"firebase/firestore\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\n\r\nconst GameDetailsRoute = props => {\r\n  const { gameId } = useParams();\r\n  const [game, setGame] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const handleDeleteGame = async () => {\r\n    if (gameId && game) {\r\n      try {\r\n        const db = firebase.firestore();        \r\n        await deleteDoc(doc(db, \"games\", gameId));        \r\n        navigate('/games');\r\n      } catch (error) {\r\n        console.error('刪除遊戲時發生錯誤', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (gameId && game === null) {\r\n      getGame(gameId)\r\n        .then(game => {\r\n          setGame(game);\r\n          return game;\r\n        })\r\n        .then(game => getQuestions({ gameId: game.id }))\r\n        .then(setQuestions);\r\n    }\r\n  }, [gameId, game]);\r\n\r\n  if (game) {\r\n    return (\r\n      <CenteredContainer maxWidth={500}>\r\n        <h1 className=\"mb-4\">{game.name}</h1>\r\n        <Container>\r\n          {questions.length > 0 ? (\r\n            <Link to={`/lobby/${gameId}`}>\r\n              <Button color=\"success\" size=\"lg\">\r\n                開始課程\r\n              </Button>\r\n            </Link>\r\n          ) : null}\r\n          <br/><br/>\r\n          <Button color=\"primary\" onClick={() => setEditMode(!editMode)}>\r\n            {editMode ? '結束編輯' : '編輯課程'}\r\n          </Button>\r\n          <br/><br/>\r\n          <Button\r\n            style={{ marginBottom: 20 }}\r\n            onClick={handleDeleteGame}\r\n            color=\"danger\"\r\n          >\r\n            刪除課程\r\n          </Button>\r\n        </Container>\r\n        {editMode && (\r\n          <Container>\r\n            {questions.map((question) => (\r\n              <EditableQuestion key={question.id} question={question} game={gameId} />\r\n            ))}\r\n            <Container>\r\n              <Button\r\n                onClick={() => {\r\n                  saveQuestion({ gameId: gameId, order: questions.length + 1 }).then((newQn) =>\r\n                    setQuestions(questions.concat([newQn]))\r\n                  );\r\n                }}\r\n              >\r\n                新增題目\r\n              </Button>\r\n              <br/>\r\n            </Container>\r\n          </Container>\r\n        )}\r\n      </CenteredContainer>\r\n    );\r\n  } else {\r\n    return (<CenteredContainer maxWidth={500}>Loading...</CenteredContainer>)\r\n  }\r\n}\r\n\r\nexport default GameDetailsRoute\r\n","import GameStore from '../store/GameStore';\r\nimport QuestionStore from '../store/QuestionStore';\r\n\r\nconst startNextQuestion = (gameId) => {\r\n  const gameStore = new GameStore();\r\n  const questionStore = new QuestionStore();\r\n\r\n  gameStore.update(gameId, { state: 'pendingQuestion' });\r\n  return gameStore\r\n    .get(gameId)\r\n    .then(game => {\r\n      if ('currentQuestion' in game) {\r\n        return questionStore.get(game.currentQuestion);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n    })\r\n    .then(currentQuestion => {\r\n      const nextOrder = currentQuestion ? currentQuestion.order : 0 ;\r\n      return questionStore.list({ gameId, from: nextOrder, limit: 1 });\r\n    })\r\n    .then(questionArray => {\r\n      const question = questionArray[0];\r\n      if (question) {\r\n        gameStore.update(gameId, { currentQuestionId: question.id });\r\n      }\r\n\r\n      return question;\r\n    });\r\n}\r\n\r\nexport default startNextQuestion;","const calculateTimeLeft = date => {\r\n  const difference = (date - Date.now()) / 1000;\r\n  return difference > 0 ? difference : 0;\r\n};\r\n\r\nconst tickTimer = ({ endDate, intervalCallback, endedCallback }) => {\r\n  setTimeout(() => {\r\n    // timeLeft is in seconds\r\n    const timeLeft = calculateTimeLeft(endDate);\r\n    if (timeLeft > 0) {\r\n      intervalCallback(timeLeft);\r\n      tickTimer({ endDate, intervalCallback, endedCallback });\r\n    }\r\n    else {\r\n      endedCallback(timeLeft);\r\n    }\r\n  }, 1000);\r\n};\r\n\r\nexport const startTimer = ({ seconds, intervalCallback, endedCallback }) => {\r\n  const endDate = new Date(Date.now() + 1000 * seconds);\r\n  tickTimer({ endDate, intervalCallback, endedCallback });\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Navigate } from \"react-router-dom\"\r\n\r\nimport startNextQuestion from '../use_cases/startNextQuestion';\r\nimport { startTimer } from '../utils/calculateTimeLeft';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\nconst SECONDS_TO_QUESTION = 3;\r\n\r\nconst PendingQuestionRoute = ({ parentUrl }) => {\r\n  let { gameId } = useParams();\r\n  const [ timeLeft, setTimeLeft ] = useState(SECONDS_TO_QUESTION);\r\n  const [ nextQuestion, setNextQuestion ] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (gameId) {\r\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\r\n      startNextQuestion(gameId).then(setNextQuestion);\r\n    }\r\n  }, [gameId])\r\n  let url = \"/host/\" + gameId;\r\n  return (\r\n    <CenteredContainer verticalCentered={true}>\r\n      <div style={{fontSize: 25}}>Next question in...</div>\r\n      <div className=\"display-1 mt-4\">\r\n        {Math.ceil(timeLeft)}\r\n      </div>\r\n      {timeLeft <= 0 && nextQuestion\r\n        ? <Navigate to={`${url}/questions/current`} />\r\n        : null\r\n      }\r\n    </CenteredContainer>\r\n  )\r\n}\r\n\r\nexport default PendingQuestionRoute","import QuestionStore from \"../store/QuestionStore\";\r\n\r\nconst getQuestion = (questionId, scopes, questionStore = new QuestionStore()) => {\r\n  return questionStore.get(questionId, scopes)\r\n};\r\n\r\nexport default getQuestion;\r\n","import GameStore from '../store/GameStore';\r\nimport AnswerStore from '../store/AnswerStore';\r\n\r\nconst calculateQuestionResults = (gameId, questionId, gameStore = new GameStore(), answerStore = new AnswerStore()) => {\r\n  gameStore.update(gameId, { state: 'showingQuestionResults' });\r\n  return answerStore\r\n    .list({ gameId, questionId })\r\n    .then(answers => {\r\n      \r\n      let results = { 'A': [], 'B': [], 'C': [], 'D': []};\r\n\r\n      const latestAnswers = answers.reduce((acc, answer) => {\r\n        if (!acc[answer.playerName] || answer.timestamp > acc[answer.playerName].timestamp) {\r\n          acc[answer.playerName] = answer;\r\n        }\r\n        return acc;\r\n      }, {});\r\n\r\n      Object.values(latestAnswers).forEach(answer => {\r\n        results[answer.choice] = results[answer.choice].concat(answer.playerName);\r\n      });\r\n\r\n      return results;\r\n    });\r\n}\r\n\r\nexport default calculateQuestionResults;\r\n","import QuestionStore from '../store/QuestionStore';\r\n\r\nconst countTotalQuestions = (gameId) => {\r\n  const questionStore = new QuestionStore();\r\n  return questionStore\r\n    .list({ gameId })\r\n    .then(questions => questions.length);\r\n}\r\n\r\nexport default countTotalQuestions;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { Button, Card, CardBody, Row, Col, CardTitle, CardText, Container } from 'reactstrap';\r\n\r\nimport getQuestion from '../use_cases/getQuestion';\r\nimport calculateQuestionResults from '../use_cases/calculateQuestionResults';\r\nimport countTotalQuestions from '../use_cases/countTotalQuestions';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\nconst isCorrectChoice = (question, choice) => {\r\n  return question.correctAnswer === choice;\r\n}\r\n\r\nconst ResultBoard = ({ result, className, question }) => {\r\n  return (\r\n    <div className={className}>\r\n      <h2 className=\"mb-4\">{question ? question.text : null}</h2>\r\n      <Row>\r\n        {\r\n          Object.entries(result).map(([answer, players]) => (\r\n            <Col sm={12} md={6} className=\"mb-4\">\r\n              <Card\r\n                color={isCorrectChoice(question, answer) ? 'success' : null}\r\n                inverse={isCorrectChoice(question, answer) ? true : null}\r\n              >\r\n                <CardBody>\r\n                  <CardTitle >\r\n                    <strong className='mr-2' style={{fontSize: 20}}>{answer}</strong>\r\n                    {isCorrectChoice(question, answer) ? '✔️' : '❌'}\r\n                  </CardTitle>\r\n                  <CardTitle>\r\n                    <strong style={{fontSize: 17}}>\r\n                      {question[`answer${answer}`]}\r\n                    </strong>\r\n                  </CardTitle>\r\n                  <CardText style={{fontSize: 17}}>\r\n                    {players.join(', ')}\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst QuestionResultsRoute = ({ parentUrl }) => {\r\n  let { gameId, questionId } = useParams()\r\n  let [result, setResult] = useState({})\r\n  let [question, setQuestion] = useState(null)\r\n  let [totalQuestionCount, setTotalQuestionCount] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (gameId && questionId) {\r\n      getQuestion(questionId, { gameId }).then(setQuestion);\r\n      countTotalQuestions(gameId).then(setTotalQuestionCount);\r\n      calculateQuestionResults(gameId, questionId).then(setResult);\r\n    }\r\n  }, [gameId, questionId])\r\n  let url = \"/host/\" + gameId;\r\n  return (\r\n    <CenteredContainer verticalCentered={true}>\r\n      <ResultBoard className=\"mb-4\" result={result} question={question} />\r\n      <Container>\r\n        {question && question.order >= totalQuestionCount ?\r\n          <Link to={`${url}/results/final`}>\r\n            <Button color=\"primary\">\r\n              顯示課程最終結果\r\n            </Button>\r\n          </Link>\r\n          :\r\n          <Link to={`${url}/questions/pending`}>\r\n            <Button color=\"primary\">\r\n              下一題\r\n            </Button>\r\n          </Link>\r\n        }\r\n      </Container>\r\n    </CenteredContainer>\r\n  )\r\n}\r\n\r\nexport default QuestionResultsRoute\r\n\r\n// no result, no question, start button\r\n// no result, question, no buttons if time out, else show button if within time\r\n// have result, show result, hide question, next button (clears result)\r\n","import AnswerStore from '../store/AnswerStore';\r\nimport GameStore from '../store/GameStore';\r\nconst gameStore = new GameStore()\r\n\r\n/**\r\n * Saves an Answer.\r\n *\r\n * @param {Object} attributes\r\n * @returns Object - an \"Answer\"\r\n */\r\nconst calculateFinalResults = (gameId) => {\r\n  const answerStore = new AnswerStore();\r\n\r\n  gameStore.update(gameId, { state: 'draft' });\r\n  \r\n  return answerStore.list({ gameId })\r\n    .then(answers => {\r\n      return answers\r\n        .filter(val => 'isCorrect' in val && !!val.isCorrect)\r\n        .reduce((acc, curr) => {\r\n          if (curr.playerName in acc) {\r\n            acc[curr.playerName] += 1;\r\n          } else {\r\n            acc[curr.playerName] = 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n    })\r\n};\r\n\r\nexport default calculateFinalResults;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { ListGroup, ListGroupItem, Badge, Button, Container } from 'reactstrap';\r\nimport calculateFinalResults from '../use_cases/calculateFinalResults';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\n// Compares two Arrays of playerName, score in terms of ascending score.\r\nconst sortScores = (a, b) => {\r\n  const [, score1] = a;\r\n  const [, score2] = b;\r\n\r\n  if (score1 > score2) {\r\n    return -1;\r\n  }\r\n  if (score1 < score2) {\r\n    return 1;\r\n  }\r\n  // a must be equal to b\r\n  return 0;\r\n}\r\n\r\nconst Leaderboard = ({ results }) => {\r\n  let scores = Object.entries(results);\r\n  scores.sort(sortScores);\r\n\r\n  return (\r\n    <ListGroup>\r\n      {\r\n        scores.slice(0, 5).map(([key, value], index) => {\r\n          if (index <= 2) {\r\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\" style={{fontSize: 17}}>{key}<Badge className=\"ml-4 p-2\" color=\"success\">{value}</Badge></ListGroupItem>;\r\n          } else {\r\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\">{key}<Badge className=\"ml-4 p-2\">{value}</Badge></ListGroupItem>;\r\n          }\r\n        })\r\n      }\r\n    </ListGroup>\r\n\r\n  );\r\n}\r\n\r\nconst FinalResultsRoute = props => {\r\n  let { gameId } = useParams()\r\n  let [results, setResults] = useState({})\r\n  \r\n  useEffect(() => {\r\n    if (gameId) {\r\n      calculateFinalResults(gameId).then(setResults);\r\n    }\r\n  }, [gameId])\r\n  \r\n  return (\r\n    <CenteredContainer verticalCentered={true} maxWidth={500}>\r\n      <h1>\r\n        課程結果\r\n      </h1>\r\n      <Leaderboard results={results} />\r\n      <br/>\r\n      <Container>\r\n        <Link to={`/games`}>\r\n          <Button color=\"primary\"> \r\n            回題目列表\r\n          </Button>\r\n        </Link>\r\n        \r\n      </Container>\r\n      <br/>\r\n      <Container>\r\n        <Link to={`/`}>\r\n          <Button color=\"primary\"> \r\n            回首頁\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </CenteredContainer>\r\n    \r\n  )\r\n  \r\n}\r\n\r\nexport default FinalResultsRoute\r\n","import GameStore from '../store/GameStore';\r\nimport QuestionStore from '../store/QuestionStore';\r\n\r\nconst showCurrentQuestion = (gameId, gameStore = new GameStore(), questionStore = new QuestionStore()) => {\r\n  gameStore.update(gameId, { state: 'showingQuestion' });\r\n  return gameStore\r\n    .get(gameId)\r\n    .then(game => {\r\n      return questionStore.get(game.currentQuestion)\r\n    });\r\n}\r\n\r\nexport default showCurrentQuestion;\r\n","import React from 'react'\r\nimport { Card, CardBody, Row, Col, CardTitle, CardText } from 'reactstrap';\r\n\r\n\r\n\r\nconst Question = ({ question, className }) => (\r\n  <div className={className}>\r\n    <h2 className=\"mb-4\" style={{fontSize: 24}}>{question.text}</h2>\r\n    <Row>\r\n      {\r\n        ['A', 'B', 'C', 'D'].map((ans) =>\r\n          <Col key={ans} sm={12} md={6} className=\"mb-4\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle><strong style={{fontSize: 20}}>{ans}</strong></CardTitle>\r\n                <CardText style={{fontSize: 20}}>\r\n                  {question[`answer${ans}`]}\r\n                </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        )\r\n      }\r\n    </Row>\r\n  </div>\r\n)\r\n\r\nexport default Question\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { Button } from 'reactstrap';\r\n\r\nimport showCurrentQuestion from '../use_cases/showCurrentQuestion'\r\nimport Question from '../view_components/Question'\r\nimport { startTimer } from '../utils/calculateTimeLeft';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\nconst SECONDS_TO_QUESTION = 10;\r\n\r\nconst ShowResultsBtn = ({ isVisible, linkTo }) => {\r\n  const handleBtnClick = () => {\r\n    if (isVisible) {\r\n      window.location.href = linkTo;\r\n    }\r\n  };\r\n\r\n  return isVisible ? (\r\n    <Button color=\"primary\" onClick={handleBtnClick}>\r\n      顯示回答結果\r\n    </Button>\r\n  ) : null;\r\n};\r\n\r\nconst CurrentQuestionRoute = ({ parentUrl }) => {\r\n  let { gameId } = useParams();\r\n  const [question, setQuestion] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(SECONDS_TO_QUESTION);\r\n\r\n  useEffect(() => {\r\n    if (gameId) {\r\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\r\n      showCurrentQuestion(gameId).then(setQuestion);\r\n    }\r\n  }, [gameId])\r\n  //let url = \"/host/\" + gameId ;\r\n  return (\r\n    <CenteredContainer verticalCentered={true}>\r\n      {question ?\r\n          <div>\r\n            <Question question={question} />\r\n            <div className=\"mt-4\">剩餘時間:</div>\r\n            <div className=\"display-1\">\r\n              {Math.ceil(timeLeft)}\r\n            </div>\r\n            <ShowResultsBtn\r\n              isVisible={timeLeft <= 0}\r\n              linkTo={`https://cxw0520.github.io/AC-Three/?GID=${gameId}&QID=${question.id}`}\r\n            />\r\n          </div>\r\n        : <div>請稍等...</div>\r\n      }\r\n    </CenteredContainer>\r\n  )\r\n}\r\n\r\nexport default CurrentQuestionRoute\r\n","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport firebase from \"./utils/firebase\";\r\n\r\nfunction Header(){\r\n    const [user, setUser] = React.useState(null);\r\n    React.useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((currentUser) => {\r\n            setUser(currentUser)\r\n        });\r\n    }, []);\r\n    return (\r\n        <Menu size=\"large\">\r\n            <Menu.Item as={Link} to=\"/\">\r\n                Avatar Classroom\r\n            </Menu.Item>\r\n            \r\n            <Menu.Menu position=\"right\">\r\n                {user ? (\r\n                <>  \r\n                    <Menu.Item as={Link} to =\"/games\">我的課程</Menu.Item>\r\n                    <Menu.Item as={Link} to =\"/join-s\">學生連結</Menu.Item>\r\n                    <Menu.Item as={Link} to =\"/settings\">設定</Menu.Item>\r\n                    <Menu.Item \r\n                        onClick={() => firebase.auth().signOut()} \r\n                        as={Link} to =\"/\"\r\n                    >\r\n                        登出\r\n                    </Menu.Item>\r\n                </> \r\n                ) : (\r\n                <>\r\n                    <Menu.Item as={Link} to =\"/join-s\">學生連結</Menu.Item>\r\n                    <Menu.Item as={Link} to =\"/signin\">註冊/登入</Menu.Item>\r\n                </>\r\n                )}\r\n            </Menu.Menu>\r\n            \r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Menu, Form, Container, Message} from 'semantic-ui-react'\r\nimport firebase from '../utils/firebase';\r\nimport \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Signin(){\r\n    const [activeItem, setActiveItem] = React.useState('register');\r\n    const [email, setEmail]= React.useState('');\r\n    const [password, setPassword]= React.useState('');\r\n    const navigate = useNavigate();\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    \r\n    function onSubmit(){\r\n        setIsLoading(true);\r\n        if(activeItem === 'register'){\r\n            firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(() =>{\r\n                navigate('/');\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                switch(error.code){\r\n                    case 'auth/email-already-in-use':\r\n                        setErrorMessage('信箱已存在');\r\n                        break;\r\n                    case 'auth/invalid-email':\r\n                        setErrorMessage('信箱格式不正確');\r\n                        break;\r\n                    case 'auth/weak-password':\r\n                        setErrorMessage('密碼強度不足');\r\n                        break;\r\n                    default:\r\n                }\r\n                \r\n            });\r\n        }else if(activeItem === 'signin'){\r\n            firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(() =>{\r\n                navigate('/');\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                console.log(errorCode);\r\n                switch(errorCode){\r\n                    case 'auth/invalid-email':\r\n                        setErrorMessage('信箱格式不正確');\r\n                        break;\r\n                    case 'auth/internal-error':\r\n                        setErrorMessage('此信箱尚未註冊 或 密碼錯誤');\r\n                        setIsLoading(false);\r\n                        break;\r\n                    default:\r\n                }\r\n            \r\n            });\r\n        }\r\n    }\r\n    return(\r\n        <Container>\r\n            <Menu widths=\"2\">\r\n                <Menu.Item \r\n                    active={activeItem === 'register'} \r\n                    onClick={() => {\r\n                        setErrorMessage('');\r\n                        setActiveItem('register');\r\n                    }}\r\n                >\r\n                    註冊\r\n                </Menu.Item>\r\n                <Menu.Item \r\n                    active={activeItem === 'signin'}\r\n                    onClick={() => {\r\n                        setErrorMessage('');\r\n                        setActiveItem('signin');\r\n                    }}\r\n                >\r\n                    登入\r\n                </Menu.Item>\r\n            </Menu>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Input \r\n                    label=\"信箱\" \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"請輸入信箱\"\r\n                />\r\n                <Form.Input \r\n                    label=\"密碼\" \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"請輸入密碼\"\r\n                    type=\"password\"\r\n                />\r\n                {errorMessage && <Message negative>{errorMessage}</Message>}\r\n                <Form.Button loading={isLoading}>\r\n                    {activeItem === 'register' && '註冊'}\r\n                    {activeItem === 'signin' && '登入'}\r\n                </Form.Button>\r\n                    \r\n            </Form>\r\n        </Container>\r\n    );\r\n    \r\n}\r\n\r\nexport default Signin;","import React, { useState } from \"react\";\r\nimport {\r\n  //CanvasPath,\r\n  //ExportImageType,\r\n  ReactSketchCanvas,\r\n  //ReactSketchCanvasProps,\r\n  //ReactSketchCanvasRef,\r\n} from \"react-sketch-canvas\";\r\nimport firebase from \"../utils/firebase\";\r\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\r\n\r\nconst storage = getStorage();\r\n\r\nconst Handlers = [\r\n  [\"string\", () => {}, \"string\"],\r\n];\r\n\r\nfunction InputField({\r\n  fieldName,\r\n  type = \"text\",\r\n  canvasProps,\r\n  setCanvasProps,\r\n  displayName,\r\n}) {\r\n  const handleChange = ({\r\n    target,\r\n  }) => {\r\n    setCanvasProps((prevCanvasProps) => ({\r\n      ...prevCanvasProps,\r\n      [fieldName]: target.value,\r\n    }));\r\n  };\r\n\r\n  const id = `validation${fieldName}`;\r\n\r\n  return (\r\n    <div className=\"p-0 col-10\">\r\n      <label htmlFor={id} className=\"form-label\">\r\n        {displayName}\r\n      </label>\r\n      <input\r\n        name={fieldName}\r\n        type={type}\r\n        className=\"form-control\"\r\n        id={id}\r\n        value={canvasProps[fieldName]}\r\n        onChange={handleChange}\r\n        min={1}\r\n        max={30}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Draw() {\r\n  const [playUrl, setPlayUrl] = React.useState(\"\");\r\n  const [svgRef, setSvgRef] = React.useState(null);\r\n  React.useEffect(() => {\r\n    const equalParam = window.location.href.lastIndexOf(\"=\") + 1;\r\n    const playUrl = window.location.href.substring(equalParam);\r\n    setPlayUrl(playUrl);\r\n    \r\n    const lastParam = window.location.href.lastIndexOf(\"/\") + 1;\r\n    const SID = window.location.href.substring(lastParam);\r\n    const computedSvgRef = ref(storage, `svgs/${SID + \".svg\"}`);\r\n    setSvgRef(computedSvgRef);\r\n  }, []);\r\n  //console.log(\"playUrl:\", playUrl);\r\n  \r\n  const [canvasProps, setCanvasProps] = React.useState({\r\n    className: \"react-sketch-canvas\",\r\n    width: \"100%\",\r\n    height: \"450PX\",\r\n    backgroundImage:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/7/70/Graph_paper_scan_1600x1000_%286509259561%29.jpg\",\r\n    preserveBackgroundImageAspectRatio: \"none\",\r\n    strokeWidth: 4,\r\n    eraserWidth: 5,\r\n    strokeColor: \"#000000\",\r\n    canvasColor: \"#FFFFFF\",\r\n    style: { borderRight: \"1px solid #CCC\" },\r\n    svgStyle: {},\r\n    exportWithBackgroundImage: false,\r\n    withTimestamp: true,\r\n    allowOnlyPointerType: \"all\",\r\n    withViewBox: false,\r\n  });\r\n\r\n  const inputProps = [\r\n    //[\"className\", \"text\"],\r\n    //[\"width\", \"text\"],\r\n    //[\"height\", \"text\"],\r\n    //[\"backgroundImage\", \"text\"],\r\n    //[\"preserveBackgroundImageAspectRatio\", \"text\"],\r\n    [\"strokeWidth\", \"range\", \"畫筆粗細\"],\r\n    [\"eraserWidth\", \"range\", \"橡皮擦粗細\"],\r\n  ];\r\n\r\n  const canvasRef = React.createRef();\r\n\r\n  const [penButtonOutline, setPenButtonOutline] = React.useState(\"\");\r\n  const [eraserButtonOutline, setEraserButtonOutline] = React.useState(\"outline-\");\r\n  const [dataURI, setDataURI] = React.useState(\"\");\r\n  const [svg, setSVG] = React.useState(\"\");\r\n  const [paths, setPaths] = React.useState([]);\r\n  const [lastStroke, setLastStroke] = React.useState({\r\n    stroke: null,\r\n    isEraser: null,\r\n  });\r\n  //const [pathsToLoad, setPathsToLoad] = React.useState(\"\");\r\n  //const [sketchingTime, setSketchingTime] = React.useState(0);\r\n  const [exportImageType, setexportImageType] = React.useState(\"png\");\r\n\r\n /* const imageExportHandler = async () => {\r\n    const exportImage = canvasRef.current?.exportImage;\r\n\r\n    if (exportImage) {\r\n      const exportedDataURI = await exportImage(exportImageType);\r\n      setDataURI(exportedDataURI);\r\n    }\r\n  };*/\r\n\r\n  const [isDone, setIsDone] = useState(false);\r\n  \r\n  const svgExportHandler = async () => {\r\n    const exportSvg = canvasRef.current?.exportSvg;\r\n\r\n    if (exportSvg) {\r\n      var exportedDataURI = await exportSvg();\r\n      setSVG(exportedDataURI);\r\n      setIsDone(true);\r\n      //console.log(exportedDataURI);\r\n      \r\n      exportedDataURI = exportedDataURI\r\n        .replace('<rect id=\"react-sketch-canvas__mask-background\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\"></rect></g><defs></defs><g id=\"react-sketch-canvas__canvas-background-group\"><rect id=\"react-sketch-canvas__canvas-background\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#FFFFFF\"></rect>', '');\r\n      const blob = new Blob([exportedDataURI], { type: 'image/svg+xml' });\r\n      //console.log(blob);\r\n      uploadBytes(svgRef, blob).then((snapshot) => {\r\n          console.log('SVG upload to Firebase succeed');\r\n      }).catch((error) => {\r\n          console.error('SVG upload to Firebase failed', error);\r\n      });\r\n    }\r\n    \r\n  };\r\n  \r\n  const penHandler = () => {\r\n    const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n    if (eraseMode) {\r\n      setPenButtonOutline(\"\");\r\n      setEraserButtonOutline(\"outline-\");\r\n      eraseMode(false);\r\n    }\r\n  };\r\n\r\n  const eraserHandler = () => {\r\n    const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n    if (eraseMode) {\r\n      setPenButtonOutline(\"outline-\");\r\n      setEraserButtonOutline(\"\");\r\n      eraseMode(true);\r\n    }\r\n  };\r\n  \r\n  const undoHandler = () => {\r\n    const undo = canvasRef.current?.undo;\r\n\r\n    if (undo) {\r\n      undo();\r\n    }\r\n  };\r\n\r\n  const redoHandler = () => {\r\n    const redo = canvasRef.current?.redo;\r\n\r\n    if (redo) {\r\n      redo();\r\n    }\r\n  };\r\n\r\n  const clearHandler = () => {\r\n    const clearCanvas = canvasRef.current?.clearCanvas;\r\n\r\n    if (clearCanvas) {\r\n      clearCanvas();\r\n    }\r\n  };\r\n\r\n  const resetCanvasHandler = () => {\r\n    const resetCanvas = canvasRef.current?.resetCanvas;\r\n\r\n    if (resetCanvas) {\r\n      resetCanvas();\r\n    }\r\n  };\r\n\r\n  const createButton = (\r\n    label,\r\n    handler,\r\n    themeColor,\r\n    outline,\r\n    spacingClass\r\n  ) => (\r\n    <button\r\n      key={label}\r\n      className={`btn btn-${outline}${themeColor} ${spacingClass} mb-2`}\r\n      type=\"button\"\r\n      onClick={handler}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n\r\n  const goToNext = () =>{\r\n      if(isDone) {\r\n        window.location.href = `/Avatar-classroom/#${playUrl}`;\r\n      }\r\n      else{\r\n        alert(\"請先畫圖並按完成\")\r\n      }\r\n  };\r\n\r\n  const buttonsPenEraser = [\r\n    [\"畫筆\", penHandler, \"primary\", penButtonOutline, \"\"],\r\n    [\"橡皮擦\", eraserHandler, \"primary\", eraserButtonOutline, \"mr-2\"],\r\n  ];\r\n\r\n  const buttonsWithHandlers = [\r\n    [\"復原\", undoHandler, \"secondary\", \"outline-\", \"\"],\r\n    [\"取消復原\", redoHandler, \"secondary\", \"outline-\", \"\"],\r\n    [\"清除全部\", clearHandler, \"secondary\", \"outline-\", \"\"],\r\n    [\"重置\", resetCanvasHandler, \"secondary\", \"outline-\", \"mr-2\"],\r\n    //[\"Export Image\", imageExportHandler, \"success\"],\r\n    //[\"Get Sketching time\", getSketchingTimeHandler, \"success\"],\r\n  ];\r\n\r\n  const buttonsDone = [\r\n    [\"完成\", svgExportHandler, \"success\", \"\", \"mr-2\"],\r\n  ];\r\n\r\n  const buttonsNext = [\r\n    [\"下一步\", goToNext, \"success\", \"\", \"mr-2\"],\r\n  ];\r\n\r\n  const onChange = (updatedPaths) => {\r\n    setPaths(updatedPaths);\r\n  };\r\n\r\n  return (\r\n    <main className=\"container-fluid p-2 justify-content-center\">\r\n      <div className=\"row\">\r\n        <section className=\"col-12 \">\r\n          <div class=\"row justify-content-center\">\r\n            <h1>畫出你的虛擬化身</h1>\r\n          </div>\r\n          \r\n          <section className=\"row no-gutters canvas-area m-1 p-0\">\r\n            <div className=\"col-12 canvas p-0\">\r\n              <ReactSketchCanvas\r\n                ref={canvasRef}\r\n                onChange={onChange}\r\n                onStroke={(stroke, isEraser) =>\r\n                  setLastStroke({ stroke, isEraser })\r\n                }\r\n                {...canvasProps}\r\n              />\r\n            </div>\r\n          </section>\r\n          <form className=\"d-flex flex-column align-items-center\">\r\n            <div class=\"row justify-content-center\">\r\n              <div className=\"col-12 panel d-flex flex-column align-items-center\">\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"buttonsWithHandlers\">\r\n                  {buttonsWithHandlers.map(([label, handler, themeColor, outline, spacingClass]) =>\r\n                    createButton(label, handler, themeColor, outline, spacingClass)\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 panel d-flex flex-column align-items-center\">\r\n                <div>\r\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"buttonsPenEraser\">\r\n                    {buttonsPenEraser.map(([label, handler, themeColor, outline, spacingClass]) =>\r\n                      createButton(label, handler, themeColor, outline, spacingClass)\r\n                    )}\r\n                  </div>\r\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"buttonsDone\">\r\n                    {buttonsDone.map(([label, handler, themeColor, outline, spacingClass]) =>\r\n                      createButton(label, handler, themeColor, outline, spacingClass)\r\n                    )}\r\n                  </div>\r\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"buttonsNext\">\r\n                    {buttonsNext.map(([label, handler, themeColor, outline, spacingClass]) =>\r\n                      createButton(label, handler, themeColor, outline, spacingClass)\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-10 d-flex flex-column align-items-center\">\r\n                {inputProps.map(([fieldName, type, displayName]) => (\r\n                  <InputField\r\n                    key={fieldName}\r\n                    fieldName={fieldName}\r\n                    displayName={displayName}\r\n                    type={type}\r\n                    canvasProps={canvasProps}\r\n                    setCanvasProps={setCanvasProps}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </form>\r\n          \r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Draw;\r\n","import { Header, Button, Segment, Modal, Input, Container } from 'semantic-ui-react'\r\n//import React from 'react';\r\nimport firebase from \"../utils/firebase\";\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\nfunction MySettings( { user } ){\r\n    const [isNameModalOpen, setIsNameModalOpen] = React.useState(false);\r\n    const [isPasswordModalOpen, setIsPasswordModalOpen] = React.useState(false);\r\n    const [displayName, setDisplayName] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [oldPassword, setOldPassword] = React.useState('');\r\n    const [newPassword, setNewPassword] = React.useState('');\r\n\r\n    function onSubmitName(){\r\n        setIsLoading(true)\r\n        user.updateProfile({\r\n            displayName,\r\n        }).then(() =>{\r\n            setDisplayName('');\r\n            setIsNameModalOpen(false);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    function onSubmitPassword(){\r\n        setIsLoading(true);\r\n        const credential = firebase.auth.EmailAuthProvider.credential(\r\n            user.email, oldPassword\r\n        );\r\n        user.reauthenticateWithCredential(credential).then(() => {\r\n            user.updatePassword(newPassword).then(() => {\r\n                setIsPasswordModalOpen(false);\r\n                setOldPassword('');\r\n                setNewPassword('');\r\n                setIsLoading(false);\r\n            });\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <>\r\n            <Header>我的檔案</Header>\r\n            <Header size='small'>\r\n                使用者名稱\r\n                <Button floated='right' onClick={() => setIsNameModalOpen(true)}>\r\n                    修改\r\n                </Button>\r\n            </Header>\r\n            <Segment vertical>{user.displayName}</Segment>\r\n            <Modal basic open={isNameModalOpen} size='mini'>\r\n                <Modal.Header>修改使用者名稱</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input \r\n                        placeholder=\"輸入新的使用者名稱\" \r\n                        value={displayName} \r\n                        onChange={(e) => setDisplayName(e.target.value)}\r\n                        fluid \r\n                    />\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={() => setIsNameModalOpen(false)}>取消</Button>\r\n                    <Button onClick={onSubmitName} loading={isLoading} >修改</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n            </>\r\n            <>\r\n                <Header size='small'>\r\n                    修改密碼\r\n                    <Button floated='right' onClick={() =>  setIsPasswordModalOpen(true)}>\r\n                        修改\r\n                    </Button>\r\n                </Header>\r\n                <Segment vertical>********</Segment>\r\n                <Modal basic size='mini' open={isPasswordModalOpen}>\r\n                    <Modal.Header>修改使用者密碼</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Modal.Header size=\"small\">目前密碼</Modal.Header>\r\n                        <Input \r\n                            placeholder=\"輸入舊密碼\" \r\n                            value={oldPassword} \r\n                            onChange={(e) => setOldPassword(e.target.value)}\r\n                            fluid \r\n                        />\r\n                        <Header></Header>\r\n                        <Modal.Header size=\"small\">新密碼</Modal.Header>\r\n                        <Input \r\n                            placeholder=\"輸入新密碼\" \r\n                            value={newPassword} \r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            fluid \r\n                        />\r\n                    </Modal.Content>\r\n                    \r\n                    <Modal.Actions>\r\n                    <Button onClick={() => setIsPasswordModalOpen(false)}>取消</Button>\r\n                    <Button onClick={onSubmitPassword} loading={isLoading} >修改</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MySettings;","import React from 'react';\r\nimport styles from './RwdYoutube.module.css';\r\n\r\nexport default function RwdYoutube({ src }) {\r\n    return (\r\n        <div className={styles.videobox}>\r\n            <iframe frameBorder=\"0\" src={src} allowFullScreen=\"true\" title='實際操作影片' />\r\n        </div>\r\n    )\r\n}","//import React from \"react\";\r\nimport { Grid, Container, Button, Embed } from 'semantic-ui-react'\r\nimport React, { useState } from 'react';\r\nimport styles from './styles.module.css'\r\nimport RwdYoutube from '../component/RwdYoutube';\r\nimport firebase from '../utils/firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Mainpage(){\r\n    const [user, setUser] = useState(null);\r\n    \r\n    React.useEffect(() =>{\r\n        firebase.auth().onAuthStateChanged((currentUser) =>{\r\n        setUser(currentUser);\r\n        })\r\n    })\r\n\r\n    return (\r\n        <Container style={{ width: \"100%\", height: \"100vh\" }}>\r\n        \r\n            <Grid centered style={{ marginTop: \"40px\" }}>\r\n                <div className={styles.hero_heading} style={{ fontWeight:\"bold\" }}>Avatar</div>\r\n            </Grid>\r\n            <Grid centered style={{ marginTop: \"40px\" }}>\r\n                <div className={styles.hero_heading} style={{ fontWeight:\"bold\" }}>Classroom</div>\r\n            </Grid>\r\n            <Grid centered style={{ marginTop: \"60px\" }}>\r\n                <div style={{fontSize: 30}}>為您提供全新的一個教學測驗模式</div>\r\n            </Grid>\r\n            <Grid centered style={{ marginTop: \"40px\" }}>\r\n                <div style={{fontSize: 30}}>請搭配 Webcam 攝影機使用</div>\r\n            </Grid>\r\n            {user ? (\r\n                <></>\r\n            ) : (\r\n                <Grid centered style={{ marginTop: \"40px\" }}>\r\n                    <Button color='positive' size='large' as={Link} to =\"/signin\">立即註冊/登入</Button>\r\n                </Grid>\r\n            )}\r\n            <Grid centered style={{ marginTop: \"40px\" }}>\r\n                <Grid.Column width={12}>\r\n                    <RwdYoutube\r\n                        src=\"https://youtube.com/embed/LY_b0lxHX7o?feature=share;\"//need to mute and autoplay\r\n                        controls\r\n                        width=\"100%\"\r\n                    />\r\n                </Grid.Column>\r\n            </Grid>\r\n            <br/>\r\n            <Grid style={{ marginTop: \"120px\" }} >\r\n                \r\n                <Grid.Column floated='left' width={10}>\r\n                    <div className={styles.small_note}>製作人名單</div>\r\n                    <div className={styles.small_note}>吳承軒&nbsp;陳苡銜&nbsp;褚帛諭&nbsp;洪麒祥</div>\r\n                </Grid.Column>\r\n                <Grid.Column floated='right' width={6}>\r\n                    <div className={styles.small_note} style={{textAlign: \"right\"}}>In Memory of</div>\r\n                    <div className={styles.small_note} style={{textAlign: \"right\"}}>洪麒祥</div>\r\n                </Grid.Column>\r\n            </Grid>\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nexport default Mainpage;","import GameStore from '../store/GameStore';\r\nimport Game from '../entities/Game';\r\n\r\n\r\nconst findGamesByShortCode = (shortCode) => {\r\n  return new GameStore().list({ shortCode: String(shortCode), state: Game.STATE_WAITING_FOR_PLAYERS });\r\n};\r\n\r\nexport default findGamesByShortCode;\r\n","import React, { useState } from 'react'\r\nimport { Link, Navigate } from \"react-router-dom\"\r\nimport { Button, Form, FormGroup, Label, Input, ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport styles from './styles.module.css'\r\nimport findGamesByShortCode from '../use_cases/findGamesByShortCode';\r\n\r\n\r\nfunction JoinS(){\r\n  const [games, setGames] = useState([]);\r\n  const [shortCode, setShortCode] = useState('');\r\n\r\n  if (games.length > 1) {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n        <ListGroup>\r\n          {\r\n            games.map(game => (\r\n              <Link key={game.id} to={`/join/${game.id}`}>\r\n                <ListGroupItem\r\n                  tag=\"button\"\r\n                  action\r\n                >\r\n                  {game.name}\r\n                </ListGroupItem>\r\n              </Link>\r\n            ))\r\n          }\r\n        </ListGroup>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n  else if (games.length === 1) {\r\n    return <Navigate to={`/join/${games[0].id}`} />;\r\n  }\r\n  else {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n        <h1 className={styles.hero_heading}>Avatar Classroom</h1>\r\n        <Form\r\n          className=\"mb-5\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            findGamesByShortCode(shortCode).then(setGames);\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <Label for=\"shortCode\">房間代碼:</Label>\r\n            <Input id=\"shortCode\" type=\"number\" value={shortCode} onChange={e => setShortCode(e.target.value)} />\r\n          </FormGroup>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!shortCode}\r\n            type=\"submit\"\r\n          >\r\n            加入房間\r\n          </Button>\r\n        </Form>\r\n        \r\n        <aside hidden>\r\n          Want to create your own quiz?&nbsp;\r\n          <Link to=\"/login\">\r\n            Sign Up\r\n          </Link>\r\n        </aside>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JoinS;\r\n","import React from 'react';\r\nimport {\r\n  HashRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport firebase from './utils/firebase';\r\n\r\nimport JoinRoute from './routes/JoinRoute'\r\nimport PlayerRoute from './routes/PlayerRoute'\r\n//import HomeRoute from './routes/HomeRoute/HomeRoute';\r\nimport LobbyRoute from './routes/LobbyRoute';\r\nimport LoginRoute from './routes/LoginRoute';\r\nimport MyGamesRoute from './routes/MyGamesRoute';\r\nimport CreateGameRoute from './routes/CreateGameRoute';\r\n//import HostRoute from './routes/HostRoute';\r\nimport GameDetailsRoute from './routes/GameDetailsRoute';\r\n//import FindGameRoute from './routes/FindGameRoute';\r\n\r\nimport PendingQuestionRoute from './routes/PendingQuestionRoute';\r\nimport QuestionResultsRoute from './routes/QuestionResultsRoute';\r\nimport FinalResultsRoute from './routes/FinalResultsRoute';\r\nimport CurrentQuestionRoute from './routes/CurrentQuestionRoute';\r\n\r\n\r\nimport Header from \"./Header\";\r\nimport Signin from './pages/Signin'\r\n//import Posts from \"./pages/Posts\";\r\nimport Draw from \"./pages/Draw\";\r\nimport MySettings from './pages/MySettings';\r\nimport Mainpage from './pages/Mainpage';\r\n\r\nimport JoinS from './pages/JoinS';\r\n\r\nfunction App() {\r\n  const [user, setUser] = React.useState(null);\r\n  React.useEffect(() =>{\r\n    firebase.auth().onAuthStateChanged((currentUser) =>{\r\n      setUser(currentUser);\r\n    })\r\n  })\r\n  return (\r\n    <HashRouter>\r\n      <Header/>\r\n        <div className=\"App\">\r\n          <Routes>\r\n            <Route path=\"/login\" element={<LoginRoute/>} key={LoginRoute.id}/>            \r\n            <Route path=\"/\" exact element={<Mainpage/>} key={Mainpage.id}/> \r\n            <Route path=\"/signin\" exact element={<Signin />} key={Signin.id}/>\r\n            <Route path=\"/join-s\" exact element={<JoinS/>} />\r\n            \r\n            <Route path=\"/lobby/:gameId\" element={<LobbyRoute />} key={LobbyRoute.id}/>\r\n            <Route path=\"/play/:gameId/as/:playerId\" element={<PlayerRoute />} key={PlayerRoute.id}/>\r\n            <Route path=\"/join/:gameId\" element={<JoinRoute />} key={JoinRoute.id}/>\r\n            <Route path=\"/games/create\" element={<CreateGameRoute />} key={CreateGameRoute.id}/>\r\n            <Route path=\"/games/:gameId\" element={<GameDetailsRoute />} key={GameDetailsRoute.id}/>\r\n            <Route path=\"/games\" exact element={<MyGamesRoute />} key={MyGamesRoute.id}/>\r\n            \r\n            <Route path=\"/draw\" exact element={<Draw />} key={Draw.id}/>\r\n            <Route path=\"/settings\" exact element={<MySettings user={user}/>} key={MySettings.id}/>\r\n\r\n            <Route path=\"/host/:gameId/questions/pending\" element={<PendingQuestionRoute/>} key={PendingQuestionRoute.id}/>\r\n            <Route path=\"/host/:gameId/questions/current\" element={<CurrentQuestionRoute />} key={CurrentQuestionRoute.id}/>\r\n            <Route path=\"/host/:gameId/results/final\" element={<FinalResultsRoute />} key={FinalResultsRoute.id}/>\r\n            <Route path=\"/host/:gameId/results/:questionId\" element={<QuestionResultsRoute />} key={QuestionResultsRoute.id}/>\r\n          </Routes>\r\n        </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_heading\":\"styles_hero_heading__1pfyu\",\"small_note\":\"styles_small_note__Xgoyt\",\"nomal_text\":\"styles_nomal_text__1MUKj\"};"],"sourceRoot":""}