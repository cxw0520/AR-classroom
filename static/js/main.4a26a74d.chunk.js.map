{"version":3,"sources":["pages/styles.module.css","routes/HomeRoute/styles.module.css","view_components/CenteredContainer/styles.module.css","component/RwdYoutube.module.css","utils/firebase.js","store/BaseStore.js","store/PlayerStore.js","use_cases/addPlayer.js","view_components/CenteredContainer/index.js","entities/Game.js","store/GameStore.js","use_cases/getGame.js","routes/JoinRoute.js","use_cases/getPlayer.js","store/AnswerStore.js","utils/popKey.js","store/QuestionStore.js","use_cases/addAnswer.js","routes/PlayerRoute.js","use_cases/findGamesByShortCode.js","routes/HomeRoute/HomeRoute.js","use_cases/getLobbyPlayers.js","routes/LobbyRoute.js","store/UserStore.js","use_cases/signupUser.js","use_cases/loginUser.js","routes/LoginRoute.js","use_cases/getCurrentUser.js","use_cases/getCurrentUserGames.js","routes/MyGamesRoute.js","use_cases/createGame.js","routes/CreateGameRoute.js","use_cases/getQuestions.js","use_cases/saveQuestion.js","use_cases/deleteQuestion.js","view_components/EditableQuestion.js","routes/GameDetailsRoute.js","routes/FindGameRoute.js","use_cases/startNextQuestion.js","utils/calculateTimeLeft.js","routes/PendingQuestionRoute.js","use_cases/getQuestion.js","use_cases/calculateQuestionResults.js","use_cases/countTotalQuestions.js","routes/QuestionResultsRoute.js","use_cases/calculateFinalResults.js","routes/FinalResultsRoute.js","use_cases/showCurrentQuestion.js","view_components/Question.js","routes/CurrentQuestionRoute.js","Header.js","pages/Signin.js","pages/NewPost.js","pages/Draw.js","pages/MySettings.js","pages/Results.js","component/RwdYoutube.js","pages/Mainpage.js","pages/JoinS.js","App.js","index.js"],"names":["module","exports","hero_heading","centered","videobox","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_FIREBASE_CONFIG","BaseStore","_createClass","props","_classCallCheck","this","undefined","firestore","auth","PlayerStore","_BaseStore","_inherits","_super","_createSuper","apply","arguments","key","value","playerId","scopes","collection","doc","gameId","get","then","_convertDocToPlayer","attributes","chain","add","playerRef","_this","onChange","limit","onSnapshot","playersSnapshot","players","forEach","playerDoc","push","snapshot","docs","map","p","_convertDocToQuestion","Object","assign","id","data","addPlayer","create","CenteredContainer","React","createElement","Container","className","styles","style","maxWidth","height","verticalCentered","children","Game","GameStore","state","STATE_DRAFT","ref","_convertDocToGame","_getGameDoc","gameDoc","_this2","where","ownerId","shortCode","a","currentQuestion","currentQuestionId","update","game","path","getGame","JoinForm","_ref","playerName","setPlayerName","joinGame","Form","onSubmit","e","preventDefault","FormGroup","Label","Input","target","Button","color","type","JoinRoute","playUrl","useParams","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setPlayerId","_useState5","_useState6","setGame","useEffect","set","name","console","log","catch","error","window","location","replace","concat","getPlayer","AnswerStore","_popAttr","questionId","player","join","question","answerRef","_convertDocToAnswer","answerDoc","obj","attr","val","popKey","QuestionStore","addAttrs","questionDoc","attributesCopy","qnRef","qnDoc","_this3","from","orderBy","q","addAttributes","addAnswer","questionStore","timestamp","Date","getTime","isCorrect","correctAnswer","choice","AnswerGrid","recordAnswer","isAnswerDisabled","Row","ans","Col","sm","md","onClick","disabled","PlayerRoute","_useParams","currentGame","setCurrentGame","answer","setAnswer","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","setIsAnswerDisabled","handleGameChange","setTimeout","SECONDS_TO_CHOOSE","Alert","Fragment","findGamesByShortCode","list","String","STATE_WAITING_FOR_PLAYERS","HomeRoute","games","setGames","setShortCode","ListGroup","Link","to","ListGroupItem","tag","action","Navigate","for","hidden","getLobbyPlayers","playerStore","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","PlayerList","QRCode","_ref2","imageSize","qrcodeData","setQRCodeData","canvasRef","useRef","imageRef","QRUrl","href","_ref3","_asyncToGenerator","_callee","url","dataURL","_context","qrcode","toDataURL","t0","_x","generateQRCode","canvas","current","ctx","getContext","img","Image","src","onload","clearRect","width","drawImage","display","alt","LobbyRoute","setPlayers","joinUrl","origin","isModalOpen","setIsModalOpen","Grid","columns","Column","rel","verticalAlign","fontSize","outline","Modal","basic","open","onClose","close","UserStore","email","password","createUserWithEmailAndPassword","userCredentials","firebaseUser","user","_convertUser","errorCode","code","message","alert","signInWithEmailAndPassword","handleChange","onAuthStateChanged","uid","signupUser","loginUser","login","handleSubmit","event","authFn","successCallback","SignupForm","onUserChange","setEmail","setPassword","LoginForm","LoginRoute","isExistingUser","setIsExistingUser","_useState11","_useState12","setUser","toggleForm","getCurrentUser","userStore","onCurrentUserChange","getCurrentUserGames","gameStore","MyGamesRoute","redirectUrl","setRedirectUrl","createGame","Math","floor","random","CreateGameRoute","gameName","setGameName","gameAttributes","onCreate","getQuestions","saveQuestion","currentUrl","segments","URL","pathname","split","deleteQuestion","db","deleteDoc","reload","EditableQuestion","draftQuestion","setDraftQuestion","componentState","setComponentState","updateDraft","newAttributes","handleDeleteQuestion","Card","body","CardTitle","InputGroup","placeholder","text","ansKey","InputGroupAddon","addonType","InputGroupText","_defineProperty","data-testid","Spinner","size","GameDetailsRoute","questions","setQuestions","navigate","useNavigate","handleDeleteGame","order","newQn","marginBottom","FindGameRoute","gameIdPrefix","URLSearchParams","useLocation","search","startNextQuestion","currentQuestionIndex","questionArray","_args","tickTimer","endDate","intervalCallback","endedCallback","timeLeft","date","difference","now","calculateTimeLeft","startTimer","seconds","PendingQuestionRoute","parentUrl","setTimeLeft","nextQuestion","setNextQuestion","ceil","getQuestion","calculateQuestionResults","answerStore","answers","results","A","B","C","D","countTotalQuestions","isCorrectChoice","ResultBoard","result","entries","inverse","CardBody","CardText","QuestionResultsRoute","_ref4","setResult","setQuestion","totalQuestionCount","setTotalQuestionCount","calculateFinalResults","filter","reduce","acc","curr","sortScores","b","score1","score2","Leaderboard","scores","sort","index","Badge","FinalResultsRoute","setResults","showCurrentQuestion","Question","ShowResultsBtn","isVisible","linkTo","CurrentQuestionRoute","Header","_React$useState","_React$useState2","currentUser","Menu","Item","as","position","signOut","Signin","activeItem","setActiveItem","_React$useState3","_React$useState4","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","isLoading","setIsLoading","widths","active","label","Message","negative","loading","NewPost","title","setTitle","content","setContent","topics","setTopics","topicName","setTopicName","file","setFile","_React$useState11","_React$useState12","collectionSnapshot","options","topic","previewUrl","createObjectURL","documentRef","fileRef","storage","metadata","contentType","put","getDownloadURL","imageUrl","createdAt","Timestamp","author","photoURL","floated","htmlFor","files","TextArea","Dropdown","selection","getStorage","lastParam","lastIndexOf","SID","substring","svgRef","InputField","fieldName","_ref$type","canvasProps","setCanvasProps","prevCanvasProps","_objectSpread","min","max","Draw","backgroundImage","preserveBackgroundImageAspectRatio","strokeWidth","eraserWidth","strokeColor","canvasColor","borderRight","svgStyle","exportWithBackgroundImage","withTimestamp","allowOnlyPointerType","withViewBox","createRef","penButtonColor","setPenButtonColor","eraserButtonColor","setEraserButtonColor","setSVG","setPaths","_React$useState13","stroke","isEraser","_React$useState14","setLastStroke","_React$useState15","_React$useState16","isDone","setIsDone","buttonsWithHandlers","_canvasRef$current4","undo","_canvasRef$current5","redo","_canvasRef$current6","clearCanvas","_canvasRef$current7","resetCanvas","_canvasRef$current2","eraseMode","_canvasRef$current3","_canvasRef$current","exportSvg","exportedDataURI","blob","Blob","uploadBytes","ReactSketchCanvas","updatedPaths","onStroke","_ref5","handler","themeColor","createButton","_ref6","_ref7","MySettings","isNameModalOpen","setIsNameModalOpen","isPasswordModalOpen","setIsPasswordModalOpen","setDisplayName","oldPassword","setOldPassword","newPassword","setNewPassword","Segment","vertical","Content","fluid","Actions","updateProfile","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","Results","RwdYoutube","frameBorder","allowFullScreen","Mainpage","marginTop","fontWeight","controls","JoinS","App","HashRouter","Routes","Route","element","exact","ReactDOM","render","document","getElementById"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,aAAA,mDCAlBF,EAAAC,QAAA,CAAkBC,aAAA,mDCAlBF,EAAAC,QAAA,CAAkBE,SAAA,+CCAlBH,EAAAC,QAAA,CAAkBG,SAAA,sPCYXC,IAASC,KAAKC,QACjBF,IAASG,cAXU,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBASJV,QAAQ,4ECfjBW,iBAA4B,CAC9BP,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAsBJE,EAhBAC,YACb,SAAAD,EAAYE,GAAOC,YAAAC,KAAAJ,QAEIK,IAAlBjB,IAASC,OACLD,IAASC,KAAKC,QACjBF,IAASG,cAAcQ,IAM3BK,KAAKE,UAAYlB,IAASkB,YAC1BF,KAAKG,KAAOnB,IAASmB,SC4BVC,EAvDE,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAL,YAAAC,KAAAI,GAAAG,EAAAE,MAAAT,KAAAU,WAoDd,OApDcb,YAAAO,EAAA,EAAAO,IAAA,MAAAC,MACf,SAAIC,GAAuB,IAAbC,EAAMJ,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GACrB,OAAOV,KAAKE,UACTa,WAAW,SACXC,IAAIF,EAAOG,QACXF,WAAW,WACXC,IAAIH,GACJK,MACAC,KAAKnB,KAAKoB,uBACd,CAAAT,IAAA,SAAAC,MAED,WAAwB,IAAjBS,EAAUX,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GACdY,EAAQtB,KAAKE,UACjB,GAAI,WAAYmB,EAAY,CAC1B,IAAMJ,EAASI,EAAWJ,cACnBI,EAAWJ,OAElBK,EAAQA,EAAMP,WAAW,SAASC,IAAIC,GAAQF,WAAW,WAG3D,OAAOO,EACJC,IAAIF,GACJF,KAAK,SAAAK,GAAS,OAAIA,EAAUN,QAC5BC,KAAKnB,KAAKoB,uBACd,CAAAT,IAAA,OAAAC,MAED,WAA4B,IAAAa,EAAAzB,KAAvBc,EAAMJ,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GAAIgB,EAAQhB,UAAAxB,OAAA,EAAAwB,UAAA,QAAAT,EACpBqB,EAAQtB,KAAKE,UAUjB,MATI,WAAYY,IACdQ,EAAQA,EAAMP,WAAW,SAASC,IAAIF,EAAOG,SAE/CK,EAAQA,EAAMP,WAAW,WAErB,UAAWD,IACbQ,EAAQA,EAAMK,MAAMb,EAAOa,aAGZ1B,IAAbyB,EACKJ,EAAMM,WAAW,SAAAC,GACtB,IAAIC,EAAU,GACdD,EAAgBE,QAAQ,SAAAC,GAAS,OAAIF,EAAQG,KAAKR,EAAKL,oBAAoBY,MAC3EN,EAASI,KAINR,EACJJ,MACAC,KAAK,SAAAe,GAAQ,OAAIA,EAASC,KAAKC,IAAI,SAACC,GAAC,OAAKZ,EAAKa,sBAAsBD,SACzE,CAAA1B,IAAA,sBAAAC,MAED,SAAoBoB,GAClB,OAAOO,OAAOC,OAAO,CAAEC,GAAIT,EAAUS,IAAMT,EAAUU,YACtDtC,EApDc,CAASR,GCKX+C,EAJG,SAACtB,GACjB,OAAO,IAAIjB,GAAcwC,OAAOvB,+BCYnBwB,EARW,SAAA/C,GACxB,OACEgD,IAAAC,cAACC,IAAS,CAACC,UAAWC,IAAOpE,SAAUqE,MAAO,CAAEC,SAAUtD,EAAMsD,UAAY,KAAMC,OAAQvD,EAAMwD,iBAAmB,OAAS,OACzHxD,EAAMyD,WCXQC,EAAI,oBAAAA,IAAAzD,YAAAC,KAAAwD,GAE8C,OAF9C3D,YAAA2D,EAAA,OAAA7C,IAAA,cAAAO,IACvB,WAA2B,MAAO,UAAS,CAAAP,IAAA,4BAAAO,IAC3C,WAAyC,MAAO,wBAAqBsC,EAF9C,GCmFVC,EA/EA,SAAApD,GAAAC,YAAAmD,EAAApD,GAAA,IAAAE,EAAAC,YAAAiD,GAAA,SAAAA,IAAA,OAAA1D,YAAAC,KAAAyD,GAAAlD,EAAAE,MAAAT,KAAAU,WA4EZ,OA5EYb,YAAA4D,EAAA,EAAA9C,IAAA,SAAAC,MACb,WAAwB,IAAjBS,EAAUX,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GAClB,OAAOV,KAAKE,UACTa,WAAW,SACXQ,IAAIgB,OAAOC,OAAO,CAAEkB,MAAOF,EAAKG,aAAetC,IAC/CF,KAAK,SAAAyC,GAAG,OAAIA,EAAI1C,QAChBC,KAAKnB,KAAK6D,qBAGf,CAAAlD,IAAA,MAAAC,MAQA,SAAIK,EAAQS,GAAU,IAAAD,EAAAzB,KACdgB,EAAMhB,KAAK8D,YAAY7C,GAE7B,YAAiBhB,IAAbyB,EACKV,EAAIY,WAAW,SAAAmC,GAAO,OAAIrC,EAASD,EAAKoC,kBAAkBE,MAG5D/C,EAAIE,MAAMC,KAAKnB,KAAK6D,qBAC5B,CAAAlD,IAAA,OAAAC,MAED,WAAkB,IAAAoD,EAAAhE,KAAbc,EAAMJ,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GACRY,EAAQtB,KAAKE,UAAUa,WAAW,SAmBtC,MAjBI,YAAaD,IAEfQ,EAAQA,EAAM2C,MAAM,UAAW,KAAMnD,EAAOoD,UAG1C,UAAWpD,IACbQ,EAAQA,EAAM2C,MAAM,QAAS,KAAMnD,EAAO4C,QAGxC,cAAe5C,IACjBQ,EAAQA,EAAM2C,MAAM,YAAa,KAAMnD,EAAOqD,YAG5C,UAAWrD,IACbQ,EAAQA,EAAMK,MAAMb,EAAOa,QAGtBL,EACJJ,MACAC,KAAK,SAAAe,GAAQ,OAAIA,EAASC,KAAKC,IAAI,SAACgC,GAAC,OAAKJ,EAAKH,kBAAkBO,SACrE,CAAAzD,IAAA,SAAAC,MAED,SAAOK,EAAQI,GACb,IAAML,EAAMhB,KAAK8D,YAAY7C,GAO7B,MALI,sBAAuBI,IACzBA,EAAWgD,gBAAkBrD,EAAID,WAAW,aAAaC,IAAIK,EAAWiD,0BACjEjD,EAAWiD,mBAGbtD,EAAIuD,OAAOlD,KACnB,CAAAV,IAAA,cAAAC,MAED,SAAYK,GACV,OAAOjB,KAAKE,UACTa,WAAW,SACXC,IAAIC,KACR,CAAAN,IAAA,oBAAAC,MAED,SAAkBmD,GAChB,IAAIS,EAAOjC,OAAOC,OAAO,CAAEC,GAAIsB,EAAQtB,IAAMsB,EAAQrB,QAKrD,MAJI,oBAAqB8B,IACvBA,EAAKF,kBAAoBE,EAAKH,gBAAgB5B,GAC9C+B,EAAKH,gBAAkBG,EAAKH,gBAAgBI,MAEvCD,MACRf,EA5EY,CAAS7D,GCGT8E,EAJC,SAACzD,EAAQS,GACvB,OAAO,IAAI+B,GAAYvC,IAAID,EAAQS,ICO/BiD,EAAW,SAAHC,GAAgD,IAA1CC,EAAUD,EAAVC,WAAYC,EAAaF,EAAbE,cAAeC,EAAQH,EAARG,SAC7C,OACEjC,IAAAC,cAACiC,IAAI,CAACC,SAAU,SAAAC,GACdA,EAAEC,iBACFJ,MAEAjC,IAAAC,cAACqC,IAAS,KACRtC,IAAAC,cAACsC,IAAK,KAAC,yCACPvC,IAAAC,cAACuC,IAAK,CACJ1E,MAAOiE,EACPnD,SAAU,SAAAwD,GAAC,OAAIJ,EAAcI,EAAEK,OAAO3E,WAG1CkC,IAAAC,cAACyC,IAAM,CAACC,MAAM,UAAUC,KAAK,UAAS,8BA2D7BC,EAtDG,WAChB,IAIIC,EAJE3E,EAAW4E,cAAX5E,OACN6E,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzCjB,EAAUmB,EAAA,GAAElB,EAAakB,EAAA,GAChCE,EAAgCH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAArCrF,EAAQsF,EAAA,GAAEC,EAAWD,EAAA,GAC5BE,EAAwBN,mBAAS,MAAKO,EAAAL,YAAAI,EAAA,GAA/B7B,EAAI8B,EAAA,GAAEC,EAAOD,EAAA,GAGpBE,oBAAU,WACJ3F,GACS7B,EAASkB,YACKa,WAAW,OAEtBC,IAAIH,GAAU4F,IAAI,CAC9BC,KAAM7B,EACNpC,GAAI5B,IAELM,KAAK,WACJwF,QAAQC,IAAI,sCAEbC,MAAM,SAAAC,GACLH,QAAQG,MAAM,8BAA+BA,MAGhD,CAACjG,EAAUgE,IAEd2B,oBAAU,WACJvF,GAAmB,OAATuD,GACZE,EAAQzD,GAAQE,KAAKoF,IAEtB,CAACtF,EAAQuD,IAEZoB,EAAW,kBAAoB3E,EAAS,OAASJ,EAMjD,OACEiC,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAgB,GAChDR,IAAAC,cAAA,UAAKyB,EAAOA,EAAKkC,KAAO,MACvB7F,OANHkG,OAAOC,SAASC,QAAO,uBAAAC,OAAwBtB,IASzC9C,IAAAC,cAAC4B,EAAQ,CACPE,WAAYA,EACZC,cAAeA,EACfC,SAAU,kBAAMpC,EAAU,CAAE+D,KAAM7B,EAAY5D,WAAUE,KAAK,SAAAkB,GAAC,OAAI+D,EAAY/D,EAAEI,sCCpE7E0E,EAJG,SAACtG,GAA0B,IAAhBC,EAAMJ,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GACpC,OAAO,IAAIN,GAAcc,IAAIL,EAAUC,IC2D1BsG,EA7DE,SAAA/G,GAAAC,YAAA8G,EAAA/G,GAAA,IAAAE,EAAAC,YAAA4G,GAAA,SAAAA,IAAA,OAAArH,YAAAC,KAAAoH,GAAA7G,EAAAE,MAAAT,KAAAU,WA0Dd,OA1Dcb,YAAAuH,EAAA,EAAAzG,IAAA,SAAAC,MASf,SAAOS,GACL,IAAMJ,EAASjB,KAAKqH,SAAShG,EAAY,UACnCR,EAAWb,KAAKqH,SAAShG,EAAY,YACrCiG,EAAatH,KAAKqH,SAAShG,EAAY,cAO7C,OALsBrB,KAAKE,UACxBa,WAAW,SACXC,IAAIC,GACJF,WAAW,WAGXQ,IAAIgB,OAAOC,OAAO,CACjB+E,OAAQvH,KAAKE,UAAUc,IAAI,CAAC,SAAUC,EAAQ,UAAWJ,GAAU2G,KAAK,MACxEC,SAAUzH,KAAKE,UAAUc,IAAI,CAAC,SAAUC,EAAQ,YAAaqG,GAAYE,KAAK,OAC7EnG,IACFF,KAAK,SAAAuG,GAAS,OAAIA,EAAUxG,QAC5BC,KAAKnB,KAAK2H,uBACd,CAAAhH,IAAA,OAAAC,MAED,WAAkB,IAAAa,EAAAzB,KAAbc,EAAMJ,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GACRY,EAAQtB,KAAKE,UAgBjB,MAdI,WAAYY,IACdQ,EAAQA,EAAMP,WAAW,SAASC,IAAIF,EAAOG,SAE/CK,EAAQA,EAAMP,WAAW,WAErB,eAAgBD,IAElBQ,EAAQA,EAAM2C,MAAM,WAAY,KAAMjE,KAAKE,UAAUc,IAAG,SAAAkG,OAAUpG,EAAOG,OAAM,eAAAiG,OAAcpG,EAAOwG,eAGlG,UAAWxG,IACbQ,EAAQA,EAAMK,MAAMb,EAAOa,QAGtBL,EACJJ,MACAC,KAAK,SAAAe,GAAQ,OAAIA,EAASC,KAAKC,IAAI,SAACgC,GAAC,OAAK3C,EAAKkG,oBAAoBvD,SACvE,CAAAzD,IAAA,sBAAAC,MAED,SAAoBgH,GAClB,OAAOrF,OAAOC,OAAO,CAAEC,GAAImF,EAAUnF,IAAMmF,EAAUlF,UACtD,CAAA/B,IAAA,WAAAC,MAED,SAASiH,EAAKC,GACZ,IAAMC,EAAMF,EAAIC,GAEhB,cADOD,EAAIC,GACJC,MACRX,EA1Dc,CAASxH,GCFnB,SAASoI,EAAOH,EAAKlH,GAC1B,IAAMC,EAAQiH,EAAIlH,GAElB,cADOkH,EAAIlH,GACJC,ECFgC,IAoF1BqH,EAlFI,SAAA5H,GAAAC,YAAA2H,EAAA5H,GAAA,IAAAE,EAAAC,YAAAyH,GAAA,SAAAA,IAAA,OAAAlI,YAAAC,KAAAiI,GAAA1H,EAAAE,MAAAT,KAAAU,WA+EhB,OA/EgBb,YAAAoI,EAAA,EAAAtH,IAAA,MAAAC,MAUjB,SAAI0G,GAAyB,IAAA7F,EAAAzB,KAAbc,EAAMJ,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GACnBY,EAAQtB,KAAKE,UACbgI,EAAW,GAOf,MALI,WAAYpH,IACdQ,EAAQA,EAAMP,WAAW,SAASC,IAAIF,EAAOG,QAAQF,WAAW,aAChEmH,EAAiB,OAAIpH,EAAOG,QAGvBK,EACJN,IAAIsG,GACJpG,MACAC,KAAK,SAAAgH,GAAW,OAAI1G,EAAKa,sBAAsB6F,EAAaD,OAChE,CAAAvH,IAAA,SAAAC,MAED,SAAOS,GAAY,IAAA2C,EAAAhE,KACboI,EAAiB7F,OAAOC,OAAO,GAAInB,GACjCJ,EAAS+G,EAAOI,EAAgB,UAItC,OAFiBpI,KAAKE,UAAUa,WAAW,SAASC,IAAIC,GAAQF,WAAW,aAGxEQ,IAAI6G,GACJjH,KAAK,SAAAkH,GAAK,OAAIA,EAAMnH,QACpBC,KAAK,SAAAmH,GAAK,OAAItE,EAAK1B,sBAAsBgG,EAAO,CAAErH,eAGvD,CAAAN,IAAA,SAAAC,MAQA,SAAO0G,EAAYjG,GACjB,IAAI+G,EAAiB7F,OAAOC,OAAO,GAAInB,GACjCJ,EAAS+G,EAAOI,EAAgB,UAItC,OAFUpI,KAAKE,UAAUa,WAAW,SAASC,IAAIC,GAAQF,WAAW,aAAaC,IAAIsG,GAE1E/C,OAAO6D,KACnB,CAAAzH,IAAA,OAAAC,MAED,WAAkB,IAAA2H,EAAAvI,KAAbc,EAAMJ,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GACRY,EAAQtB,KAAKE,UACbgI,EAAW,GAgBf,MAdI,WAAYpH,IACdQ,EAAQA,EAAMP,WAAW,SAASC,IAAIF,EAAOG,QAAQF,WAAW,aAChEmH,EAAiB,OAAIpH,EAAOG,QAE1B,SAAUH,IACZQ,EAAQA,EAAM2C,MAAM,QAAS,IAAKnD,EAAO0H,OAG3ClH,EAAQA,EAAMmH,QAAQ,SAElB,UAAW3H,IACbQ,EAAQA,EAAMK,MAAMb,EAAOa,QAGtBL,EACJJ,MACAC,KAAK,SAAAe,GAAQ,OAAIA,EAASC,KAAKC,IAAI,SAACsG,GAAC,OAAKH,EAAKjG,sBAAsBoG,EAAGR,SAC5E,CAAAvH,IAAA,wBAAAC,MAED,SAAsBuH,GAAiC,IAApBQ,EAAajI,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GACjD,OAAO6B,OAAOC,OAAO,CAAEC,GAAI0F,EAAY1F,IAAM0F,EAAYzF,OAAQiG,OAClEV,EA/EgB,CAASrI,GC0BbgJ,EAlBG,SAACvH,GACjB,IAAMwH,EAAgB,IAAIZ,EACpBa,GAAY,IAAIC,MAAOC,UAE7B,OAAO,IAAIvF,GACRvC,IAAIG,EAAWJ,QACfE,KAAK,SAAAqD,GACJ,OAAOqE,EAAc3H,IAAIsD,EAAKF,kBAAmB,CAAErD,OAAQuD,EAAK/B,OAEjEtB,KAAK,SAAAsG,GAKJ,OAJApG,EAAW4H,UAAYxB,EAASyB,gBAAkB7H,EAAW8H,OAC7D9H,EAAWiG,WAAaG,EAAShF,GACjCpB,EAAWyH,UAAYA,EACvBnC,QAAQC,IAAIvF,IACL,IAAI+F,GAAcxE,OAAOvB,MCZhC+H,EAAa,SAAHxE,GAA2C,IAArCyE,EAAYzE,EAAZyE,aAAcC,EAAgB1E,EAAhB0E,iBAClC,OACExG,IAAAC,cAACwG,IAAG,KAEA,CAAC,IAAK,IAAK,IAAK,KAAKnH,IAAI,SAACoH,GAAG,OAC3B1G,IAAAC,cAAC0G,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAG1G,UAAU,OAAOtC,IAAK6I,GACxC1G,IAAAC,cAACyC,IAAM,CACLvC,UAAU,cACV2G,QAAS,kBAAMP,EAAaG,IAC5BK,SAAUP,GACRxG,IAAAC,cAAA,cAASyG,SAiHVM,EAxGK,WAClB,IAAAC,EAA2BlE,cAArB5E,EAAM8I,EAAN9I,OAAQJ,EAAQkJ,EAARlJ,SACdiF,EAAsCC,qBAAUC,EAAAC,YAAAH,EAAA,GAAzCkE,EAAWhE,EAAA,GAAEiE,EAAcjE,EAAA,GAClCE,EAAoCH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAAzCrB,EAAUsB,EAAA,GAAErB,EAAaqB,EAAA,GAChCE,EAA4BN,mBAAS,MAAKO,EAAAL,YAAAI,EAAA,GAAnC6D,EAAM5D,EAAA,GAAE6D,EAAS7D,EAAA,GACxB8D,EAAwCrE,mBAAS,IAAGsE,EAAApE,YAAAmE,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAgDzE,oBAAS,GAAM0E,EAAAxE,YAAAuE,EAAA,GAAxDlB,EAAgBmB,EAAA,GAAEC,EAAmBD,EAAA,GAEtCE,EAAmB,SAACnG,GACpBA,IAEF2F,EAAU,MACVF,EAAezF,KAInBgC,oBAAU,WACJvF,GAAUJ,IACZ6D,EAAQzD,EAAQ0J,GAChBxD,EAAUtG,EAAU,CAAEI,WACnBE,KAAK,SAAAoG,GAAM,OAAIzC,EAAcyC,EAAOb,UAExC,CAACzF,EAAQJ,IA0BZ,OAAQmJ,EAAcA,EAAYtG,MAAQ,MACxC,IAAK,kBACH,OACEZ,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAkB,GAAM,gFAI9D,IAAK,kBASH,OACER,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAkB,GAClDR,IAAAC,cAACwG,IAAG,CAACtG,UAAU,QACbH,IAAAC,cAAC0G,IAAG,CAACC,GAAI,IACP5G,IAAAC,cAAA,UAAI,MAAI8B,EAAW,KACnB/B,IAAAC,cAAA,UAAI,iDAGRD,IAAAC,cAACqG,EAAU,CAACC,aAhDC,SAAAG,GAEfF,IAIJoB,GAAoB,GACpB9B,EAAU,CAAE/H,WAAUgE,aAAY5D,SAAQkI,OAAQK,IAC/CrI,KAAK,SAAA+I,GACJC,EAAUD,GACVU,WAAW,WACTT,EAAU,MACVO,GAAoB,IACnBG,OAEJhE,MAAM,SAAA3B,GACLqF,EAAgBrF,GAChB0F,WAAW,WACTL,EAAgB,IAChBG,GAAoB,IACnB,SA4BuCpB,iBAAkBA,IACzDgB,EAAexH,IAAAC,cAAC+H,IAAK,CAACrF,MAAM,UAAU6E,GAAwB,KAC9DJ,GAAUZ,EAETxG,IAAAC,cAACwG,IAAG,CAACtG,UAAU,QACbH,IAAAC,cAAC0G,IAAG,CAACC,GAAI,IACP5G,IAAAC,cAAA,UAAI,sBAAKmH,EAAOf,OAAO,OAI3BrG,IAAAC,cAAAD,IAAAiI,SAAA,OAMR,IAAK,yBACH,OACEjI,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAkB,GAClDR,IAAAC,cAAA,WAAK,2EAIX,QACE,OACED,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAkB,GAAM,kICzHnD0H,EAJc,SAAC7G,GAC5B,OAAO,IAAIV,GAAYwH,KAAK,CAAE9G,UAAW+G,OAAO/G,GAAYT,MAAOF,EAAK2H,6BCuE3DC,EAnEG,WAChB,IAAAtF,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BuF,EAAKrF,EAAA,GAAEsF,EAAQtF,EAAA,GACtBE,EAAkCH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAAvC/B,EAASgC,EAAA,GAAEoF,EAAYpF,EAAA,GAE9B,OAAIkF,EAAMnM,OAAS,EAEf4D,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAkB,GAClDR,IAAAC,cAACyI,IAAS,KAENH,EAAMjJ,IAAI,SAAAoC,GAAI,OACZ1B,IAAAC,cAAC0I,IAAI,CAAC9K,IAAK6D,EAAK/B,GAAIiJ,GAAE,SAAAxE,OAAW1C,EAAK/B,KACpCK,IAAAC,cAAC4I,IAAa,CACZC,IAAI,SACJC,QAAM,GAELrH,EAAKkC,WASI,IAAjB2E,EAAMnM,OACN4D,IAAAC,cAAC+I,IAAQ,CAACJ,GAAE,SAAAxE,OAAWmE,EAAM,GAAG5I,MAIrCK,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAkB,GAClDR,IAAAC,cAAA,MAAIE,UAAWC,IAAOrE,cAAc,YACpCiE,IAAAC,cAACiC,IAAI,CACH/B,UAAU,OACVgC,SAAU,SAACC,GACTA,EAAEC,iBACF6F,EAAqB7G,GAAWhD,KAAKmK,KAGvCxI,IAAAC,cAACqC,IAAS,KACRtC,IAAAC,cAACsC,IAAK,CAAC0G,IAAI,aAAY,6BACvBjJ,IAAAC,cAACuC,IAAK,CAAC7C,GAAG,YAAYiD,KAAK,SAAS9E,MAAOuD,EAAWzC,SAAU,SAAAwD,GAAC,OAAIqG,EAAarG,EAAEK,OAAO3E,WAE7FkC,IAAAC,cAACyC,IAAM,CACLC,MAAM,UACNoE,UAAW1F,EACXuB,KAAK,UACN,6BAKH5C,IAAAC,cAAC0I,IAAI,CAACC,GAAE,UACN5I,IAAAC,cAACyC,IAAM,CAACC,MAAM,WAAW,6BAI3B3C,IAAAC,cAAA,SAAOiJ,QAAM,GAAC,oCAEZlJ,IAAAC,cAAC0I,IAAI,CAACC,GAAG,UAAS,uCC1DbO,EALS,SAAChL,EAAQS,GAA2E,IAAjEwK,EAAWxL,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAIN,EAE3D,OAFmFM,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAI+C,GAChFc,OAAOtD,EAAQ,CAAEyC,MAAO,sBAC3BwI,EAAYjB,KAAK,CAAEhK,UAAUS,sCCLtCyK,GAAA,kBAAAjH,GAAA,IAAAkH,EAAAlH,EAAA,GAAAmH,EAAA9J,OAAA+J,UAAAC,EAAAF,EAAAG,eAAAC,EAAAlK,OAAAmK,gBAAA,SAAAN,EAAAlH,EAAAmH,GAAAD,EAAAlH,GAAAmH,EAAAzL,OAAA+L,EAAA,mBAAAC,cAAA,GAAAxI,EAAAuI,EAAAE,UAAA,aAAAC,EAAAH,EAAAI,eAAA,kBAAAC,EAAAL,EAAAM,aAAA,yBAAAC,EAAAd,EAAAlH,EAAAmH,GAAA,OAAA9J,OAAAmK,eAAAN,EAAAlH,EAAA,CAAAtE,MAAAyL,EAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAlH,GAAA,IAAAgI,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAlH,EAAAmH,GAAA,OAAAD,EAAAlH,GAAAmH,GAAA,SAAAiB,EAAAlB,EAAAlH,EAAAmH,EAAAE,GAAA,IAAAI,EAAAzH,KAAAoH,qBAAAiB,EAAArI,EAAAqI,EAAAnJ,EAAA7B,OAAAK,OAAA+J,EAAAL,WAAAQ,EAAA,IAAAU,EAAAjB,GAAA,WAAAE,EAAArI,EAAA,WAAAxD,MAAA6M,EAAArB,EAAAC,EAAAS,KAAA1I,EAAA,SAAAsJ,EAAAtB,EAAAlH,EAAAmH,GAAA,WAAA3G,KAAA,SAAAiI,IAAAvB,EAAAwB,KAAA1I,EAAAmH,IAAA,MAAAD,GAAA,OAAA1G,KAAA,QAAAiI,IAAAvB,IAAAlH,EAAAoI,OAAA,IAAAO,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAA9L,EAAA,GAAA6K,EAAA7K,EAAA+B,EAAA,kBAAApE,OAAA,IAAAoO,EAAA7L,OAAA8L,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAjC,GAAAE,EAAAqB,KAAAU,EAAAlK,KAAA/B,EAAAiM,GAAA,IAAAE,EAAAL,EAAA7B,UAAAiB,EAAAjB,UAAA/J,OAAAK,OAAAP,GAAA,SAAAoM,EAAArC,GAAA,0BAAArK,QAAA,SAAAmD,GAAAgI,EAAAd,EAAAlH,EAAA,SAAAkH,GAAA,OAAApM,KAAA0O,QAAAxJ,EAAAkH,OAAA,SAAAuC,EAAAvC,EAAAlH,GAAA,SAAA0J,EAAAvC,EAAAI,EAAAE,EAAAvI,GAAA,IAAA0I,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAK,GAAA,aAAAK,EAAApH,KAAA,KAAAsH,EAAAF,EAAAa,IAAAE,EAAAb,EAAApM,MAAA,OAAAiN,GAAA,iBAAAA,GAAAtB,EAAAqB,KAAAC,EAAA,WAAA3I,EAAA2J,QAAAhB,EAAAiB,SAAA3N,KAAA,SAAAiL,GAAAwC,EAAA,OAAAxC,EAAAO,EAAAvI,IAAA,SAAAgI,GAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,KAAAc,EAAA2J,QAAAhB,GAAA1M,KAAA,SAAAiL,GAAAY,EAAApM,MAAAwL,EAAAO,EAAAK,IAAA,SAAAZ,GAAA,OAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,OAAA0I,EAAAa,KAAA,IAAAtB,EAAAI,EAAAzM,KAAA,WAAAY,MAAA,SAAAwL,EAAAG,GAAA,SAAAwC,IAAA,WAAA7J,EAAA,SAAAA,EAAAmH,GAAAuC,EAAAxC,EAAAG,EAAArH,EAAAmH,KAAA,OAAAA,MAAAlL,KAAA4N,YAAA,SAAAtB,EAAAvI,EAAAmH,EAAAE,GAAA,IAAAE,EAAAoB,EAAA,gBAAAlB,EAAAvI,GAAA,GAAAqI,IAAAsB,EAAA,UAAAiB,MAAA,mCAAAvC,IAAAuB,EAAA,cAAArB,EAAA,MAAAvI,EAAA,OAAAxD,MAAAwL,EAAA6C,MAAA,OAAA1C,EAAA2C,OAAAvC,EAAAJ,EAAAoB,IAAAvJ,IAAA,KAAA0I,EAAAP,EAAA4C,SAAA,GAAArC,EAAA,KAAAE,EAAAoC,EAAAtC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA2C,OAAA3C,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAoB,SAAA,aAAApB,EAAA2C,OAAA,IAAAzC,IAAAoB,EAAA,MAAApB,EAAAuB,EAAAzB,EAAAoB,IAAApB,EAAAgD,kBAAAhD,EAAAoB,SAAA,WAAApB,EAAA2C,QAAA3C,EAAAiD,OAAA,SAAAjD,EAAAoB,KAAAlB,EAAAsB,EAAA,IAAA1L,EAAAqL,EAAAxI,EAAAmH,EAAAE,GAAA,cAAAlK,EAAAqD,KAAA,IAAA+G,EAAAF,EAAA0C,KAAAjB,EAAAF,EAAAzL,EAAAsL,MAAAM,EAAA,gBAAArN,MAAAyB,EAAAsL,IAAAsB,KAAA1C,EAAA0C,MAAA,UAAA5M,EAAAqD,OAAA+G,EAAAuB,EAAAzB,EAAA2C,OAAA,QAAA3C,EAAAoB,IAAAtL,EAAAsL,OAAA,SAAAyB,EAAAlK,EAAAmH,GAAA,IAAAE,EAAAF,EAAA6C,OAAAzC,EAAAvH,EAAA2H,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAArH,EAAA2H,SAAA4C,SAAApD,EAAA6C,OAAA,SAAA7C,EAAAsB,IAAAvB,EAAAgD,EAAAlK,EAAAmH,GAAA,UAAAA,EAAA6C,SAAA,WAAA3C,IAAAF,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAAnD,EAAA,aAAA0B,EAAA,IAAAtB,EAAAe,EAAAjB,EAAAvH,EAAA2H,SAAAR,EAAAsB,KAAA,aAAAhB,EAAAjH,KAAA,OAAA2G,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAAhB,EAAAgB,IAAAtB,EAAA8C,SAAA,KAAAlB,EAAA,IAAA7J,EAAAuI,EAAAgB,IAAA,OAAAvJ,IAAA6K,MAAA5C,EAAAnH,EAAAyK,YAAAvL,EAAAxD,MAAAyL,EAAAuD,KAAA1K,EAAA2K,QAAA,WAAAxD,EAAA6C,SAAA7C,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,GAAAC,EAAA8C,SAAA,KAAAlB,GAAA7J,GAAAiI,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAlB,GAAA,SAAA6B,EAAA1D,GAAA,IAAAlH,EAAA,CAAA6K,OAAA3D,EAAA,SAAAA,IAAAlH,EAAA8K,SAAA5D,EAAA,SAAAA,IAAAlH,EAAA+K,WAAA7D,EAAA,GAAAlH,EAAAgL,SAAA9D,EAAA,IAAApM,KAAAmQ,WAAAlO,KAAAiD,GAAA,SAAAkL,EAAAhE,GAAA,IAAAlH,EAAAkH,EAAAiE,YAAA,GAAAnL,EAAAQ,KAAA,gBAAAR,EAAAyI,IAAAvB,EAAAiE,WAAAnL,EAAA,SAAAsI,EAAApB,GAAApM,KAAAmQ,WAAA,EAAAJ,OAAA,SAAA3D,EAAArK,QAAA+N,EAAA9P,WAAAsQ,OAAA,YAAA/B,EAAArJ,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAmH,EAAAnH,EAAAd,GAAA,GAAAiI,EAAA,OAAAA,EAAAuB,KAAA1I,GAAA,sBAAAA,EAAA0K,KAAA,OAAA1K,EAAA,IAAAqL,MAAArL,EAAAhG,QAAA,KAAAuN,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAAvH,EAAAhG,QAAA,GAAAqN,EAAAqB,KAAA1I,EAAAuH,GAAA,OAAAmD,EAAAhP,MAAAsE,EAAAuH,GAAAmD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAAxK,EAAA,2BAAAgJ,EAAA5B,UAAA6B,EAAA1B,EAAA+B,EAAA,eAAA5N,MAAAuN,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAAvN,MAAAsN,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA9H,EAAAuL,oBAAA,SAAArE,GAAA,IAAAlH,EAAA,mBAAAkH,KAAAsE,YAAA,QAAAxL,QAAAgJ,GAAA,uBAAAhJ,EAAAsL,aAAAtL,EAAAwB,QAAAxB,EAAAyL,KAAA,SAAAvE,GAAA,OAAA7J,OAAAqO,eAAArO,OAAAqO,eAAAxE,EAAA+B,IAAA/B,EAAAyE,UAAA1C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAA/J,OAAAK,OAAA4L,GAAApC,GAAAlH,EAAA4L,MAAA,SAAA1E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAE,EAAArC,WAAAY,EAAAyB,EAAArC,UAAAQ,EAAA,kBAAA9M,OAAAkF,EAAAyJ,gBAAAzJ,EAAA6L,MAAA,SAAA3E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAqE,SAAA,IAAA5M,EAAA,IAAAuK,EAAArB,EAAAlB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAzH,EAAAuL,oBAAApE,GAAAjI,IAAAwL,OAAAzO,KAAA,SAAAiL,GAAA,OAAAA,EAAA6C,KAAA7C,EAAAxL,MAAAwD,EAAAwL,UAAAnB,EAAAD,GAAAtB,EAAAsB,EAAAxB,EAAA,aAAAE,EAAAsB,EAAApK,EAAA,kBAAApE,OAAAkN,EAAAsB,EAAA,mDAAAtJ,EAAA+L,KAAA,SAAA7E,GAAA,IAAAlH,EAAA3C,OAAA6J,GAAAC,EAAA,WAAAE,KAAArH,EAAAmH,EAAApK,KAAAsK,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAnN,QAAA,KAAAkN,EAAAC,EAAA8E,MAAA,GAAA/E,KAAAlH,EAAA,OAAA0K,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1K,EAAAqJ,SAAAf,EAAAlB,UAAA,CAAAoE,YAAAlD,EAAA8C,MAAA,SAAApL,GAAA,GAAAlF,KAAAoR,KAAA,EAAApR,KAAA4P,KAAA,EAAA5P,KAAAqP,KAAArP,KAAAsP,MAAAlD,EAAApM,KAAAiP,MAAA,EAAAjP,KAAAmP,SAAA,KAAAnP,KAAAkP,OAAA,OAAAlP,KAAA2N,IAAAvB,EAAApM,KAAAmQ,WAAApO,QAAAqO,IAAAlL,EAAA,QAAAmH,KAAArM,KAAA,MAAAqM,EAAAgF,OAAA,IAAA9E,EAAAqB,KAAA5N,KAAAqM,KAAAkE,OAAAlE,EAAAiF,MAAA,MAAAtR,KAAAqM,GAAAD,IAAAmF,KAAA,WAAAvR,KAAAiP,MAAA,MAAA7C,EAAApM,KAAAmQ,WAAA,GAAAE,WAAA,aAAAjE,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,OAAA3N,KAAAwR,MAAAjC,kBAAA,SAAArK,GAAA,GAAAlF,KAAAiP,KAAA,MAAA/J,EAAA,IAAAmH,EAAArM,KAAA,SAAAyR,EAAAlF,EAAAE,GAAA,OAAArI,EAAAsB,KAAA,QAAAtB,EAAAuJ,IAAAzI,EAAAmH,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,KAAAK,EAAA,QAAAA,EAAAzM,KAAAmQ,WAAAjR,OAAA,EAAAuN,GAAA,IAAAA,EAAA,KAAAE,EAAA3M,KAAAmQ,WAAA1D,GAAArI,EAAAuI,EAAA0D,WAAA,YAAA1D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA/P,KAAAoR,KAAA,KAAAtE,EAAAP,EAAAqB,KAAAjB,EAAA,YAAAK,EAAAT,EAAAqB,KAAAjB,EAAA,iBAAAG,GAAAE,EAAA,IAAAhN,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,MAAAhQ,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAnD,GAAA,GAAA9M,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAAhD,EAAA,UAAAgC,MAAA,6CAAAhP,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAAlH,GAAA,QAAAmH,EAAArM,KAAAmQ,WAAAjR,OAAA,EAAAmN,GAAA,IAAAA,EAAA,KAAAI,EAAAzM,KAAAmQ,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA/P,KAAAoR,MAAA7E,EAAAqB,KAAAnB,EAAA,eAAAzM,KAAAoR,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA7K,MAAAyH,EAAAsD,aAAAtD,EAAA,UAAAvI,EAAAuI,IAAA0D,WAAA,UAAAjM,EAAAsB,KAAA0G,EAAAhI,EAAAuJ,IAAAzI,EAAAyH,GAAA3M,KAAAkP,OAAA,OAAAlP,KAAA4P,KAAAjD,EAAAsD,WAAAhC,GAAAjO,KAAA0R,SAAAtN,IAAAsN,SAAA,SAAAtF,EAAAlH,GAAA,aAAAkH,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,gBAAAvB,EAAA1G,MAAA,aAAA0G,EAAA1G,KAAA1F,KAAA4P,KAAAxD,EAAAuB,IAAA,WAAAvB,EAAA1G,MAAA1F,KAAAwR,KAAAxR,KAAA2N,IAAAvB,EAAAuB,IAAA3N,KAAAkP,OAAA,SAAAlP,KAAA4P,KAAA,kBAAAxD,EAAA1G,MAAAR,IAAAlF,KAAA4P,KAAA1K,GAAA+I,GAAA0D,OAAA,SAAAvF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA4D,aAAA7D,EAAA,OAAApM,KAAA0R,SAAArF,EAAAgE,WAAAhE,EAAA6D,UAAAE,EAAA/D,GAAA4B,IAAApH,MAAA,SAAAuF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAgE,WAAA,aAAA9D,EAAA7G,KAAA,KAAA+G,EAAAF,EAAAoB,IAAAyC,EAAA/D,GAAA,OAAAI,GAAA,UAAAuC,MAAA,0BAAA4C,cAAA,SAAA1M,EAAAmH,EAAAE,GAAA,OAAAvM,KAAAmP,SAAA,CAAAtC,SAAA0B,EAAArJ,GAAAyK,WAAAtD,EAAAwD,QAAAtD,GAAA,SAAAvM,KAAAkP,SAAAlP,KAAA2N,IAAAvB,GAAA6B,IAAA/I,EAUA,IAAM2M,GAAa,SAAHjN,GAAoB,IAAd9C,EAAO8C,EAAP9C,QACpB,OACEgB,IAAAC,cAACyI,IAAS,KAEN1J,EAAQM,IAAI,SAAAmF,GAAM,OAChBzE,IAAAC,cAAC4I,IAAa,CAAChL,IAAK4G,EAAO9E,IAAK8E,EAAOb,UAQ3CoL,GAAS,SAAHC,GAAsB,IAAhBC,EAASD,EAATC,UAEhBlM,EAAoCC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA3CmM,EAAUjM,EAAA,GAAEkM,EAAalM,EAAA,GAC1BmM,EAAYC,iBAAO,MACnBC,EAAWD,iBAAO,MAElBE,EADavL,OAAOC,SAASuL,KACVtL,QAAQ,QAAS,QAkC1C,OA9BAT,oBAAU,YACY,eAAAgM,EAAAC,YAAAtG,KAAAwE,KAAG,SAAA+B,EAAOC,GAAG,IAAAC,EAAA,OAAAzG,KAAAmB,KAAA,SAAAuF,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAjD,MAAA,cAAAiD,EAAAzB,KAAA,EAAAyB,EAAAjD,KAAA,EAEPkD,IAAOC,UAAUJ,GAAI,OAArCC,EAAOC,EAAAxD,KACb6C,EAAcU,GAASC,EAAAjD,KAAA,gBAAAiD,EAAAzB,KAAA,EAAAyB,EAAAG,GAAAH,EAAA,SAEvBlM,QAAQG,MAAM,4BAA2B+L,EAAAG,IAAS,yBAAAH,EAAAtB,SAAAmB,EAAA,iBAErD,gBAPmBO,GAAA,OAAAT,EAAA/R,MAAAT,KAAAU,aAAA,EASpBwS,CAAeZ,IACd,IAEH9L,oBAAU,WACR,GAAIyL,EAAY,CACd,IAAMkB,EAAShB,EAAUiB,QACnBC,EAAMF,EAAOG,WAAW,MACxBC,EAAM,IAAIC,MAChBD,EAAIE,IAAMxB,EAEVsB,EAAIG,OAAS,WAEXL,EAAIM,UAAU,EAAG,EAAGR,EAAOS,MAAOT,EAAO9P,QAGzCgQ,EAAIQ,UAAUN,EAAK,EAAG,MAGzB,CAACtB,IAGFnP,IAAAC,cAAA,OAAKE,UAAU,qBACbH,IAAAC,cAAA,UAAQa,IAAKuO,EAAWyB,MAAO5B,EAAW3O,OAAQ2O,EAAW7O,MAAO,CAAE2Q,QAAS,UAC/EhR,IAAAC,cAAA,OAAKa,IAAKyO,EAAUoB,IAAKxB,EAAY8B,IAAI,UAAU9Q,UAAU,gBAAgBE,MAAO,CAAEyQ,MAAO5B,EAAW3O,OAAQ2O,OA4FvGgC,GAvFI,SAAAlU,GACjB,IAAMmB,EAAW4E,cAAX5E,OACNiF,EAA8BH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAAnCpE,EAAOqE,EAAA,GAAE8N,EAAU9N,EAAA,GAC1BE,EAAwBN,mBAAS,MAAKO,EAAAL,YAAAI,EAAA,GAA/B7B,EAAI8B,EAAA,GAAEC,EAAOD,EAAA,GACd4N,EAAO,GAAAhN,OAAMH,OAAOC,SAASmN,OAAM,2BACzC/J,EAAsCrE,oBAAS,GAAMsE,EAAApE,YAAAmE,EAAA,GAA9CgK,EAAW/J,EAAA,GAAEgK,EAAchK,EAAA,GASlC,OAPA7D,oBAAU,WACJvF,IACFgL,EAAgBhL,EAAQgT,GACxBvP,EAAQzD,GAAQE,KAAKoF,KAEtB,CAACtF,IAGF6B,IAAAC,cAACuR,KAAI,KAEHxR,IAAAC,cAACuR,KAAK/K,IAAG,CAACzK,UAAQ,EAACyV,QAAS,GAE1BzR,IAAAC,cAACuR,KAAKE,OAAM,CAACZ,MAAO,GAClB9Q,IAAAC,cAACuR,KAAK/K,IAAG,KACTzG,IAAAC,cAACF,EAAiB,CAACS,kBAAkB,EAAMF,SAAU,KAEnDN,IAAAC,cAAA,UAAI,6CACKD,IAAAC,cAAA,KAAGwP,KAAM2B,EAASO,IAAI,sBAAsBlP,OAAO,UAAU2O,GACpEpR,IAAAC,cAAA,WAAK,2CAITD,IAAAC,cAACuR,KAAK/K,IAAG,CAACmL,cAAc,UACtB5R,IAAAC,cAACF,EAAiB,CAACS,kBAAkB,EAAMF,SAAU,KACnDN,IAAAC,cAAA,WACFD,IAAAC,cAAA,MAAIE,UAAWC,IAAOrE,aAAcsE,MAAO,CAACwR,SAAS,KACnD7R,IAAAC,cAAA,cAASyB,EAAOA,EAAKL,UAAY,WAKvCrB,IAAAC,cAACuR,KAAKE,OAAM,CAACZ,MAAO,GAClB9Q,IAAAC,cAAA,UAAI,iCAEFD,IAAAC,cAACyC,IAAM,CACLoP,SAAO,EACPnP,MAAM,OACNmE,QAAS,kBAAMyK,GAAe,KAC/B,iBAIHvR,IAAAC,cAAC8R,KAAK,CAACC,OAAK,EAACC,KAAMX,EAAaY,QAAS,kBAAMX,GAAe,KAC5DvR,IAAAC,cAACyC,IAAM,CACLyP,OAAK,EACLxP,MAAM,UACNmE,QAAS,kBAAMyK,GAAe,MAEhCvR,IAAAC,cAACF,EAAiB,KAChBC,IAAAC,cAAC+O,GAAM,CAACE,UAAU,YAItBlP,IAAAC,cAAC+O,GAAM,QAIXhP,IAAAC,cAACuR,KAAK/K,IAAG,CAACzK,UAAQ,EAACyV,QAAS,GAC1BzR,IAAAC,cAAA,UAAI,4CAEND,IAAAC,cAACuR,KAAK/K,IAAG,KACPzG,IAAAC,cAACF,EAAiB,CAACS,kBAAkB,EAAMF,SAAU,KAEjDN,IAAAC,cAAC0I,IAAI,CAACC,GAAE,SAAAxE,OAAWjG,EAAM,uBACvB6B,IAAAC,cAACyC,IAAM,CAACC,MAAM,WAAU,mBAKhC3C,IAAAC,cAACuR,KAAK/K,IAAG,KACPzG,IAAAC,cAACF,EAAiB,CAACS,kBAAkB,EAAMF,SAAU,KAEnDN,IAAAC,cAAC8O,GAAU,CAAC/P,QAASA,QCrFhBoT,GAhEA,SAAA7U,GAAAC,YAAA4U,EAAA7U,GAAA,IAAAE,EAAAC,YAAA0U,GAAA,SAAAA,IAAA,OAAAnV,YAAAC,KAAAkV,GAAA3U,EAAAE,MAAAT,KAAAU,WA6DZ,OA7DYb,YAAAqV,EAAA,EAAAvU,IAAA,SAAAC,MACb,WAAwB,IAAAa,EAAAzB,KAAjBqB,EAAUX,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,GACVyU,EAAoB9T,EAApB8T,MAAOC,EAAa/T,EAAb+T,SAEf,OAAOpV,KAAKG,KACTkV,+BAA+BF,EAAOC,GACtCjU,KAAK,SAAAmU,GACJ,IAAMC,EAAeD,EAAgBE,KACrC,OAAO/T,EAAKgU,aAAaF,KAE1B1O,MAAM,SAACC,GAEN,IAAM4O,EAAY5O,EAAM6O,KAClBrL,EAAexD,EAAM8O,QAIT,uBAAdF,EACFG,MAAM,6BAENA,MAAMvL,OAGb,CAAA3J,IAAA,QAAAC,MAED,SAAAgE,GAA2B,IAAAZ,EAAAhE,KAAnBmV,EAAKvQ,EAALuQ,MAAOC,EAAQxQ,EAARwQ,SACb,OAAOpV,KAAKG,KACT2V,2BAA2BX,EAAOC,GAClCjU,KAAK,SAAAmU,GACJ,IAAMC,EAAeD,EAAgBE,KACrC,OAAOxR,EAAKyR,aAAaF,KAE1B1O,MAAM,SAACC,GAEN,IAAM4O,EAAY5O,EAAM6O,KAClBrL,EAAexD,EAAM8O,QAIT,uBAAdF,EACFG,MAAM,6BAENA,MAAMvL,OAGb,CAAA3J,IAAA,sBAAAC,MAED,SAAoBmV,GAAc,IAAAxN,EAAAvI,KAChCA,KAAKG,KAAK6V,mBAAmB,SAAAR,GACvBA,GACFO,EAAaxN,EAAKkN,aAAaD,QAGpC,CAAA7U,IAAA,eAAAC,MAED,SAAa2U,GACX,MAAO,CACL9S,GAAI8S,EAAaU,IACjBd,MAAOI,EAAaJ,MACpBzO,KAAM6O,EAAa/E,iBAEtB0E,EA7DY,CAAStV,GCMTsW,GANI,SAAHtR,GAA4B,IAAtBuQ,EAAKvQ,EAALuQ,MAAOC,EAAQxQ,EAARwQ,SAG3B,OAFkB,IAAIF,IAELtS,OAAO,CAAEuS,QAAOC,cCGpBe,GANG,SAAHvR,GAA4B,IAAtBuQ,EAAKvQ,EAALuQ,MAAOC,EAAQxQ,EAARwQ,SAG1B,OAFkB,IAAIF,IAELkB,MAAM,CAAEjB,QAAOC,cCE5BiB,GAAe,SAACC,EAAK1R,GAAmD,IAA/CuQ,EAAKvQ,EAALuQ,MAAOC,EAAQxQ,EAARwQ,SAAUmB,EAAM3R,EAAN2R,OAAQC,EAAe5R,EAAf4R,gBACtDF,EAAMnR,iBACNoR,EAAO,CAAEpB,QAAOC,aACbjU,KAAK,SAAAqU,GAAI,OAAIgB,EAAgBhB,MAG5BiB,GAAa,SAAH1E,GAAyB,IAAnB2E,EAAY3E,EAAZ2E,aACpB5Q,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BqP,EAAKnP,EAAA,GAAE2Q,EAAQ3Q,EAAA,GACtBE,EAAgCH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAArCkP,EAAQjP,EAAA,GAAEyQ,EAAWzQ,EAAA,GAE5B,OACErD,IAAAC,cAACiC,IAAI,CAAC/B,UAAU,OAAOgC,SAAU,SAAA8I,GAAC,OAAIsI,GAAatI,EAAG,CAAEoH,QAAOC,WAAUmB,OAAQL,GAAYM,gBAAiBE,MAC5G5T,IAAAC,cAACqC,IAAS,KACRtC,IAAAC,cAACsC,IAAK,CAAC0G,IAAI,SAAQ,UACnBjJ,IAAAC,cAACuC,IAAK,CAAC7C,GAAG,QAAQiE,KAAK,QAAQ9F,MAAOuU,EAAOzT,SAAU,SAAAwD,GAAC,OAAIyR,EAASzR,EAAEK,OAAO3E,WAEhFkC,IAAAC,cAACqC,IAAS,KACRtC,IAAAC,cAACsC,IAAK,KAAC,aACPvC,IAAAC,cAACuC,IAAK,CAACI,KAAK,WAAWgB,KAAK,WAAW9F,MAAOwU,EAAU1T,SAAU,SAAAwD,GAAC,OAAI0R,EAAY1R,EAAEK,OAAO3E,WAE9FkC,IAAAC,cAACyC,IAAM,CAACC,MAAM,WAAU,aAKxBoR,GAAY,SAAHrE,GAAyB,IAAnBkE,EAAYlE,EAAZkE,aACnBrQ,EAA0BN,mBAAS,IAAGO,EAAAL,YAAAI,EAAA,GAA/B8O,EAAK7O,EAAA,GAAEqQ,EAAQrQ,EAAA,GACtB8D,EAAgCrE,mBAAS,IAAGsE,EAAApE,YAAAmE,EAAA,GAArCgL,EAAQ/K,EAAA,GAAEuM,EAAWvM,EAAA,GAE5B,OACEvH,IAAAC,cAACiC,IAAI,CAAC/B,UAAU,OAAOgC,SAAU,SAAA8I,GAAC,OAAIsI,GAAatI,EAAG,CAAEoH,QAAOC,WAAUmB,OAAQJ,GAAWK,gBAAiBE,MAC3G5T,IAAAC,cAACqC,IAAS,KACRtC,IAAAC,cAACsC,IAAK,CAAC0G,IAAI,SAAQ,UACnBjJ,IAAAC,cAACuC,IAAK,CAAC7C,GAAG,QAAQiE,KAAK,QAAQ9F,MAAOuU,EAAOzT,SAAU,SAAAwD,GAAC,OAAIyR,EAASzR,EAAEK,OAAO3E,WAEhFkC,IAAAC,cAACqC,IAAS,KACRtC,IAAAC,cAACsC,IAAK,KAAC,aACPvC,IAAAC,cAACuC,IAAK,CAACI,KAAK,WAAWgB,KAAK,WAAW9F,MAAOwU,EAAU1T,SAAU,SAAAwD,GAAC,OAAI0R,EAAY1R,EAAEK,OAAO3E,WAE9FkC,IAAAC,cAACyC,IAAM,CAACC,MAAM,WAAU,WAyCfqR,GApCI,SAAAhX,GACjB,IAAA0K,EAA4CzE,oBAAS,GAAM0E,EAAAxE,YAAAuE,EAAA,GAApDuM,EAActM,EAAA,GAAEuM,EAAiBvM,EAAA,GACxCwM,EAAwBlR,mBAAS,MAAKmR,EAAAjR,YAAAgR,EAAA,GAA/BzB,EAAI0B,EAAA,GAAEC,EAAOD,EAAA,GAEdE,EAAa,SAAAd,GACjBA,EAAMnR,iBACN6R,GAAmBD,IAGrB,OAAIvB,EACK1S,IAAAC,cAAC+I,IAAQ,CAACJ,GAAG,WACXqL,EAEPjU,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAgB,GAChDR,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAC8T,GAAS,CAACH,aAAcS,IACzBrU,IAAAC,cAAA,WAAK,eACSD,IAAAC,cAAA,WACZD,IAAAC,cAACyC,IAAM,CAACC,MAAM,OAAOmE,QAASwN,GAAY,cAM9CtU,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAgB,GAChDR,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAC0T,GAAU,CAACC,aAAcS,IAC1BrU,IAAAC,cAAA,WAAK,oBACcD,IAAAC,cAAA,WACjBD,IAAAC,cAACyC,IAAM,CAACC,MAAM,OAAOmE,QAASwN,GAAY,YCxErCC,GANQ,WACrB,IAAMC,EAAY,IAAIpC,GAEtB,OAAO,IAAIlE,QAAQ,SAAAnC,GAAO,OAAIyI,EAAUC,oBAAoB1I,MCM/C2I,GANa,WAC1B,IAAMC,EAAY,IAAIhU,EAEtB,OAAO4T,KAAiBlW,KAAK,SAAAqU,GAAI,OAAIA,EAAOiC,EAAUxM,KAAK,CAAE/G,QAASsR,EAAK/S,KAAQ,QCuCtEiV,GAzCM,WACnB,IAAA5R,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BuF,EAAKrF,EAAA,GAAEsF,EAAQtF,EAAA,GACtBE,EAAsCH,mBAAS,MAAKI,EAAAF,YAAAC,EAAA,GAA7CyR,EAAWxR,EAAA,GAAEyR,EAAczR,EAAA,GAMlC,OAJAK,oBAAU,WACRgR,KAAsBrW,KAAKmK,IAC1B,IAECqM,EACK7U,IAAAC,cAAC+I,IAAQ,CAACJ,GAAIiM,IAGnB7U,IAAAC,cAACC,IAAS,CAACG,MAAO,CAACC,SAAU,UAC3BN,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAACyI,IAAS,KAENH,EAAMjJ,IAAI,SAAAoC,GAAI,OACZ1B,IAAAC,cAAC4I,IAAa,CACZhL,IAAK6D,EAAK/B,GACVmH,QAAS,kBAAMgO,EAAc,UAAA1Q,OAAW1C,EAAK/B,MAC7CmJ,IAAI,SACJC,QAAM,GAELrH,EAAKkC,QAIZ5D,IAAAC,cAAC4I,IAAa,CACZ/B,QAAS,kBAAMgO,EAAe,kBAC9BhM,IAAI,SACJnG,MAAM,OACNoG,QAAM,GACP,qCC7BIgM,GANI,SAACxW,GAA4C,IAAhCoW,EAAS/W,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAI+C,EAExCU,EAAY+G,OAAO4M,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,QAC/D,OAAON,EAAU7U,OAAOL,OAAOC,OAAO,CAAE2B,aAAa9C,KC8BxC4W,GAzBS,SAAAnY,GACtB,IAAAgG,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/B0P,EAAIxP,EAAA,GAAEmR,EAAOnR,EAAA,GACpBE,EAAgCH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAArCgS,EAAQ/R,EAAA,GAAEgS,EAAWhS,EAAA,GAC5BE,EAAwBN,mBAAS,MAAKO,EAAAL,YAAAI,EAAA,GAA/B7B,EAAI8B,EAAA,GAAEC,EAAOD,EAAA,GAMpB,OAJAE,oBAAU,WACR6Q,KAAiBlW,KAAKgW,IACrB,IAEC3S,EACK1B,IAAAC,cAAC+I,IAAQ,CAACJ,GAAG,WAGlB5I,IAAAC,cAACC,IAAS,CAACG,MAAO,CAACC,SAAU,UAC3BN,IAAAC,cAAA,UAAI,wCACJD,IAAAC,cAACqC,IAAS,KACRtC,IAAAC,cAACsC,IAAK,CAAC0G,IAAI,QAAO,6BAClBjJ,IAAAC,cAACuC,IAAK,CAAC7C,GAAG,OAAOiE,KAAK,OAAO9F,MAAOsX,EAAUxW,SAAU,SAAAwD,GAAC,OAAIiT,EAAYjT,EAAEK,OAAO3E,WAEpFkC,IAAAC,cAACyC,IAAM,CAACC,MAAM,UAAUmE,QAAS,kBAvB3BwO,EAuBsC,CAAE1R,KAAMwR,EAAUhU,QAASsR,EAAK/S,IAvBtD4V,EAuB4D9R,EAtBjFsR,GAAWO,GAAgBjX,KAAKkX,GAD5B,IAACD,EAAgBC,IAuBsE,kBCvBrFC,GALM,SAACxX,GAEpB,OADsB,IAAImH,GACLgD,KAAKnK,wECgBbyX,GAXM,SAAClX,GAAoD,IAAxCwH,EAAanI,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAIuH,EAChDG,EAAiB7F,OAAOC,OAAO,GAAInB,GAEvC,GAAI,OAAQ+G,EAAgB,CAC1B,IAAMd,EAAaU,EAAOI,EAAgB,MAC1C,OAAOS,EAActE,OAAO+C,EAAYc,GAExC,OAAOS,EAAcjG,OAAOwF,2BCfhC+D,GAAA,kBAAAjH,GAAA,IAAAkH,EAAAlH,EAAA,GAAAmH,EAAA9J,OAAA+J,UAAAC,EAAAF,EAAAG,eAAAC,EAAAlK,OAAAmK,gBAAA,SAAAN,EAAAlH,EAAAmH,GAAAD,EAAAlH,GAAAmH,EAAAzL,OAAA+L,EAAA,mBAAAC,cAAA,GAAAxI,EAAAuI,EAAAE,UAAA,aAAAC,EAAAH,EAAAI,eAAA,kBAAAC,EAAAL,EAAAM,aAAA,yBAAAC,EAAAd,EAAAlH,EAAAmH,GAAA,OAAA9J,OAAAmK,eAAAN,EAAAlH,EAAA,CAAAtE,MAAAyL,EAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAlH,GAAA,IAAAgI,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAlH,EAAAmH,GAAA,OAAAD,EAAAlH,GAAAmH,GAAA,SAAAiB,EAAAlB,EAAAlH,EAAAmH,EAAAE,GAAA,IAAAI,EAAAzH,KAAAoH,qBAAAiB,EAAArI,EAAAqI,EAAAnJ,EAAA7B,OAAAK,OAAA+J,EAAAL,WAAAQ,EAAA,IAAAU,EAAAjB,GAAA,WAAAE,EAAArI,EAAA,WAAAxD,MAAA6M,EAAArB,EAAAC,EAAAS,KAAA1I,EAAA,SAAAsJ,EAAAtB,EAAAlH,EAAAmH,GAAA,WAAA3G,KAAA,SAAAiI,IAAAvB,EAAAwB,KAAA1I,EAAAmH,IAAA,MAAAD,GAAA,OAAA1G,KAAA,QAAAiI,IAAAvB,IAAAlH,EAAAoI,OAAA,IAAAO,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAA9L,EAAA,GAAA6K,EAAA7K,EAAA+B,EAAA,kBAAApE,OAAA,IAAAoO,EAAA7L,OAAA8L,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAjC,GAAAE,EAAAqB,KAAAU,EAAAlK,KAAA/B,EAAAiM,GAAA,IAAAE,EAAAL,EAAA7B,UAAAiB,EAAAjB,UAAA/J,OAAAK,OAAAP,GAAA,SAAAoM,EAAArC,GAAA,0BAAArK,QAAA,SAAAmD,GAAAgI,EAAAd,EAAAlH,EAAA,SAAAkH,GAAA,OAAApM,KAAA0O,QAAAxJ,EAAAkH,OAAA,SAAAuC,EAAAvC,EAAAlH,GAAA,SAAA0J,EAAAvC,EAAAI,EAAAE,EAAAvI,GAAA,IAAA0I,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAK,GAAA,aAAAK,EAAApH,KAAA,KAAAsH,EAAAF,EAAAa,IAAAE,EAAAb,EAAApM,MAAA,OAAAiN,GAAA,iBAAAA,GAAAtB,EAAAqB,KAAAC,EAAA,WAAA3I,EAAA2J,QAAAhB,EAAAiB,SAAA3N,KAAA,SAAAiL,GAAAwC,EAAA,OAAAxC,EAAAO,EAAAvI,IAAA,SAAAgI,GAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,KAAAc,EAAA2J,QAAAhB,GAAA1M,KAAA,SAAAiL,GAAAY,EAAApM,MAAAwL,EAAAO,EAAAK,IAAA,SAAAZ,GAAA,OAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,OAAA0I,EAAAa,KAAA,IAAAtB,EAAAI,EAAAzM,KAAA,WAAAY,MAAA,SAAAwL,EAAAG,GAAA,SAAAwC,IAAA,WAAA7J,EAAA,SAAAA,EAAAmH,GAAAuC,EAAAxC,EAAAG,EAAArH,EAAAmH,KAAA,OAAAA,MAAAlL,KAAA4N,YAAA,SAAAtB,EAAAvI,EAAAmH,EAAAE,GAAA,IAAAE,EAAAoB,EAAA,gBAAAlB,EAAAvI,GAAA,GAAAqI,IAAAsB,EAAA,UAAAiB,MAAA,mCAAAvC,IAAAuB,EAAA,cAAArB,EAAA,MAAAvI,EAAA,OAAAxD,MAAAwL,EAAA6C,MAAA,OAAA1C,EAAA2C,OAAAvC,EAAAJ,EAAAoB,IAAAvJ,IAAA,KAAA0I,EAAAP,EAAA4C,SAAA,GAAArC,EAAA,KAAAE,EAAAoC,EAAAtC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA2C,OAAA3C,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAoB,SAAA,aAAApB,EAAA2C,OAAA,IAAAzC,IAAAoB,EAAA,MAAApB,EAAAuB,EAAAzB,EAAAoB,IAAApB,EAAAgD,kBAAAhD,EAAAoB,SAAA,WAAApB,EAAA2C,QAAA3C,EAAAiD,OAAA,SAAAjD,EAAAoB,KAAAlB,EAAAsB,EAAA,IAAA1L,EAAAqL,EAAAxI,EAAAmH,EAAAE,GAAA,cAAAlK,EAAAqD,KAAA,IAAA+G,EAAAF,EAAA0C,KAAAjB,EAAAF,EAAAzL,EAAAsL,MAAAM,EAAA,gBAAArN,MAAAyB,EAAAsL,IAAAsB,KAAA1C,EAAA0C,MAAA,UAAA5M,EAAAqD,OAAA+G,EAAAuB,EAAAzB,EAAA2C,OAAA,QAAA3C,EAAAoB,IAAAtL,EAAAsL,OAAA,SAAAyB,EAAAlK,EAAAmH,GAAA,IAAAE,EAAAF,EAAA6C,OAAAzC,EAAAvH,EAAA2H,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAArH,EAAA2H,SAAA4C,SAAApD,EAAA6C,OAAA,SAAA7C,EAAAsB,IAAAvB,EAAAgD,EAAAlK,EAAAmH,GAAA,UAAAA,EAAA6C,SAAA,WAAA3C,IAAAF,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAAnD,EAAA,aAAA0B,EAAA,IAAAtB,EAAAe,EAAAjB,EAAAvH,EAAA2H,SAAAR,EAAAsB,KAAA,aAAAhB,EAAAjH,KAAA,OAAA2G,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAAhB,EAAAgB,IAAAtB,EAAA8C,SAAA,KAAAlB,EAAA,IAAA7J,EAAAuI,EAAAgB,IAAA,OAAAvJ,IAAA6K,MAAA5C,EAAAnH,EAAAyK,YAAAvL,EAAAxD,MAAAyL,EAAAuD,KAAA1K,EAAA2K,QAAA,WAAAxD,EAAA6C,SAAA7C,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,GAAAC,EAAA8C,SAAA,KAAAlB,GAAA7J,GAAAiI,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAlB,GAAA,SAAA6B,EAAA1D,GAAA,IAAAlH,EAAA,CAAA6K,OAAA3D,EAAA,SAAAA,IAAAlH,EAAA8K,SAAA5D,EAAA,SAAAA,IAAAlH,EAAA+K,WAAA7D,EAAA,GAAAlH,EAAAgL,SAAA9D,EAAA,IAAApM,KAAAmQ,WAAAlO,KAAAiD,GAAA,SAAAkL,EAAAhE,GAAA,IAAAlH,EAAAkH,EAAAiE,YAAA,GAAAnL,EAAAQ,KAAA,gBAAAR,EAAAyI,IAAAvB,EAAAiE,WAAAnL,EAAA,SAAAsI,EAAApB,GAAApM,KAAAmQ,WAAA,EAAAJ,OAAA,SAAA3D,EAAArK,QAAA+N,EAAA9P,WAAAsQ,OAAA,YAAA/B,EAAArJ,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAmH,EAAAnH,EAAAd,GAAA,GAAAiI,EAAA,OAAAA,EAAAuB,KAAA1I,GAAA,sBAAAA,EAAA0K,KAAA,OAAA1K,EAAA,IAAAqL,MAAArL,EAAAhG,QAAA,KAAAuN,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAAvH,EAAAhG,QAAA,GAAAqN,EAAAqB,KAAA1I,EAAAuH,GAAA,OAAAmD,EAAAhP,MAAAsE,EAAAuH,GAAAmD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAAxK,EAAA,2BAAAgJ,EAAA5B,UAAA6B,EAAA1B,EAAA+B,EAAA,eAAA5N,MAAAuN,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAAvN,MAAAsN,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA9H,EAAAuL,oBAAA,SAAArE,GAAA,IAAAlH,EAAA,mBAAAkH,KAAAsE,YAAA,QAAAxL,QAAAgJ,GAAA,uBAAAhJ,EAAAsL,aAAAtL,EAAAwB,QAAAxB,EAAAyL,KAAA,SAAAvE,GAAA,OAAA7J,OAAAqO,eAAArO,OAAAqO,eAAAxE,EAAA+B,IAAA/B,EAAAyE,UAAA1C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAA/J,OAAAK,OAAA4L,GAAApC,GAAAlH,EAAA4L,MAAA,SAAA1E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAE,EAAArC,WAAAY,EAAAyB,EAAArC,UAAAQ,EAAA,kBAAA9M,OAAAkF,EAAAyJ,gBAAAzJ,EAAA6L,MAAA,SAAA3E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAqE,SAAA,IAAA5M,EAAA,IAAAuK,EAAArB,EAAAlB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAzH,EAAAuL,oBAAApE,GAAAjI,IAAAwL,OAAAzO,KAAA,SAAAiL,GAAA,OAAAA,EAAA6C,KAAA7C,EAAAxL,MAAAwD,EAAAwL,UAAAnB,EAAAD,GAAAtB,EAAAsB,EAAAxB,EAAA,aAAAE,EAAAsB,EAAApK,EAAA,kBAAApE,OAAAkN,EAAAsB,EAAA,mDAAAtJ,EAAA+L,KAAA,SAAA7E,GAAA,IAAAlH,EAAA3C,OAAA6J,GAAAC,EAAA,WAAAE,KAAArH,EAAAmH,EAAApK,KAAAsK,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAnN,QAAA,KAAAkN,EAAAC,EAAA8E,MAAA,GAAA/E,KAAAlH,EAAA,OAAA0K,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1K,EAAAqJ,SAAAf,EAAAlB,UAAA,CAAAoE,YAAAlD,EAAA8C,MAAA,SAAApL,GAAA,GAAAlF,KAAAoR,KAAA,EAAApR,KAAA4P,KAAA,EAAA5P,KAAAqP,KAAArP,KAAAsP,MAAAlD,EAAApM,KAAAiP,MAAA,EAAAjP,KAAAmP,SAAA,KAAAnP,KAAAkP,OAAA,OAAAlP,KAAA2N,IAAAvB,EAAApM,KAAAmQ,WAAApO,QAAAqO,IAAAlL,EAAA,QAAAmH,KAAArM,KAAA,MAAAqM,EAAAgF,OAAA,IAAA9E,EAAAqB,KAAA5N,KAAAqM,KAAAkE,OAAAlE,EAAAiF,MAAA,MAAAtR,KAAAqM,GAAAD,IAAAmF,KAAA,WAAAvR,KAAAiP,MAAA,MAAA7C,EAAApM,KAAAmQ,WAAA,GAAAE,WAAA,aAAAjE,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,OAAA3N,KAAAwR,MAAAjC,kBAAA,SAAArK,GAAA,GAAAlF,KAAAiP,KAAA,MAAA/J,EAAA,IAAAmH,EAAArM,KAAA,SAAAyR,EAAAlF,EAAAE,GAAA,OAAArI,EAAAsB,KAAA,QAAAtB,EAAAuJ,IAAAzI,EAAAmH,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,KAAAK,EAAA,QAAAA,EAAAzM,KAAAmQ,WAAAjR,OAAA,EAAAuN,GAAA,IAAAA,EAAA,KAAAE,EAAA3M,KAAAmQ,WAAA1D,GAAArI,EAAAuI,EAAA0D,WAAA,YAAA1D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA/P,KAAAoR,KAAA,KAAAtE,EAAAP,EAAAqB,KAAAjB,EAAA,YAAAK,EAAAT,EAAAqB,KAAAjB,EAAA,iBAAAG,GAAAE,EAAA,IAAAhN,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,MAAAhQ,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAnD,GAAA,GAAA9M,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAAhD,EAAA,UAAAgC,MAAA,6CAAAhP,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAAlH,GAAA,QAAAmH,EAAArM,KAAAmQ,WAAAjR,OAAA,EAAAmN,GAAA,IAAAA,EAAA,KAAAI,EAAAzM,KAAAmQ,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA/P,KAAAoR,MAAA7E,EAAAqB,KAAAnB,EAAA,eAAAzM,KAAAoR,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA7K,MAAAyH,EAAAsD,aAAAtD,EAAA,UAAAvI,EAAAuI,IAAA0D,WAAA,UAAAjM,EAAAsB,KAAA0G,EAAAhI,EAAAuJ,IAAAzI,EAAAyH,GAAA3M,KAAAkP,OAAA,OAAAlP,KAAA4P,KAAAjD,EAAAsD,WAAAhC,GAAAjO,KAAA0R,SAAAtN,IAAAsN,SAAA,SAAAtF,EAAAlH,GAAA,aAAAkH,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,gBAAAvB,EAAA1G,MAAA,aAAA0G,EAAA1G,KAAA1F,KAAA4P,KAAAxD,EAAAuB,IAAA,WAAAvB,EAAA1G,MAAA1F,KAAAwR,KAAAxR,KAAA2N,IAAAvB,EAAAuB,IAAA3N,KAAAkP,OAAA,SAAAlP,KAAA4P,KAAA,kBAAAxD,EAAA1G,MAAAR,IAAAlF,KAAA4P,KAAA1K,GAAA+I,GAAA0D,OAAA,SAAAvF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA4D,aAAA7D,EAAA,OAAApM,KAAA0R,SAAArF,EAAAgE,WAAAhE,EAAA6D,UAAAE,EAAA/D,GAAA4B,IAAApH,MAAA,SAAAuF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAgE,WAAA,aAAA9D,EAAA7G,KAAA,KAAA+G,EAAAF,EAAAoB,IAAAyC,EAAA/D,GAAA,OAAAI,GAAA,UAAAuC,MAAA,0BAAA4C,cAAA,SAAA1M,EAAAmH,EAAAE,GAAA,OAAAvM,KAAAmP,SAAA,CAAAtC,SAAA0B,EAAArJ,GAAAyK,WAAAtD,EAAAwD,QAAAtD,GAAA,SAAAvM,KAAAkP,SAAAlP,KAAA2N,IAAAvB,GAAA6B,IAAA/I,EAGA,IAAMsT,GAAazR,OAAOC,SAASuL,KAI7BkG,GAFY,IAAIC,IAAIF,IACHG,SACDC,MAAM,KACtB3X,GAASwX,GAASA,GAASvZ,OAAS,GAC1CyH,QAAQC,IAAI,UAAW3F,IAEvB,IAWe4X,GAXK,eAAAjU,EAAA6N,YAAAtG,KAAAwE,KAAG,SAAA+B,EAAOpL,GAAU,IAAAwR,EAAA,OAAA3M,KAAAmB,KAAA,SAAAuF,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAjD,MAAA,OACL,OAAzBkJ,EAAK9Z,EAASkB,YAAW2S,EAAAzB,KAAA,EAAAyB,EAAAjD,KAAA,EAGrBmJ,aAAU/X,aAAI8X,EAAI,QAAS7X,GAAQ,YAAaqG,IAAY,OAClEP,OAAOC,SAASgS,SAASnG,EAAAjD,KAAA,sBAAAiD,EAAAzB,KAAA,EAAAyB,EAAAG,GAAAH,EAAA,SAEnB,IAAI7D,MAAM,4BAA8B6D,EAAAG,GAAM4C,SAAQ,yBAAA/C,EAAAtB,SAAAmB,EAAA,iBAEnE,gBATmBO,GAAA,OAAArO,EAAAnE,MAAAT,KAAAU,YAAA,iBCXpByL,GAAA,kBAAAjH,GAAA,IAAAkH,EAAAlH,EAAA,GAAAmH,EAAA9J,OAAA+J,UAAAC,EAAAF,EAAAG,eAAAC,EAAAlK,OAAAmK,gBAAA,SAAAN,EAAAlH,EAAAmH,GAAAD,EAAAlH,GAAAmH,EAAAzL,OAAA+L,EAAA,mBAAAC,cAAA,GAAAxI,EAAAuI,EAAAE,UAAA,aAAAC,EAAAH,EAAAI,eAAA,kBAAAC,EAAAL,EAAAM,aAAA,yBAAAC,EAAAd,EAAAlH,EAAAmH,GAAA,OAAA9J,OAAAmK,eAAAN,EAAAlH,EAAA,CAAAtE,MAAAyL,EAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAlH,GAAA,IAAAgI,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAlH,EAAAmH,GAAA,OAAAD,EAAAlH,GAAAmH,GAAA,SAAAiB,EAAAlB,EAAAlH,EAAAmH,EAAAE,GAAA,IAAAI,EAAAzH,KAAAoH,qBAAAiB,EAAArI,EAAAqI,EAAAnJ,EAAA7B,OAAAK,OAAA+J,EAAAL,WAAAQ,EAAA,IAAAU,EAAAjB,GAAA,WAAAE,EAAArI,EAAA,WAAAxD,MAAA6M,EAAArB,EAAAC,EAAAS,KAAA1I,EAAA,SAAAsJ,EAAAtB,EAAAlH,EAAAmH,GAAA,WAAA3G,KAAA,SAAAiI,IAAAvB,EAAAwB,KAAA1I,EAAAmH,IAAA,MAAAD,GAAA,OAAA1G,KAAA,QAAAiI,IAAAvB,IAAAlH,EAAAoI,OAAA,IAAAO,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAA9L,EAAA,GAAA6K,EAAA7K,EAAA+B,EAAA,kBAAApE,OAAA,IAAAoO,EAAA7L,OAAA8L,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAjC,GAAAE,EAAAqB,KAAAU,EAAAlK,KAAA/B,EAAAiM,GAAA,IAAAE,EAAAL,EAAA7B,UAAAiB,EAAAjB,UAAA/J,OAAAK,OAAAP,GAAA,SAAAoM,EAAArC,GAAA,0BAAArK,QAAA,SAAAmD,GAAAgI,EAAAd,EAAAlH,EAAA,SAAAkH,GAAA,OAAApM,KAAA0O,QAAAxJ,EAAAkH,OAAA,SAAAuC,EAAAvC,EAAAlH,GAAA,SAAA0J,EAAAvC,EAAAI,EAAAE,EAAAvI,GAAA,IAAA0I,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAK,GAAA,aAAAK,EAAApH,KAAA,KAAAsH,EAAAF,EAAAa,IAAAE,EAAAb,EAAApM,MAAA,OAAAiN,GAAA,iBAAAA,GAAAtB,EAAAqB,KAAAC,EAAA,WAAA3I,EAAA2J,QAAAhB,EAAAiB,SAAA3N,KAAA,SAAAiL,GAAAwC,EAAA,OAAAxC,EAAAO,EAAAvI,IAAA,SAAAgI,GAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,KAAAc,EAAA2J,QAAAhB,GAAA1M,KAAA,SAAAiL,GAAAY,EAAApM,MAAAwL,EAAAO,EAAAK,IAAA,SAAAZ,GAAA,OAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,OAAA0I,EAAAa,KAAA,IAAAtB,EAAAI,EAAAzM,KAAA,WAAAY,MAAA,SAAAwL,EAAAG,GAAA,SAAAwC,IAAA,WAAA7J,EAAA,SAAAA,EAAAmH,GAAAuC,EAAAxC,EAAAG,EAAArH,EAAAmH,KAAA,OAAAA,MAAAlL,KAAA4N,YAAA,SAAAtB,EAAAvI,EAAAmH,EAAAE,GAAA,IAAAE,EAAAoB,EAAA,gBAAAlB,EAAAvI,GAAA,GAAAqI,IAAAsB,EAAA,UAAAiB,MAAA,mCAAAvC,IAAAuB,EAAA,cAAArB,EAAA,MAAAvI,EAAA,OAAAxD,MAAAwL,EAAA6C,MAAA,OAAA1C,EAAA2C,OAAAvC,EAAAJ,EAAAoB,IAAAvJ,IAAA,KAAA0I,EAAAP,EAAA4C,SAAA,GAAArC,EAAA,KAAAE,EAAAoC,EAAAtC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA2C,OAAA3C,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAoB,SAAA,aAAApB,EAAA2C,OAAA,IAAAzC,IAAAoB,EAAA,MAAApB,EAAAuB,EAAAzB,EAAAoB,IAAApB,EAAAgD,kBAAAhD,EAAAoB,SAAA,WAAApB,EAAA2C,QAAA3C,EAAAiD,OAAA,SAAAjD,EAAAoB,KAAAlB,EAAAsB,EAAA,IAAA1L,EAAAqL,EAAAxI,EAAAmH,EAAAE,GAAA,cAAAlK,EAAAqD,KAAA,IAAA+G,EAAAF,EAAA0C,KAAAjB,EAAAF,EAAAzL,EAAAsL,MAAAM,EAAA,gBAAArN,MAAAyB,EAAAsL,IAAAsB,KAAA1C,EAAA0C,MAAA,UAAA5M,EAAAqD,OAAA+G,EAAAuB,EAAAzB,EAAA2C,OAAA,QAAA3C,EAAAoB,IAAAtL,EAAAsL,OAAA,SAAAyB,EAAAlK,EAAAmH,GAAA,IAAAE,EAAAF,EAAA6C,OAAAzC,EAAAvH,EAAA2H,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAArH,EAAA2H,SAAA4C,SAAApD,EAAA6C,OAAA,SAAA7C,EAAAsB,IAAAvB,EAAAgD,EAAAlK,EAAAmH,GAAA,UAAAA,EAAA6C,SAAA,WAAA3C,IAAAF,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAAnD,EAAA,aAAA0B,EAAA,IAAAtB,EAAAe,EAAAjB,EAAAvH,EAAA2H,SAAAR,EAAAsB,KAAA,aAAAhB,EAAAjH,KAAA,OAAA2G,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAAhB,EAAAgB,IAAAtB,EAAA8C,SAAA,KAAAlB,EAAA,IAAA7J,EAAAuI,EAAAgB,IAAA,OAAAvJ,IAAA6K,MAAA5C,EAAAnH,EAAAyK,YAAAvL,EAAAxD,MAAAyL,EAAAuD,KAAA1K,EAAA2K,QAAA,WAAAxD,EAAA6C,SAAA7C,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,GAAAC,EAAA8C,SAAA,KAAAlB,GAAA7J,GAAAiI,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAlB,GAAA,SAAA6B,EAAA1D,GAAA,IAAAlH,EAAA,CAAA6K,OAAA3D,EAAA,SAAAA,IAAAlH,EAAA8K,SAAA5D,EAAA,SAAAA,IAAAlH,EAAA+K,WAAA7D,EAAA,GAAAlH,EAAAgL,SAAA9D,EAAA,IAAApM,KAAAmQ,WAAAlO,KAAAiD,GAAA,SAAAkL,EAAAhE,GAAA,IAAAlH,EAAAkH,EAAAiE,YAAA,GAAAnL,EAAAQ,KAAA,gBAAAR,EAAAyI,IAAAvB,EAAAiE,WAAAnL,EAAA,SAAAsI,EAAApB,GAAApM,KAAAmQ,WAAA,EAAAJ,OAAA,SAAA3D,EAAArK,QAAA+N,EAAA9P,WAAAsQ,OAAA,YAAA/B,EAAArJ,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAmH,EAAAnH,EAAAd,GAAA,GAAAiI,EAAA,OAAAA,EAAAuB,KAAA1I,GAAA,sBAAAA,EAAA0K,KAAA,OAAA1K,EAAA,IAAAqL,MAAArL,EAAAhG,QAAA,KAAAuN,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAAvH,EAAAhG,QAAA,GAAAqN,EAAAqB,KAAA1I,EAAAuH,GAAA,OAAAmD,EAAAhP,MAAAsE,EAAAuH,GAAAmD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAAxK,EAAA,2BAAAgJ,EAAA5B,UAAA6B,EAAA1B,EAAA+B,EAAA,eAAA5N,MAAAuN,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAAvN,MAAAsN,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA9H,EAAAuL,oBAAA,SAAArE,GAAA,IAAAlH,EAAA,mBAAAkH,KAAAsE,YAAA,QAAAxL,QAAAgJ,GAAA,uBAAAhJ,EAAAsL,aAAAtL,EAAAwB,QAAAxB,EAAAyL,KAAA,SAAAvE,GAAA,OAAA7J,OAAAqO,eAAArO,OAAAqO,eAAAxE,EAAA+B,IAAA/B,EAAAyE,UAAA1C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAA/J,OAAAK,OAAA4L,GAAApC,GAAAlH,EAAA4L,MAAA,SAAA1E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAE,EAAArC,WAAAY,EAAAyB,EAAArC,UAAAQ,EAAA,kBAAA9M,OAAAkF,EAAAyJ,gBAAAzJ,EAAA6L,MAAA,SAAA3E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAqE,SAAA,IAAA5M,EAAA,IAAAuK,EAAArB,EAAAlB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAzH,EAAAuL,oBAAApE,GAAAjI,IAAAwL,OAAAzO,KAAA,SAAAiL,GAAA,OAAAA,EAAA6C,KAAA7C,EAAAxL,MAAAwD,EAAAwL,UAAAnB,EAAAD,GAAAtB,EAAAsB,EAAAxB,EAAA,aAAAE,EAAAsB,EAAApK,EAAA,kBAAApE,OAAAkN,EAAAsB,EAAA,mDAAAtJ,EAAA+L,KAAA,SAAA7E,GAAA,IAAAlH,EAAA3C,OAAA6J,GAAAC,EAAA,WAAAE,KAAArH,EAAAmH,EAAApK,KAAAsK,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAnN,QAAA,KAAAkN,EAAAC,EAAA8E,MAAA,GAAA/E,KAAAlH,EAAA,OAAA0K,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1K,EAAAqJ,SAAAf,EAAAlB,UAAA,CAAAoE,YAAAlD,EAAA8C,MAAA,SAAApL,GAAA,GAAAlF,KAAAoR,KAAA,EAAApR,KAAA4P,KAAA,EAAA5P,KAAAqP,KAAArP,KAAAsP,MAAAlD,EAAApM,KAAAiP,MAAA,EAAAjP,KAAAmP,SAAA,KAAAnP,KAAAkP,OAAA,OAAAlP,KAAA2N,IAAAvB,EAAApM,KAAAmQ,WAAApO,QAAAqO,IAAAlL,EAAA,QAAAmH,KAAArM,KAAA,MAAAqM,EAAAgF,OAAA,IAAA9E,EAAAqB,KAAA5N,KAAAqM,KAAAkE,OAAAlE,EAAAiF,MAAA,MAAAtR,KAAAqM,GAAAD,IAAAmF,KAAA,WAAAvR,KAAAiP,MAAA,MAAA7C,EAAApM,KAAAmQ,WAAA,GAAAE,WAAA,aAAAjE,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,OAAA3N,KAAAwR,MAAAjC,kBAAA,SAAArK,GAAA,GAAAlF,KAAAiP,KAAA,MAAA/J,EAAA,IAAAmH,EAAArM,KAAA,SAAAyR,EAAAlF,EAAAE,GAAA,OAAArI,EAAAsB,KAAA,QAAAtB,EAAAuJ,IAAAzI,EAAAmH,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,KAAAK,EAAA,QAAAA,EAAAzM,KAAAmQ,WAAAjR,OAAA,EAAAuN,GAAA,IAAAA,EAAA,KAAAE,EAAA3M,KAAAmQ,WAAA1D,GAAArI,EAAAuI,EAAA0D,WAAA,YAAA1D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA/P,KAAAoR,KAAA,KAAAtE,EAAAP,EAAAqB,KAAAjB,EAAA,YAAAK,EAAAT,EAAAqB,KAAAjB,EAAA,iBAAAG,GAAAE,EAAA,IAAAhN,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,MAAAhQ,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAnD,GAAA,GAAA9M,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAAhD,EAAA,UAAAgC,MAAA,6CAAAhP,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAAlH,GAAA,QAAAmH,EAAArM,KAAAmQ,WAAAjR,OAAA,EAAAmN,GAAA,IAAAA,EAAA,KAAAI,EAAAzM,KAAAmQ,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA/P,KAAAoR,MAAA7E,EAAAqB,KAAAnB,EAAA,eAAAzM,KAAAoR,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA7K,MAAAyH,EAAAsD,aAAAtD,EAAA,UAAAvI,EAAAuI,IAAA0D,WAAA,UAAAjM,EAAAsB,KAAA0G,EAAAhI,EAAAuJ,IAAAzI,EAAAyH,GAAA3M,KAAAkP,OAAA,OAAAlP,KAAA4P,KAAAjD,EAAAsD,WAAAhC,GAAAjO,KAAA0R,SAAAtN,IAAAsN,SAAA,SAAAtF,EAAAlH,GAAA,aAAAkH,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,gBAAAvB,EAAA1G,MAAA,aAAA0G,EAAA1G,KAAA1F,KAAA4P,KAAAxD,EAAAuB,IAAA,WAAAvB,EAAA1G,MAAA1F,KAAAwR,KAAAxR,KAAA2N,IAAAvB,EAAAuB,IAAA3N,KAAAkP,OAAA,SAAAlP,KAAA4P,KAAA,kBAAAxD,EAAA1G,MAAAR,IAAAlF,KAAA4P,KAAA1K,GAAA+I,GAAA0D,OAAA,SAAAvF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA4D,aAAA7D,EAAA,OAAApM,KAAA0R,SAAArF,EAAAgE,WAAAhE,EAAA6D,UAAAE,EAAA/D,GAAA4B,IAAApH,MAAA,SAAAuF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAgE,WAAA,aAAA9D,EAAA7G,KAAA,KAAA+G,EAAAF,EAAAoB,IAAAyC,EAAA/D,GAAA,OAAAI,GAAA,UAAAuC,MAAA,0BAAA4C,cAAA,SAAA1M,EAAAmH,EAAAE,GAAA,OAAAvM,KAAAmP,SAAA,CAAAtC,SAAA0B,EAAArJ,GAAAyK,WAAAtD,EAAAwD,QAAAtD,GAAA,SAAAvM,KAAAkP,SAAAlP,KAAA2N,IAAAvB,GAAA6B,IAAA/I,EAIA,IAIa+T,GAAmB,SAAHrU,GAAqB,IAAf6C,EAAQ7C,EAAR6C,SACjC3B,EAA0CC,mBAAS0B,GAASzB,EAAAC,YAAAH,EAAA,GAArDoT,EAAalT,EAAA,GAAEmT,EAAgBnT,EAAA,GACtCE,EAA4CH,mBANxB,WAM+CI,EAAAF,YAAAC,EAAA,GAA5DkT,EAAcjT,EAAA,GAAEkT,EAAiBlT,EAAA,GAElCmT,EAAc,SAACC,GACnBJ,EAAiB5W,OAAOC,OAAO,GAAI0W,EAAeK,KAG9CC,EAAoB,eAAAzH,EAAAU,YAAAtG,KAAAwE,KAAG,SAAA+B,IAAA,OAAAvG,KAAAmB,KAAA,SAAAuF,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAjD,MAAA,OACK,OAAhCyJ,EAZiB,UAYexG,EAAAzB,KAAA,EAAAyB,EAAAjD,KAAA,EAExBiJ,GAAeK,EAAczW,IAAG,OAEtC4W,EAjBgB,WAkBhBxG,EAAAjD,KAAA,gBAAAiD,EAAAzB,KAAA,EAAAyB,EAAAG,GAAAH,EAAA,SAGAlM,QAAQG,MAAM,0BAAyB+L,EAAAG,IACvCqG,EAtBgB,WAsBiB,yBAAAxG,EAAAtB,SAAAmB,EAAA,iBAEpC,kBAZyB,OAAAX,EAAAtR,MAAAT,KAAAU,YAAA,GAa1B,OACEoC,IAAAC,cAAA,WACED,IAAAC,cAAC0W,KAAI,CAACC,MAAI,EAACzW,UAAU,aACnBH,IAAAC,cAAC4W,KAAS,KACR7W,IAAAC,cAAC6W,KAAU,CAAC3W,UAAU,QACpBH,IAAAC,cAACuC,IAAK,CACJI,KAAK,WACLmU,YAAY,6CACZjZ,MAAOsY,EAAcY,MAAQ,GAC7BpY,SAAU,SAAAwD,GAAC,OAAIoU,EAAY,CAAEQ,KAAM5U,EAAEK,OAAO3E,aAIjD,CAAC,UAAW,UAAW,UAAW,WAAWwB,IAAI,SAAC2X,GAAM,OACvDjX,IAAAC,cAAC6W,KAAU,CAACjZ,IAAKoZ,EAAQ9W,UAAU,QACjCH,IAAAC,cAACiX,KAAe,CAACC,UAAU,WACzBnX,IAAAC,cAACmX,KAAc,KAAEH,IAEnBjX,IAAAC,cAACuC,IAAK,CACJuU,YAAY,iCACZjZ,MAAOmZ,KAAUb,EAAgBA,EAAca,GAAU,GACzDrY,SAAU,SAAAwD,GAAC,OAAIoU,EAAWa,aAAA,GAAGJ,EAAS7U,EAAEK,OAAO3E,cAIrDkC,IAAAC,cAACqC,IAAS,KACRtC,IAAAC,cAACsC,IAAK,CAAC0G,IAAI,yBAAwB,4BACnCjJ,IAAAC,cAACuC,IAAK,CACJI,KAAK,SACLgB,KAAK,gBACLjE,GAAG,wBACH2X,cAAY,wBACZxZ,MAAOsY,EAAchQ,eAAiB,uCACtCxH,SAAU,SAAAwD,GAAC,OAAIoU,EAAY,CAAEpQ,cAAehE,EAAEK,OAAO3E,UAErDkC,IAAAC,cAAA,cAAQ,KACRD,IAAAC,cAAA,cAAQ,KACRD,IAAAC,cAAA,cAAQ,KACRD,IAAAC,cAAA,cAAQ,KACRD,IAAAC,cAAA,UAAQiJ,QAAM,GAAC,0CA/DN,WAkEZoN,EACCtW,IAAAC,cAACyC,IAAM,CAACqE,UAAQ,EAACpE,MAAM,UAAUxC,UAAU,QACzCH,IAAAC,cAACsX,KAAO,CAAC3U,KAAK,OAAO4U,KAAK,KAAK7U,MAAM,OAAOxC,UAAU,SAAS,yBAIjEH,IAAAC,cAACyC,IAAM,CACLC,MAAM,UACNxC,UAAU,OACV2G,QAAS,WACPyP,EA5EO,UA6EPd,GAAaW,GAAe/X,KAAK,kBAAMkY,EA9E/B,eAgFX,gBAKHvW,IAAAC,cAACyC,IAAM,CACLC,MAAM,SACNxC,UAAU,OACV2G,QAAS4P,EACT3P,SAxFW,WAwFDuP,GAxFC,WA0FVA,EACCtW,IAAAC,cAAAD,IAAAiI,SAAA,KACEjI,IAAAC,cAACsX,KAAO,CAAC3U,KAAK,OAAO4U,KAAK,KAAK7U,MAAM,OAAOxC,UAAU,SAAS,yBAIjE,6CCrGZkJ,GAAA,kBAAAjH,GAAA,IAAAkH,EAAAlH,EAAA,GAAAmH,EAAA9J,OAAA+J,UAAAC,EAAAF,EAAAG,eAAAC,EAAAlK,OAAAmK,gBAAA,SAAAN,EAAAlH,EAAAmH,GAAAD,EAAAlH,GAAAmH,EAAAzL,OAAA+L,EAAA,mBAAAC,cAAA,GAAAxI,EAAAuI,EAAAE,UAAA,aAAAC,EAAAH,EAAAI,eAAA,kBAAAC,EAAAL,EAAAM,aAAA,yBAAAC,EAAAd,EAAAlH,EAAAmH,GAAA,OAAA9J,OAAAmK,eAAAN,EAAAlH,EAAA,CAAAtE,MAAAyL,EAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAlH,GAAA,IAAAgI,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAlH,EAAAmH,GAAA,OAAAD,EAAAlH,GAAAmH,GAAA,SAAAiB,EAAAlB,EAAAlH,EAAAmH,EAAAE,GAAA,IAAAI,EAAAzH,KAAAoH,qBAAAiB,EAAArI,EAAAqI,EAAAnJ,EAAA7B,OAAAK,OAAA+J,EAAAL,WAAAQ,EAAA,IAAAU,EAAAjB,GAAA,WAAAE,EAAArI,EAAA,WAAAxD,MAAA6M,EAAArB,EAAAC,EAAAS,KAAA1I,EAAA,SAAAsJ,EAAAtB,EAAAlH,EAAAmH,GAAA,WAAA3G,KAAA,SAAAiI,IAAAvB,EAAAwB,KAAA1I,EAAAmH,IAAA,MAAAD,GAAA,OAAA1G,KAAA,QAAAiI,IAAAvB,IAAAlH,EAAAoI,OAAA,IAAAO,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAA9L,EAAA,GAAA6K,EAAA7K,EAAA+B,EAAA,kBAAApE,OAAA,IAAAoO,EAAA7L,OAAA8L,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAjC,GAAAE,EAAAqB,KAAAU,EAAAlK,KAAA/B,EAAAiM,GAAA,IAAAE,EAAAL,EAAA7B,UAAAiB,EAAAjB,UAAA/J,OAAAK,OAAAP,GAAA,SAAAoM,EAAArC,GAAA,0BAAArK,QAAA,SAAAmD,GAAAgI,EAAAd,EAAAlH,EAAA,SAAAkH,GAAA,OAAApM,KAAA0O,QAAAxJ,EAAAkH,OAAA,SAAAuC,EAAAvC,EAAAlH,GAAA,SAAA0J,EAAAvC,EAAAI,EAAAE,EAAAvI,GAAA,IAAA0I,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAK,GAAA,aAAAK,EAAApH,KAAA,KAAAsH,EAAAF,EAAAa,IAAAE,EAAAb,EAAApM,MAAA,OAAAiN,GAAA,iBAAAA,GAAAtB,EAAAqB,KAAAC,EAAA,WAAA3I,EAAA2J,QAAAhB,EAAAiB,SAAA3N,KAAA,SAAAiL,GAAAwC,EAAA,OAAAxC,EAAAO,EAAAvI,IAAA,SAAAgI,GAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,KAAAc,EAAA2J,QAAAhB,GAAA1M,KAAA,SAAAiL,GAAAY,EAAApM,MAAAwL,EAAAO,EAAAK,IAAA,SAAAZ,GAAA,OAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,OAAA0I,EAAAa,KAAA,IAAAtB,EAAAI,EAAAzM,KAAA,WAAAY,MAAA,SAAAwL,EAAAG,GAAA,SAAAwC,IAAA,WAAA7J,EAAA,SAAAA,EAAAmH,GAAAuC,EAAAxC,EAAAG,EAAArH,EAAAmH,KAAA,OAAAA,MAAAlL,KAAA4N,YAAA,SAAAtB,EAAAvI,EAAAmH,EAAAE,GAAA,IAAAE,EAAAoB,EAAA,gBAAAlB,EAAAvI,GAAA,GAAAqI,IAAAsB,EAAA,UAAAiB,MAAA,mCAAAvC,IAAAuB,EAAA,cAAArB,EAAA,MAAAvI,EAAA,OAAAxD,MAAAwL,EAAA6C,MAAA,OAAA1C,EAAA2C,OAAAvC,EAAAJ,EAAAoB,IAAAvJ,IAAA,KAAA0I,EAAAP,EAAA4C,SAAA,GAAArC,EAAA,KAAAE,EAAAoC,EAAAtC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA2C,OAAA3C,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAoB,SAAA,aAAApB,EAAA2C,OAAA,IAAAzC,IAAAoB,EAAA,MAAApB,EAAAuB,EAAAzB,EAAAoB,IAAApB,EAAAgD,kBAAAhD,EAAAoB,SAAA,WAAApB,EAAA2C,QAAA3C,EAAAiD,OAAA,SAAAjD,EAAAoB,KAAAlB,EAAAsB,EAAA,IAAA1L,EAAAqL,EAAAxI,EAAAmH,EAAAE,GAAA,cAAAlK,EAAAqD,KAAA,IAAA+G,EAAAF,EAAA0C,KAAAjB,EAAAF,EAAAzL,EAAAsL,MAAAM,EAAA,gBAAArN,MAAAyB,EAAAsL,IAAAsB,KAAA1C,EAAA0C,MAAA,UAAA5M,EAAAqD,OAAA+G,EAAAuB,EAAAzB,EAAA2C,OAAA,QAAA3C,EAAAoB,IAAAtL,EAAAsL,OAAA,SAAAyB,EAAAlK,EAAAmH,GAAA,IAAAE,EAAAF,EAAA6C,OAAAzC,EAAAvH,EAAA2H,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAArH,EAAA2H,SAAA4C,SAAApD,EAAA6C,OAAA,SAAA7C,EAAAsB,IAAAvB,EAAAgD,EAAAlK,EAAAmH,GAAA,UAAAA,EAAA6C,SAAA,WAAA3C,IAAAF,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAAnD,EAAA,aAAA0B,EAAA,IAAAtB,EAAAe,EAAAjB,EAAAvH,EAAA2H,SAAAR,EAAAsB,KAAA,aAAAhB,EAAAjH,KAAA,OAAA2G,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAAhB,EAAAgB,IAAAtB,EAAA8C,SAAA,KAAAlB,EAAA,IAAA7J,EAAAuI,EAAAgB,IAAA,OAAAvJ,IAAA6K,MAAA5C,EAAAnH,EAAAyK,YAAAvL,EAAAxD,MAAAyL,EAAAuD,KAAA1K,EAAA2K,QAAA,WAAAxD,EAAA6C,SAAA7C,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,GAAAC,EAAA8C,SAAA,KAAAlB,GAAA7J,GAAAiI,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAlB,GAAA,SAAA6B,EAAA1D,GAAA,IAAAlH,EAAA,CAAA6K,OAAA3D,EAAA,SAAAA,IAAAlH,EAAA8K,SAAA5D,EAAA,SAAAA,IAAAlH,EAAA+K,WAAA7D,EAAA,GAAAlH,EAAAgL,SAAA9D,EAAA,IAAApM,KAAAmQ,WAAAlO,KAAAiD,GAAA,SAAAkL,EAAAhE,GAAA,IAAAlH,EAAAkH,EAAAiE,YAAA,GAAAnL,EAAAQ,KAAA,gBAAAR,EAAAyI,IAAAvB,EAAAiE,WAAAnL,EAAA,SAAAsI,EAAApB,GAAApM,KAAAmQ,WAAA,EAAAJ,OAAA,SAAA3D,EAAArK,QAAA+N,EAAA9P,WAAAsQ,OAAA,YAAA/B,EAAArJ,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAmH,EAAAnH,EAAAd,GAAA,GAAAiI,EAAA,OAAAA,EAAAuB,KAAA1I,GAAA,sBAAAA,EAAA0K,KAAA,OAAA1K,EAAA,IAAAqL,MAAArL,EAAAhG,QAAA,KAAAuN,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAAvH,EAAAhG,QAAA,GAAAqN,EAAAqB,KAAA1I,EAAAuH,GAAA,OAAAmD,EAAAhP,MAAAsE,EAAAuH,GAAAmD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAAxK,EAAA,2BAAAgJ,EAAA5B,UAAA6B,EAAA1B,EAAA+B,EAAA,eAAA5N,MAAAuN,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAAvN,MAAAsN,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA9H,EAAAuL,oBAAA,SAAArE,GAAA,IAAAlH,EAAA,mBAAAkH,KAAAsE,YAAA,QAAAxL,QAAAgJ,GAAA,uBAAAhJ,EAAAsL,aAAAtL,EAAAwB,QAAAxB,EAAAyL,KAAA,SAAAvE,GAAA,OAAA7J,OAAAqO,eAAArO,OAAAqO,eAAAxE,EAAA+B,IAAA/B,EAAAyE,UAAA1C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAA/J,OAAAK,OAAA4L,GAAApC,GAAAlH,EAAA4L,MAAA,SAAA1E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAE,EAAArC,WAAAY,EAAAyB,EAAArC,UAAAQ,EAAA,kBAAA9M,OAAAkF,EAAAyJ,gBAAAzJ,EAAA6L,MAAA,SAAA3E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAqE,SAAA,IAAA5M,EAAA,IAAAuK,EAAArB,EAAAlB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAzH,EAAAuL,oBAAApE,GAAAjI,IAAAwL,OAAAzO,KAAA,SAAAiL,GAAA,OAAAA,EAAA6C,KAAA7C,EAAAxL,MAAAwD,EAAAwL,UAAAnB,EAAAD,GAAAtB,EAAAsB,EAAAxB,EAAA,aAAAE,EAAAsB,EAAApK,EAAA,kBAAApE,OAAAkN,EAAAsB,EAAA,mDAAAtJ,EAAA+L,KAAA,SAAA7E,GAAA,IAAAlH,EAAA3C,OAAA6J,GAAAC,EAAA,WAAAE,KAAArH,EAAAmH,EAAApK,KAAAsK,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAnN,QAAA,KAAAkN,EAAAC,EAAA8E,MAAA,GAAA/E,KAAAlH,EAAA,OAAA0K,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1K,EAAAqJ,SAAAf,EAAAlB,UAAA,CAAAoE,YAAAlD,EAAA8C,MAAA,SAAApL,GAAA,GAAAlF,KAAAoR,KAAA,EAAApR,KAAA4P,KAAA,EAAA5P,KAAAqP,KAAArP,KAAAsP,MAAAlD,EAAApM,KAAAiP,MAAA,EAAAjP,KAAAmP,SAAA,KAAAnP,KAAAkP,OAAA,OAAAlP,KAAA2N,IAAAvB,EAAApM,KAAAmQ,WAAApO,QAAAqO,IAAAlL,EAAA,QAAAmH,KAAArM,KAAA,MAAAqM,EAAAgF,OAAA,IAAA9E,EAAAqB,KAAA5N,KAAAqM,KAAAkE,OAAAlE,EAAAiF,MAAA,MAAAtR,KAAAqM,GAAAD,IAAAmF,KAAA,WAAAvR,KAAAiP,MAAA,MAAA7C,EAAApM,KAAAmQ,WAAA,GAAAE,WAAA,aAAAjE,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,OAAA3N,KAAAwR,MAAAjC,kBAAA,SAAArK,GAAA,GAAAlF,KAAAiP,KAAA,MAAA/J,EAAA,IAAAmH,EAAArM,KAAA,SAAAyR,EAAAlF,EAAAE,GAAA,OAAArI,EAAAsB,KAAA,QAAAtB,EAAAuJ,IAAAzI,EAAAmH,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,KAAAK,EAAA,QAAAA,EAAAzM,KAAAmQ,WAAAjR,OAAA,EAAAuN,GAAA,IAAAA,EAAA,KAAAE,EAAA3M,KAAAmQ,WAAA1D,GAAArI,EAAAuI,EAAA0D,WAAA,YAAA1D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA/P,KAAAoR,KAAA,KAAAtE,EAAAP,EAAAqB,KAAAjB,EAAA,YAAAK,EAAAT,EAAAqB,KAAAjB,EAAA,iBAAAG,GAAAE,EAAA,IAAAhN,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,MAAAhQ,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAnD,GAAA,GAAA9M,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAAhD,EAAA,UAAAgC,MAAA,6CAAAhP,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAAlH,GAAA,QAAAmH,EAAArM,KAAAmQ,WAAAjR,OAAA,EAAAmN,GAAA,IAAAA,EAAA,KAAAI,EAAAzM,KAAAmQ,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA/P,KAAAoR,MAAA7E,EAAAqB,KAAAnB,EAAA,eAAAzM,KAAAoR,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA7K,MAAAyH,EAAAsD,aAAAtD,EAAA,UAAAvI,EAAAuI,IAAA0D,WAAA,UAAAjM,EAAAsB,KAAA0G,EAAAhI,EAAAuJ,IAAAzI,EAAAyH,GAAA3M,KAAAkP,OAAA,OAAAlP,KAAA4P,KAAAjD,EAAAsD,WAAAhC,GAAAjO,KAAA0R,SAAAtN,IAAAsN,SAAA,SAAAtF,EAAAlH,GAAA,aAAAkH,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,gBAAAvB,EAAA1G,MAAA,aAAA0G,EAAA1G,KAAA1F,KAAA4P,KAAAxD,EAAAuB,IAAA,WAAAvB,EAAA1G,MAAA1F,KAAAwR,KAAAxR,KAAA2N,IAAAvB,EAAAuB,IAAA3N,KAAAkP,OAAA,SAAAlP,KAAA4P,KAAA,kBAAAxD,EAAA1G,MAAAR,IAAAlF,KAAA4P,KAAA1K,GAAA+I,GAAA0D,OAAA,SAAAvF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA4D,aAAA7D,EAAA,OAAApM,KAAA0R,SAAArF,EAAAgE,WAAAhE,EAAA6D,UAAAE,EAAA/D,GAAA4B,IAAApH,MAAA,SAAAuF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAgE,WAAA,aAAA9D,EAAA7G,KAAA,KAAA+G,EAAAF,EAAAoB,IAAAyC,EAAA/D,GAAA,OAAAI,GAAA,UAAAuC,MAAA,0BAAA4C,cAAA,SAAA1M,EAAAmH,EAAAE,GAAA,OAAAvM,KAAAmP,SAAA,CAAAtC,SAAA0B,EAAArJ,GAAAyK,WAAAtD,EAAAwD,QAAAtD,GAAA,SAAAvM,KAAAkP,SAAAlP,KAAA2N,IAAAvB,GAAA6B,IAAA/I,EAWA,IAyEeqV,GAzEU,SAAAza,GACvB,IAAQmB,EAAW4E,cAAX5E,OACR6E,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BtB,EAAIwB,EAAA,GAAEO,EAAOP,EAAA,GACpBE,EAAkCH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAAvCsU,EAASrU,EAAA,GAAEsU,EAAYtU,EAAA,GAExBuU,EAAWC,cACXC,EAAgB,eAAAhW,EAAA6N,YAAAtG,KAAAwE,KAAG,SAAA+B,IAAA,IAAAoG,EAAA,OAAA3M,KAAAmB,KAAA,SAAAuF,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAjD,MAAA,WACnB3O,IAAUuD,EAAI,CAAAqO,EAAAjD,KAAA,SAEiB,OAFjBiD,EAAAzB,KAAA,EAER0H,EAAK9Z,EAASkB,YAAW2S,EAAAjD,KAAA,EACzBmJ,aAAU/X,aAAI8X,EAAI,QAAS7X,IAAQ,OACzCyZ,EAAS,UAAU7H,EAAAjD,KAAA,gBAAAiD,EAAAzB,KAAA,EAAAyB,EAAAG,GAAAH,EAAA,SAEnBlM,QAAQG,MAAM,yDAAW+L,EAAAG,IACzB,yBAAAH,EAAAtB,SAAAmB,EAAA,iBAGL,kBAXqB,OAAA9N,EAAAnE,MAAAT,KAAAU,YAAA,GAyBtB,OAZA8F,oBAAU,WACJvF,GAAmB,OAATuD,GACZE,EAAQzD,GACLE,KAAK,SAAAqD,GAEJ,OADA+B,EAAQ/B,GACDA,IAERrD,KAAK,SAAAqD,GAAI,OAAI8T,GAAa,CAAErX,OAAQuD,EAAK/B,OACzCtB,KAAKsZ,IAET,CAACxZ,EAAQuD,IAERA,EAGA1B,IAAAC,cAACF,EAAiB,CAACO,SAAU,KAC3BN,IAAAC,cAAA,MAAIE,UAAU,QAAQuB,EAAKkC,MAC3B5D,IAAAC,cAACC,IAAS,KACPwX,EAAUtb,OAAS,EAChB4D,IAAAC,cAAC0I,IAAI,CAACC,GAAE,UAAAxE,OAAYjG,IAClB6B,IAAAC,cAACyC,IAAM,CAACC,MAAM,UAAU6U,KAAK,MAAK,6BAIpC,MAGLE,EAAUpY,IAAI,SAAAqF,GAAQ,OAAI3E,IAAAC,cAACkW,GAAgB,CAACtY,IAAK8G,EAAShF,GAAIgF,SAAUA,MACzE3E,IAAAC,cAACC,IAAS,KACRF,IAAAC,cAACyC,IAAM,CACLoE,QAAS,WACP2O,GAAa,CAAEtX,OAAQA,EAAQ4Z,MAAOL,EAAUtb,OAAS,IACtDiC,KAAK,SAAA2Z,GAAK,OAAIL,EAAaD,EAAUtT,OAAO,CAAC4T,SAEnD,4BAGDhY,IAAAC,cAAA,WAAKD,IAAAC,cAAA,WACLD,IAAAC,cAACyC,IAAM,CACLrC,MAAO,CAAC4X,aAAa,IACrBnR,QAASgR,EACTnV,MAAM,UACP,8BAQC3C,IAAAC,cAACF,EAAiB,CAACO,SAAU,KAAK,eC3D/B4X,GAXO,SAAAlb,GACpB,IACMmb,EALC,IAAIC,gBAAgBC,cAAcC,QAKRla,IAAI,QAErC,OACE4B,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAgB,GAC/C2X,kBChBP9O,GAAA,kBAAAjH,GAAA,IAAAkH,EAAAlH,EAAA,GAAAmH,EAAA9J,OAAA+J,UAAAC,EAAAF,EAAAG,eAAAC,EAAAlK,OAAAmK,gBAAA,SAAAN,EAAAlH,EAAAmH,GAAAD,EAAAlH,GAAAmH,EAAAzL,OAAA+L,EAAA,mBAAAC,cAAA,GAAAxI,EAAAuI,EAAAE,UAAA,aAAAC,EAAAH,EAAAI,eAAA,kBAAAC,EAAAL,EAAAM,aAAA,yBAAAC,EAAAd,EAAAlH,EAAAmH,GAAA,OAAA9J,OAAAmK,eAAAN,EAAAlH,EAAA,CAAAtE,MAAAyL,EAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAlH,GAAA,IAAAgI,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAlH,EAAAmH,GAAA,OAAAD,EAAAlH,GAAAmH,GAAA,SAAAiB,EAAAlB,EAAAlH,EAAAmH,EAAAE,GAAA,IAAAI,EAAAzH,KAAAoH,qBAAAiB,EAAArI,EAAAqI,EAAAnJ,EAAA7B,OAAAK,OAAA+J,EAAAL,WAAAQ,EAAA,IAAAU,EAAAjB,GAAA,WAAAE,EAAArI,EAAA,WAAAxD,MAAA6M,EAAArB,EAAAC,EAAAS,KAAA1I,EAAA,SAAAsJ,EAAAtB,EAAAlH,EAAAmH,GAAA,WAAA3G,KAAA,SAAAiI,IAAAvB,EAAAwB,KAAA1I,EAAAmH,IAAA,MAAAD,GAAA,OAAA1G,KAAA,QAAAiI,IAAAvB,IAAAlH,EAAAoI,OAAA,IAAAO,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAA9L,EAAA,GAAA6K,EAAA7K,EAAA+B,EAAA,kBAAApE,OAAA,IAAAoO,EAAA7L,OAAA8L,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAjC,GAAAE,EAAAqB,KAAAU,EAAAlK,KAAA/B,EAAAiM,GAAA,IAAAE,EAAAL,EAAA7B,UAAAiB,EAAAjB,UAAA/J,OAAAK,OAAAP,GAAA,SAAAoM,EAAArC,GAAA,0BAAArK,QAAA,SAAAmD,GAAAgI,EAAAd,EAAAlH,EAAA,SAAAkH,GAAA,OAAApM,KAAA0O,QAAAxJ,EAAAkH,OAAA,SAAAuC,EAAAvC,EAAAlH,GAAA,SAAA0J,EAAAvC,EAAAI,EAAAE,EAAAvI,GAAA,IAAA0I,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAK,GAAA,aAAAK,EAAApH,KAAA,KAAAsH,EAAAF,EAAAa,IAAAE,EAAAb,EAAApM,MAAA,OAAAiN,GAAA,iBAAAA,GAAAtB,EAAAqB,KAAAC,EAAA,WAAA3I,EAAA2J,QAAAhB,EAAAiB,SAAA3N,KAAA,SAAAiL,GAAAwC,EAAA,OAAAxC,EAAAO,EAAAvI,IAAA,SAAAgI,GAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,KAAAc,EAAA2J,QAAAhB,GAAA1M,KAAA,SAAAiL,GAAAY,EAAApM,MAAAwL,EAAAO,EAAAK,IAAA,SAAAZ,GAAA,OAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,OAAA0I,EAAAa,KAAA,IAAAtB,EAAAI,EAAAzM,KAAA,WAAAY,MAAA,SAAAwL,EAAAG,GAAA,SAAAwC,IAAA,WAAA7J,EAAA,SAAAA,EAAAmH,GAAAuC,EAAAxC,EAAAG,EAAArH,EAAAmH,KAAA,OAAAA,MAAAlL,KAAA4N,YAAA,SAAAtB,EAAAvI,EAAAmH,EAAAE,GAAA,IAAAE,EAAAoB,EAAA,gBAAAlB,EAAAvI,GAAA,GAAAqI,IAAAsB,EAAA,UAAAiB,MAAA,mCAAAvC,IAAAuB,EAAA,cAAArB,EAAA,MAAAvI,EAAA,OAAAxD,MAAAwL,EAAA6C,MAAA,OAAA1C,EAAA2C,OAAAvC,EAAAJ,EAAAoB,IAAAvJ,IAAA,KAAA0I,EAAAP,EAAA4C,SAAA,GAAArC,EAAA,KAAAE,EAAAoC,EAAAtC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA2C,OAAA3C,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAoB,SAAA,aAAApB,EAAA2C,OAAA,IAAAzC,IAAAoB,EAAA,MAAApB,EAAAuB,EAAAzB,EAAAoB,IAAApB,EAAAgD,kBAAAhD,EAAAoB,SAAA,WAAApB,EAAA2C,QAAA3C,EAAAiD,OAAA,SAAAjD,EAAAoB,KAAAlB,EAAAsB,EAAA,IAAA1L,EAAAqL,EAAAxI,EAAAmH,EAAAE,GAAA,cAAAlK,EAAAqD,KAAA,IAAA+G,EAAAF,EAAA0C,KAAAjB,EAAAF,EAAAzL,EAAAsL,MAAAM,EAAA,gBAAArN,MAAAyB,EAAAsL,IAAAsB,KAAA1C,EAAA0C,MAAA,UAAA5M,EAAAqD,OAAA+G,EAAAuB,EAAAzB,EAAA2C,OAAA,QAAA3C,EAAAoB,IAAAtL,EAAAsL,OAAA,SAAAyB,EAAAlK,EAAAmH,GAAA,IAAAE,EAAAF,EAAA6C,OAAAzC,EAAAvH,EAAA2H,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAArH,EAAA2H,SAAA4C,SAAApD,EAAA6C,OAAA,SAAA7C,EAAAsB,IAAAvB,EAAAgD,EAAAlK,EAAAmH,GAAA,UAAAA,EAAA6C,SAAA,WAAA3C,IAAAF,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAAnD,EAAA,aAAA0B,EAAA,IAAAtB,EAAAe,EAAAjB,EAAAvH,EAAA2H,SAAAR,EAAAsB,KAAA,aAAAhB,EAAAjH,KAAA,OAAA2G,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAAhB,EAAAgB,IAAAtB,EAAA8C,SAAA,KAAAlB,EAAA,IAAA7J,EAAAuI,EAAAgB,IAAA,OAAAvJ,IAAA6K,MAAA5C,EAAAnH,EAAAyK,YAAAvL,EAAAxD,MAAAyL,EAAAuD,KAAA1K,EAAA2K,QAAA,WAAAxD,EAAA6C,SAAA7C,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,GAAAC,EAAA8C,SAAA,KAAAlB,GAAA7J,GAAAiI,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAlB,GAAA,SAAA6B,EAAA1D,GAAA,IAAAlH,EAAA,CAAA6K,OAAA3D,EAAA,SAAAA,IAAAlH,EAAA8K,SAAA5D,EAAA,SAAAA,IAAAlH,EAAA+K,WAAA7D,EAAA,GAAAlH,EAAAgL,SAAA9D,EAAA,IAAApM,KAAAmQ,WAAAlO,KAAAiD,GAAA,SAAAkL,EAAAhE,GAAA,IAAAlH,EAAAkH,EAAAiE,YAAA,GAAAnL,EAAAQ,KAAA,gBAAAR,EAAAyI,IAAAvB,EAAAiE,WAAAnL,EAAA,SAAAsI,EAAApB,GAAApM,KAAAmQ,WAAA,EAAAJ,OAAA,SAAA3D,EAAArK,QAAA+N,EAAA9P,WAAAsQ,OAAA,YAAA/B,EAAArJ,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAmH,EAAAnH,EAAAd,GAAA,GAAAiI,EAAA,OAAAA,EAAAuB,KAAA1I,GAAA,sBAAAA,EAAA0K,KAAA,OAAA1K,EAAA,IAAAqL,MAAArL,EAAAhG,QAAA,KAAAuN,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAAvH,EAAAhG,QAAA,GAAAqN,EAAAqB,KAAA1I,EAAAuH,GAAA,OAAAmD,EAAAhP,MAAAsE,EAAAuH,GAAAmD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAAxK,EAAA,2BAAAgJ,EAAA5B,UAAA6B,EAAA1B,EAAA+B,EAAA,eAAA5N,MAAAuN,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAAvN,MAAAsN,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA9H,EAAAuL,oBAAA,SAAArE,GAAA,IAAAlH,EAAA,mBAAAkH,KAAAsE,YAAA,QAAAxL,QAAAgJ,GAAA,uBAAAhJ,EAAAsL,aAAAtL,EAAAwB,QAAAxB,EAAAyL,KAAA,SAAAvE,GAAA,OAAA7J,OAAAqO,eAAArO,OAAAqO,eAAAxE,EAAA+B,IAAA/B,EAAAyE,UAAA1C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAA/J,OAAAK,OAAA4L,GAAApC,GAAAlH,EAAA4L,MAAA,SAAA1E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAE,EAAArC,WAAAY,EAAAyB,EAAArC,UAAAQ,EAAA,kBAAA9M,OAAAkF,EAAAyJ,gBAAAzJ,EAAA6L,MAAA,SAAA3E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAqE,SAAA,IAAA5M,EAAA,IAAAuK,EAAArB,EAAAlB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAzH,EAAAuL,oBAAApE,GAAAjI,IAAAwL,OAAAzO,KAAA,SAAAiL,GAAA,OAAAA,EAAA6C,KAAA7C,EAAAxL,MAAAwD,EAAAwL,UAAAnB,EAAAD,GAAAtB,EAAAsB,EAAAxB,EAAA,aAAAE,EAAAsB,EAAApK,EAAA,kBAAApE,OAAAkN,EAAAsB,EAAA,mDAAAtJ,EAAA+L,KAAA,SAAA7E,GAAA,IAAAlH,EAAA3C,OAAA6J,GAAAC,EAAA,WAAAE,KAAArH,EAAAmH,EAAApK,KAAAsK,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAnN,QAAA,KAAAkN,EAAAC,EAAA8E,MAAA,GAAA/E,KAAAlH,EAAA,OAAA0K,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1K,EAAAqJ,SAAAf,EAAAlB,UAAA,CAAAoE,YAAAlD,EAAA8C,MAAA,SAAApL,GAAA,GAAAlF,KAAAoR,KAAA,EAAApR,KAAA4P,KAAA,EAAA5P,KAAAqP,KAAArP,KAAAsP,MAAAlD,EAAApM,KAAAiP,MAAA,EAAAjP,KAAAmP,SAAA,KAAAnP,KAAAkP,OAAA,OAAAlP,KAAA2N,IAAAvB,EAAApM,KAAAmQ,WAAApO,QAAAqO,IAAAlL,EAAA,QAAAmH,KAAArM,KAAA,MAAAqM,EAAAgF,OAAA,IAAA9E,EAAAqB,KAAA5N,KAAAqM,KAAAkE,OAAAlE,EAAAiF,MAAA,MAAAtR,KAAAqM,GAAAD,IAAAmF,KAAA,WAAAvR,KAAAiP,MAAA,MAAA7C,EAAApM,KAAAmQ,WAAA,GAAAE,WAAA,aAAAjE,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,OAAA3N,KAAAwR,MAAAjC,kBAAA,SAAArK,GAAA,GAAAlF,KAAAiP,KAAA,MAAA/J,EAAA,IAAAmH,EAAArM,KAAA,SAAAyR,EAAAlF,EAAAE,GAAA,OAAArI,EAAAsB,KAAA,QAAAtB,EAAAuJ,IAAAzI,EAAAmH,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,KAAAK,EAAA,QAAAA,EAAAzM,KAAAmQ,WAAAjR,OAAA,EAAAuN,GAAA,IAAAA,EAAA,KAAAE,EAAA3M,KAAAmQ,WAAA1D,GAAArI,EAAAuI,EAAA0D,WAAA,YAAA1D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA/P,KAAAoR,KAAA,KAAAtE,EAAAP,EAAAqB,KAAAjB,EAAA,YAAAK,EAAAT,EAAAqB,KAAAjB,EAAA,iBAAAG,GAAAE,EAAA,IAAAhN,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,MAAAhQ,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAnD,GAAA,GAAA9M,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAAhD,EAAA,UAAAgC,MAAA,6CAAAhP,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAAlH,GAAA,QAAAmH,EAAArM,KAAAmQ,WAAAjR,OAAA,EAAAmN,GAAA,IAAAA,EAAA,KAAAI,EAAAzM,KAAAmQ,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA/P,KAAAoR,MAAA7E,EAAAqB,KAAAnB,EAAA,eAAAzM,KAAAoR,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA7K,MAAAyH,EAAAsD,aAAAtD,EAAA,UAAAvI,EAAAuI,IAAA0D,WAAA,UAAAjM,EAAAsB,KAAA0G,EAAAhI,EAAAuJ,IAAAzI,EAAAyH,GAAA3M,KAAAkP,OAAA,OAAAlP,KAAA4P,KAAAjD,EAAAsD,WAAAhC,GAAAjO,KAAA0R,SAAAtN,IAAAsN,SAAA,SAAAtF,EAAAlH,GAAA,aAAAkH,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,gBAAAvB,EAAA1G,MAAA,aAAA0G,EAAA1G,KAAA1F,KAAA4P,KAAAxD,EAAAuB,IAAA,WAAAvB,EAAA1G,MAAA1F,KAAAwR,KAAAxR,KAAA2N,IAAAvB,EAAAuB,IAAA3N,KAAAkP,OAAA,SAAAlP,KAAA4P,KAAA,kBAAAxD,EAAA1G,MAAAR,IAAAlF,KAAA4P,KAAA1K,GAAA+I,GAAA0D,OAAA,SAAAvF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA4D,aAAA7D,EAAA,OAAApM,KAAA0R,SAAArF,EAAAgE,WAAAhE,EAAA6D,UAAAE,EAAA/D,GAAA4B,IAAApH,MAAA,SAAAuF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAgE,WAAA,aAAA9D,EAAA7G,KAAA,KAAA+G,EAAAF,EAAAoB,IAAAyC,EAAA/D,GAAA,OAAAI,GAAA,UAAAuC,MAAA,0BAAA4C,cAAA,SAAA1M,EAAAmH,EAAAE,GAAA,OAAAvM,KAAAmP,SAAA,CAAAtC,SAAA0B,EAAArJ,GAAAyK,WAAAtD,EAAAwD,QAAAtD,GAAA,SAAAvM,KAAAkP,SAAAlP,KAAA2N,IAAAvB,GAAA6B,IAAA/I,EAEA,IAAMmW,GAAiB,eAAAzW,EAAA6N,YAAAtG,KAAAwE,KAAG,SAAA+B,EAAOzR,GAAM,IAAAqa,EAAA7D,EAAA5O,EAAArE,EAAA+W,EAAA9T,EAAA+T,EAAA9a,UAAA,OAAAyL,KAAAmB,KAAA,SAAAuF,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAjD,MAAA,OAEI,OAFF0L,EAAoBE,EAAAtc,OAAA,QAAAe,IAAAub,EAAA,GAAAA,EAAA,GAAG,EACxD/D,EAAY,IAAIhU,EAChBoF,EAAgB,IAAIZ,EAAe4K,EAAAzB,KAAA,EAAAyB,EAAAjD,KAAA,EAI1B6H,EAAUvW,IAAID,GAAO,OAAlCuD,EAAIqO,EAAAxD,KAAAwD,EAAAjD,KAAA,gBAAAiD,EAAAzB,KAAA,EAAAyB,EAAAG,GAAAH,EAAA,qBAKFrO,EAAI,CAAAqO,EAAAjD,KAAA,SACiD,GAAvD6H,EAAUlT,OAAOtD,EAAQ,CAAEyC,MAAO,sBAE9B,oBAAqBc,GAAI,CAAAqO,EAAAjD,KAAA,gBAAAiD,EAAArD,OAAA,SACpB3G,EAAc3H,IAAIsD,EAAKH,kBAAgB,eAAAwO,EAAAjD,KAAA,GAElB/G,EAAcoC,KAAK,CAC7ChK,SACAuH,KAAM8S,EACN3Z,MAAO,IACP,QAC6B,GALzB4Z,EAAa1I,EAAAxD,OAKf5H,EAAW8T,EAAc,IAEjB,CAAA1I,EAAAjD,KAAA,SACV6H,EAAUlT,OAAOtD,EAAQ,CAAEqD,kBAAmBmD,EAAShF,GAAI6Y,qBAAsBA,EAAuB,IAAKzI,EAAAjD,KAAA,iBAIpF,OADzB6H,EAAUlT,OAAOtD,EAAQ,CAAEqa,qBAAsB,IACjDA,EAAuB,EAAEzI,EAAAjD,KAAA,GACRyL,GAAkBpa,EAAQqa,GAAqB,QAAhE7T,EAAQoL,EAAAxD,KAAA,eAAAwD,EAAArD,OAAA,SAIH/H,GAAQ,QAAAoL,EAAAjD,KAAA,wBAAAiD,EAAArD,OAAA,mCAAAqD,EAAAtB,SAAAmB,EAAA,iBAKpB,gBAvCsBO,GAAA,OAAArO,EAAAnE,MAAAT,KAAAU,YAAA,GAyCR2a,MCvCTI,GAAY,SAAZA,EAAS7W,GAAqD,IAA/C8W,EAAO9W,EAAP8W,QAASC,EAAgB/W,EAAhB+W,iBAAkBC,EAAahX,EAAbgX,cAC9ChR,WAAW,WAET,IAAMiR,EARgB,SAAAC,GACxB,IAAMC,GAAcD,EAAO/S,KAAKiT,OAAS,IACzC,OAAOD,EAAa,EAAIA,EAAa,EAMlBE,CAAkBP,GAC/BG,EAAW,GACbF,EAAiBE,GACjBJ,EAAU,CAAEC,UAASC,mBAAkBC,mBAGvCA,EAAcC,IAEf,MAGQK,GAAa,SAAHnK,GAAqD,IAA/CoK,EAAOpK,EAAPoK,QAASR,EAAgB5J,EAAhB4J,iBAAkBC,EAAa7J,EAAb6J,cAChDF,EAAU,IAAI3S,KAAKA,KAAKiT,MAAQ,IAAOG,GAC7CV,GAAU,CAAEC,UAASC,mBAAkBC,mBCyB1BQ,GAnCc,SAAHxX,GAAeA,EAATyX,UAAgB,IACxCpb,EAAW4E,cAAX5E,OACN6E,EAAkCC,mBALR,GAKqCC,EAAAC,YAAAH,EAAA,GAAvD+V,EAAQ7V,EAAA,GAAEsW,EAAWtW,EAAA,GAC7BE,EAA0CH,mBAAS,MAAKI,EAAAF,YAAAC,EAAA,GAAhDqW,EAAYpW,EAAA,GAAEqW,EAAerW,EAAA,GACrCQ,QAAQC,IAAI3F,GAGZuF,oBAAU,WACJvF,IACFib,GAAW,CAAEC,QAZS,EAYqBR,iBAAkBW,EAAaV,cAAeU,IACzFjB,GAAkBpa,GAAQE,KAAKqb,GAC/B7V,QAAQC,IAAI,MAAMyU,MAEnB,CAACpa,IAGJ,IAAI0R,EAAM,SAAW1R,EAGrB,OADA0F,QAAQC,IAAI,KAAK2V,GAGfzZ,IAAAC,cAACF,EAAiB,CAACS,kBAAkB,GACnCR,IAAAC,cAAA,OAAKE,UAAU,QAAO,uBACtBH,IAAAC,cAAA,OAAKE,UAAU,aACZ6U,KAAK2E,KAAKZ,IAEZA,GAAY,GAAKU,EACdzZ,IAAAC,cAAC+I,IAAQ,CAACJ,GAAE,GAAAxE,OAAKyL,EAAG,wBACpB,2BCjCK+J,GAJK,SAACpV,EAAYxG,GAC/B,OADoDJ,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAIuH,GACtC/G,IAAIoG,EAAYxG,ICaxB6b,GAbkB,SAAC1b,EAAQqG,GAA6E,IAAjEmQ,EAAS/W,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAI+C,EAAamZ,EAAWlc,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAI0G,EAEnG,OADAqQ,EAAUlT,OAAOtD,EAAQ,CAAEyC,MAAO,2BAC3BkZ,EACJ3R,KAAK,CAAEhK,SAAQqG,eACfnG,KAAK,SAAA0b,GACJ,IAAIC,EAAU,CAAEC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,IAIhD,OAHAL,EAAQ9a,QAAQ,SAAAmI,GACd4S,EAAQ5S,EAAOf,QAAU2T,EAAQ5S,EAAOf,QAAQjC,OAAOgD,EAAOrF,cAEzDiY,KCHEK,GAPa,SAAClc,GAE3B,OADsB,IAAIgH,GAEvBgD,KAAK,CAAEhK,WACPE,KAAK,SAAAqZ,GAAS,OAAIA,EAAUtb,UCI3Bke,GAAkB,SAAC3V,EAAU0B,GACjC,OAAO1B,EAASyB,gBAAkBC,GAG9BkU,GAAc,SAAHzY,GAAwC,IAAlC0Y,EAAM1Y,EAAN0Y,OAAQra,EAAS2B,EAAT3B,UAAWwE,EAAQ7C,EAAR6C,SACxC,OACE3E,IAAAC,cAAA,OAAKE,UAAWA,GACdH,IAAAC,cAAA,MAAIE,UAAU,QAAQwE,EAAWA,EAASqS,KAAO,MACjDhX,IAAAC,cAACwG,IAAG,KAEAhH,OAAOgb,QAAQD,GAAQlb,IAAI,SAAA2P,GAAA,IAAAS,EAAAvM,YAAA8L,EAAA,GAAE7H,EAAMsI,EAAA,GAAE1Q,EAAO0Q,EAAA,UAC1C1P,IAAAC,cAAC0G,IAAG,CAACC,GAAI,GAAIC,GAAI,EAAG1G,UAAU,QAC5BH,IAAAC,cAAC0W,KAAI,CACHhU,MAAO2X,GAAgB3V,EAAUyC,GAAU,UAAY,KACvDsT,UAASJ,GAAgB3V,EAAUyC,IAAiB,MAEpDpH,IAAAC,cAAC0a,KAAQ,KACP3a,IAAAC,cAAC4W,KAAS,KACR7W,IAAAC,cAAA,UAAQE,UAAU,QAAQiH,GACzBkT,GAAgB3V,EAAUyC,GAAU,eAAO,UAE9CpH,IAAAC,cAAC2a,KAAQ,KACN5b,EAAQ0F,KAAK,eAgDnBmW,GApCc,SAAHC,GAAeA,EAATvB,UAAgB,IAC9CtS,EAA6BlE,cAAvB5E,EAAM8I,EAAN9I,OAAQqG,EAAUyC,EAAVzC,WACdxB,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjCwX,EAAMtX,EAAA,GAAE6X,EAAS7X,EAAA,GACtBE,EAA8BH,mBAAS,MAAKI,EAAAF,YAAAC,EAAA,GAAvCuB,EAAQtB,EAAA,GAAE2X,EAAW3X,EAAA,GAC1BE,EAAkDN,mBAAS,MAAKO,EAAAL,YAAAI,EAAA,GAA3D0X,EAAkBzX,EAAA,GAAE0X,EAAqB1X,EAAA,GAE9CE,oBAAU,WACJvF,GAAUqG,IACZoV,GAAYpV,EAAY,CAAErG,WAAUE,KAAK2c,GACzCX,GAAoBlc,GAAQE,KAAK6c,GACjCrB,GAAyB1b,EAAQqG,GAAYnG,KAAK0c,KAEnD,CAAC5c,EAAQqG,IACZ,IAAIqL,EAAM,SAAW1R,EACrB,OACE6B,IAAAC,cAACF,EAAiB,CAACS,kBAAkB,GACnCR,IAAAC,cAACsa,GAAW,CAACpa,UAAU,OAAOqa,OAAQA,EAAQ7V,SAAUA,IACxD3E,IAAAC,cAACC,IAAS,KACPyE,GAAYA,EAASoT,OAASkD,EAC7Bjb,IAAAC,cAAC0I,IAAI,CAACC,GAAE,GAAAxE,OAAKyL,EAAG,mBACd7P,IAAAC,cAACyC,IAAM,CAACC,MAAM,WAAU,qDAK1B3C,IAAAC,cAAC0I,IAAI,CAACC,GAAE,GAAAxE,OAAKyL,EAAG,uBACd7P,IAAAC,cAACyC,IAAM,CAACC,MAAM,WAAU,oCCpE9BgS,GAAY,IAAIhU,EA4BPwa,GApBe,SAAChd,GAC7B,IAAM2b,EAAc,IAAIxV,EAIxB,OAFAqQ,GAAUlT,OAAOtD,EAAQ,CAAEyC,MAAO,UAE3BkZ,EAAY3R,KAAK,CAAEhK,WACvBE,KAAK,SAAA0b,GACJ,OAAOA,EACJqB,OAAO,SAAAnW,GAAG,MAAI,cAAeA,KAASA,EAAIkB,YAC1CkV,OAAO,SAACC,EAAKC,GAMZ,OALIA,EAAKxZ,cAAcuZ,EACrBA,EAAIC,EAAKxZ,aAAe,EAExBuZ,EAAIC,EAAKxZ,YAAc,EAElBuZ,GACN,OClBLE,GAAa,SAACla,EAAGma,GACrB,IAASC,EAATvY,YAAmB7B,EAAC,GAAL,GACNqa,EAATxY,YAAmBsY,EAAC,GAAL,GAEf,OAAIC,EAASC,GACH,EAEND,EAASC,EACJ,EAGF,GAGHC,GAAc,SAAH9Z,GAAoB,IAAdkY,EAAOlY,EAAPkY,QACjB6B,EAASpc,OAAOgb,QAAQT,GAG5B,OAFA6B,EAAOC,KAAKN,IAGVxb,IAAAC,cAACyI,IAAS,KAENmT,EAAOrN,MAAM,EAAG,GAAGlP,IAAI,SAAA2P,EAAe8M,GAAU,IAAArM,EAAAvM,YAAA8L,EAAA,GAAvBpR,EAAG6R,EAAA,GAAE5R,EAAK4R,EAAA,GACjC,OAAIqM,GAAS,EACJ/b,IAAAC,cAAC4I,IAAa,CAAChL,IAAKA,EAAKsC,UAAU,kCAAkCtC,EAAImC,IAAAC,cAAC+b,KAAK,CAAC7b,UAAU,WAAWwC,MAAM,WAAW7E,IAEtHkC,IAAAC,cAAC4I,IAAa,CAAChL,IAAKA,EAAKsC,UAAU,kCAAkCtC,EAAImC,IAAAC,cAAC+b,KAAK,CAAC7b,UAAU,YAAYrC,QAgD1Gme,GAvCW,SAAAjf,GACxB,IAAMmB,EAAW4E,cAAX5E,OACN6E,EAA4BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCgX,EAAO9W,EAAA,GAAEgZ,EAAUhZ,EAAA,GAQxB,OANAQ,oBAAU,WACJvF,GACFgd,GAAsBhd,GAAQE,KAAK6d,IAEpC,CAAC/d,IAGF6B,IAAAC,cAACF,EAAiB,CAACS,kBAAkB,EAAMF,SAAU,KACnDN,IAAAC,cAAA,UAAI,4BAGJD,IAAAC,cAAC2b,GAAW,CAAC5B,QAASA,IACtBha,IAAAC,cAAA,WACAD,IAAAC,cAACC,IAAS,KACRF,IAAAC,cAAC0I,IAAI,CAACC,GAAE,UACN5I,IAAAC,cAACyC,IAAM,CAACC,MAAM,WAAU,oCAM5B3C,IAAAC,cAAA,WACAD,IAAAC,cAACC,IAAS,KACRF,IAAAC,cAAC0I,IAAI,CAACC,GAAE,KACN5I,IAAAC,cAACyC,IAAM,CAACC,MAAM,WAAU,0BC1DnBwZ,GATa,SAAChe,GAA6E,IAArEwW,EAAS/W,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAI+C,EAAaoF,EAAanI,UAAAxB,OAAA,QAAAe,IAAAS,UAAA,GAAAA,UAAA,GAAG,IAAIuH,EAEpF,OADAwP,EAAUlT,OAAOtD,EAAQ,CAAEyC,MAAO,oBAC3B+T,EACJvW,IAAID,GACJE,KAAK,SAAAqD,GACJ,OAAOqE,EAAc3H,IAAIsD,EAAKH,oBCmBrB6a,GAtBE,SAAHta,GAAA,IAAM6C,EAAQ7C,EAAR6C,SAAUxE,EAAS2B,EAAT3B,UAAS,OACrCH,IAAAC,cAAA,OAAKE,UAAWA,GACdH,IAAAC,cAAA,MAAIE,UAAU,QAAQwE,EAASqS,MAC/BhX,IAAAC,cAACwG,IAAG,KAEA,CAAC,IAAK,IAAK,IAAK,KAAKnH,IAAI,SAACoH,GAAG,OAC3B1G,IAAAC,cAAC0G,IAAG,CAAC9I,IAAK6I,EAAKE,GAAI,GAAIC,GAAI,EAAG1G,UAAU,QACtCH,IAAAC,cAAC0W,KAAI,KACH3W,IAAAC,cAAC0a,KAAQ,KACP3a,IAAAC,cAAC4W,KAAS,KAAC7W,IAAAC,cAAA,cAASyG,IACpB1G,IAAAC,cAAC2a,KAAQ,KACNjW,EAAQ,SAAAP,OAAUsC,aCL/B2V,GAAiB,SAAHva,GAA8B,IAAxBwa,EAASxa,EAATwa,UAAWC,EAAMza,EAANya,OACnC,OAAOD,EAEHtc,IAAAC,cAAC0I,IAAI,CAACC,GAAI2T,GACRvc,IAAAC,cAACyC,IAAM,CAACC,MAAM,WAAU,yCAExB,MAoCO6Z,GAjCc,SAAHvN,GAAeA,EAATsK,UAAgB,IACxCpb,EAAW4E,cAAX5E,OACN6E,EAAgCC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAvC2B,EAAQzB,EAAA,GAAE8X,EAAW9X,EAAA,GAC5BE,EAAgCH,mBAdN,GAcmCI,EAAAF,YAAAC,EAAA,GAAtD2V,EAAQ1V,EAAA,GAAEmW,EAAWnW,EAAA,GAS5B,OAPAK,oBAAU,WACJvF,IACFib,GAAW,CAAEC,QAlBS,EAkBqBR,iBAAkBW,EAAaV,cAAeU,IACzF2C,GAAoBhe,GAAQE,KAAK2c,KAElC,CAAC7c,IAGF6B,IAAAC,cAACF,EAAiB,CAACS,kBAAkB,GAClCmE,EACG3E,IAAAC,cAAA,WACED,IAAAC,cAACmc,GAAQ,CAACzX,SAAUA,IACpB3E,IAAAC,cAAA,OAAKE,UAAU,QAAO,6BACtBH,IAAAC,cAAA,OAAKE,UAAU,aACZ6U,KAAK2E,KAAKZ,IAEb/Y,IAAAC,cAACoc,GAAc,CACbC,UAAWvD,GAAY,EAEvBwD,OAAM,wCAAAnY,OAA0CjG,EAAM,SAAAiG,OAAQO,EAAShF,OAG3EK,IAAAC,cAAA,WAAK,qCCRAwc,OAjCf,WACI,IAAAC,EAAwB1c,IAAMiD,SAAS,MAAK0Z,EAAAxZ,YAAAuZ,EAAA,GAArChK,EAAIiK,EAAA,GAAEtI,EAAOsI,EAAA,GAMpB,OALA3c,IAAM0D,UAAU,WACZxH,EAASmB,OAAO6V,mBAAmB,SAAC0J,GAChCvI,EAAQuI,MAEb,IAGC5c,IAAAC,cAAC4c,KAAI,CAACrF,KAAK,SACPxX,IAAAC,cAAC4c,KAAKC,KAAI,CAACC,GAAIpU,IAAMC,GAAG,KAAI,gBAI5B5I,IAAAC,cAAC4c,KAAKA,KAAI,CAACG,SAAS,SACftK,EACD1S,IAAAC,cAAAD,IAAAiI,SAAA,KACIjI,IAAAC,cAAC4c,KAAKC,KAAI,CAACC,GAAIpU,IAAMC,GAAI,UAAS,4BAClC5I,IAAAC,cAAC4c,KAAKC,KAAI,CAACC,GAAIpU,IAAMC,GAAI,WAAU,4BACnC5I,IAAAC,cAAC4c,KAAKC,KAAI,CAACC,GAAIpU,IAAMC,GAAI,YAAW,4BACpC5I,IAAAC,cAAC4c,KAAKC,KAAI,CAACC,GAAIpU,IAAMC,GAAI,aAAY,gBACrC5I,IAAAC,cAAC4c,KAAKC,KAAI,CAAChW,QAAS,kBAAM5K,EAASmB,OAAO4f,YAAW,iBAGrDjd,IAAAC,cAAC4c,KAAKC,KAAI,CAACC,GAAIpU,IAAMC,GAAI,WAAU,qECmFxCsU,OA1Gf,WACI,IAAAR,EAAoC1c,IAAMiD,SAAS,YAAW0Z,EAAAxZ,YAAAuZ,EAAA,GAAvDS,EAAUR,EAAA,GAAES,EAAaT,EAAA,GAChCU,EAAyBrd,IAAMiD,SAAS,IAAGqa,EAAAna,YAAAka,EAAA,GAApChL,EAAKiL,EAAA,GAAEzJ,EAAQyJ,EAAA,GACtBC,EAA+Bvd,IAAMiD,SAAS,IAAGua,EAAAra,YAAAoa,EAAA,GAA1CjL,EAAQkL,EAAA,GAAE1J,EAAW0J,EAAA,GACtB5F,EAAWC,cACjB4F,EAAwCzd,IAAMiD,SAAS,IAAGya,EAAAva,YAAAsa,EAAA,GAAnDjW,EAAYkW,EAAA,GAAEjW,EAAeiW,EAAA,GACpCC,EAAkC3d,IAAMiD,UAAS,GAAM2a,EAAAza,YAAAwa,EAAA,GAAhDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAoD9B,OACI5d,IAAAC,cAACC,KAAS,KACNF,IAAAC,cAAC4c,KAAI,CAACkB,OAAO,KACT/d,IAAAC,cAAC4c,KAAKC,KAAI,CACNkB,OAAuB,aAAfb,EACRrW,QAAS,WACLW,EAAgB,IAChB2V,EAAc,cAErB,gBAGDpd,IAAAC,cAAC4c,KAAKC,KAAI,CACNkB,OAAuB,WAAfb,EACRrW,QAAS,WACLW,EAAgB,IAChB2V,EAAc,YAErB,iBAILpd,IAAAC,cAACiC,KAAI,CAACC,SAxEd,WACI2b,GAAa,GACK,aAAfX,EACCjhB,EACCmB,OACAkV,+BAA+BF,EAAOC,GACtCjU,KAAK,WACFuZ,EAAS,KACTkG,GAAa,KAEhB/Z,MAAM,SAACC,GACJ,OAAOA,EAAM6O,MACT,IAAK,4BACDpL,EAAgB,kCAChB,MACJ,IAAK,qBACDA,EAAgB,8CAChB,MACJ,IAAK,qBACDA,EAAgB,2CAMR,WAAf0V,GACLjhB,EACCmB,OACA2V,2BAA2BX,EAAOC,GAClCjU,KAAK,WACFuZ,EAAS,KACTkG,GAAa,KAEhB/Z,MAAM,SAACC,GACJ,IAAI4O,EAAY5O,EAAM6O,KAEtB,OADAhP,QAAQC,IAAI8O,GACLA,GACH,IAAK,qBACDnL,EAAgB,8CAChB,MACJ,IAAK,sBACDA,EAAgB,8EAChBqW,GAAa,QA+BrB9d,IAAAC,cAACiC,KAAKM,MAAK,CACPyb,MAAM,eACNngB,MAAOuU,EACPzT,SAAU,SAACwD,GAAC,OAAKyR,EAASzR,EAAEK,OAAO3E,QACnCiZ,YAAY,mCAEhB/W,IAAAC,cAACiC,KAAKM,MAAK,CACPyb,MAAM,eACNngB,MAAOwU,EACP1T,SAAU,SAACwD,GAAC,OAAK0R,EAAY1R,EAAEK,OAAO3E,QACtCiZ,YAAY,iCACZnU,KAAK,aAER4E,GAAgBxH,IAAAC,cAACie,KAAO,CAACC,UAAQ,GAAE3W,GACpCxH,IAAAC,cAACiC,KAAKQ,OAAM,CAAC0b,QAASP,GACF,aAAfV,GAA6B,eACd,WAAfA,GAA2B,2DCiBjCkB,OAhHf,WACI,IAAA3B,EAAwB1c,IAAMiD,SAAS,IAAG0Z,EAAAxZ,YAAAuZ,EAAA,GAAnC4B,EAAK3B,EAAA,GAAE4B,EAAQ5B,EAAA,GACtBU,EAA4Brd,IAAMiD,SAAS,IAAGqa,EAAAna,YAAAka,EAAA,GAAvCmB,EAAOlB,EAAA,GAAEmB,EAAUnB,EAAA,GAC1BC,EAA0Bvd,IAAMiD,SAAS,IAAGua,EAAAra,YAAAoa,EAAA,GAArCmB,EAAMlB,EAAA,GAAEmB,EAASnB,EAAA,GACxBC,EAAgCzd,IAAMiD,SAAS,IAAGya,EAAAva,YAAAsa,EAAA,GAA3CmB,EAASlB,EAAA,GAAEmB,EAAYnB,EAAA,GAC9BC,EAAsB3d,IAAMiD,SAAS,MAAK2a,EAAAza,YAAAwa,EAAA,GAAnCmB,EAAIlB,EAAA,GAAEmB,EAAOnB,EAAA,GACdhG,EAAWC,cACjBmH,EAAgChf,IAAMiD,UAAS,GAAMgc,EAAA9b,YAAA6b,EAAA,GAA9CnB,EAASoB,EAAA,GAAEnB,EAAYmB,EAAA,GAE9Bjf,IAAM0D,UAAU,WACZxH,EACKkB,YACAa,WAAW,UACXG,MACAC,KAAK,SAAC6gB,GACH,IAAMtf,EAAOsf,EAAmB7f,KAAKC,IAAI,SAAApB,GACrC,OAAOA,EAAI0B,SAEf+e,EAAU/e,MAGnB,IAEH,IAAMuf,EAAUT,EAAOpf,IAAI,SAAA8f,GACvB,MAAM,CACFpI,KAAKoI,EAAMxb,KACX9F,MAAMshB,EAAMxb,QAIdyb,EAAaP,EAChBlJ,IAAI0J,gBAAgBR,GACpB,2DAmCH,OAEI9e,IAAAC,cAACC,KAAS,KACNF,IAAAC,cAACwc,KAAM,KAAC,4BACRzc,IAAAC,cAACiC,KAAI,CAACC,SArCd,WACI2b,GAAa,GACb,IAAMyB,EACFrjB,EAASkB,YAAYa,WAAW,SAASC,MACvCshB,EACFtjB,EAASujB,UAAU3e,IAAI,eAAiBye,EAAY5f,IAClD+f,EAAU,CACZC,YAAab,EAAKlc,MAEtB4c,EAAQI,IAAId,EAAMY,GAAUrhB,KAAK,WAC7BmhB,EAAQK,iBAAiBxhB,KAAK,SAACyhB,GAC3BP,EAAY5b,IAAI,CACZ2a,QACAE,UACAY,MAAQR,EACRmB,UAAU7jB,EAASkB,UAAU4iB,UAAU9G,MACvC+G,OAAQ,CACJvS,YAAaxR,EAASmB,OAAOuf,YAAYlP,aAAe,GACxDwS,SAAUhkB,EAASmB,OAAOuf,YAAYsD,UAAY,GAClD/M,IAAKjX,EAASmB,OAAOuf,YAAYzJ,IACjCd,MAAOnW,EAASmB,OAAOuf,YAAYvK,OAEvCyN,aAEHzhB,KAAK,WACFyf,GAAa,GACblG,EAAS,aAYb5X,IAAAC,cAACyQ,KAAK,CACFC,IAAK0O,EACL7H,KAAK,QACL2I,QAAQ,SAEZngB,IAAAC,cAACyC,KAAM,CAACsP,OAAK,EAAC+K,GAAG,QAAQqD,QAAQ,cAAa,wCAG9CpgB,IAAAC,cAACiC,KAAKM,MAAK,CACPI,KAAK,OACLjD,GAAG,aACHU,MAAO,CAAE2Q,QAAS,QAClBpS,SAAU,SAACwD,GAAC,OAAK2c,EAAQ3c,EAAEK,OAAO4d,MAAM,OAE5CrgB,IAAAC,cAACiC,KAAKM,MAAK,CACPuU,YAAY,uCACZjZ,MAAOwgB,EACP1f,SAAU,SAACwD,GAAC,OAAKmc,EAASnc,EAAEK,OAAO3E,UAGvCkC,IAAAC,cAACiC,KAAKoe,SAAQ,CACVvJ,YAAY,uCACZjZ,MAAO0gB,EACP5f,SAAU,SAACwD,GAAC,OAAKqc,EAAWrc,EAAEK,OAAO3E,UAGzCkC,IAAAC,cAACiC,KAAKqe,SAAQ,CACVxJ,YAAY,uCACZoI,QAASA,EACTqB,WAAS,EACT1iB,MAAO8gB,EACPhgB,SAAU,SAACwD,EAACN,GAAA,IAAGhE,EAAKgE,EAALhE,MAAK,OAAM+gB,EAAa/gB,MAE3CkC,IAAAC,cAACiC,KAAKQ,OAAM,CAAC0b,QAASP,GAAW,qDCjHjDxU,GAAA,kBAAAjH,GAAA,IAAAkH,EAAAlH,EAAA,GAAAmH,EAAA9J,OAAA+J,UAAAC,EAAAF,EAAAG,eAAAC,EAAAlK,OAAAmK,gBAAA,SAAAN,EAAAlH,EAAAmH,GAAAD,EAAAlH,GAAAmH,EAAAzL,OAAA+L,EAAA,mBAAAC,cAAA,GAAAxI,EAAAuI,EAAAE,UAAA,aAAAC,EAAAH,EAAAI,eAAA,kBAAAC,EAAAL,EAAAM,aAAA,yBAAAC,EAAAd,EAAAlH,EAAAmH,GAAA,OAAA9J,OAAAmK,eAAAN,EAAAlH,EAAA,CAAAtE,MAAAyL,EAAAc,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAjB,EAAAlH,GAAA,IAAAgI,EAAA,aAAAd,GAAAc,EAAA,SAAAd,EAAAlH,EAAAmH,GAAA,OAAAD,EAAAlH,GAAAmH,GAAA,SAAAiB,EAAAlB,EAAAlH,EAAAmH,EAAAE,GAAA,IAAAI,EAAAzH,KAAAoH,qBAAAiB,EAAArI,EAAAqI,EAAAnJ,EAAA7B,OAAAK,OAAA+J,EAAAL,WAAAQ,EAAA,IAAAU,EAAAjB,GAAA,WAAAE,EAAArI,EAAA,WAAAxD,MAAA6M,EAAArB,EAAAC,EAAAS,KAAA1I,EAAA,SAAAsJ,EAAAtB,EAAAlH,EAAAmH,GAAA,WAAA3G,KAAA,SAAAiI,IAAAvB,EAAAwB,KAAA1I,EAAAmH,IAAA,MAAAD,GAAA,OAAA1G,KAAA,QAAAiI,IAAAvB,IAAAlH,EAAAoI,OAAA,IAAAO,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAA9L,EAAA,GAAA6K,EAAA7K,EAAA+B,EAAA,kBAAApE,OAAA,IAAAoO,EAAA7L,OAAA8L,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAjC,GAAAE,EAAAqB,KAAAU,EAAAlK,KAAA/B,EAAAiM,GAAA,IAAAE,EAAAL,EAAA7B,UAAAiB,EAAAjB,UAAA/J,OAAAK,OAAAP,GAAA,SAAAoM,EAAArC,GAAA,0BAAArK,QAAA,SAAAmD,GAAAgI,EAAAd,EAAAlH,EAAA,SAAAkH,GAAA,OAAApM,KAAA0O,QAAAxJ,EAAAkH,OAAA,SAAAuC,EAAAvC,EAAAlH,GAAA,SAAA0J,EAAAvC,EAAAI,EAAAE,EAAAvI,GAAA,IAAA0I,EAAAY,EAAAtB,EAAAC,GAAAD,EAAAK,GAAA,aAAAK,EAAApH,KAAA,KAAAsH,EAAAF,EAAAa,IAAAE,EAAAb,EAAApM,MAAA,OAAAiN,GAAA,iBAAAA,GAAAtB,EAAAqB,KAAAC,EAAA,WAAA3I,EAAA2J,QAAAhB,EAAAiB,SAAA3N,KAAA,SAAAiL,GAAAwC,EAAA,OAAAxC,EAAAO,EAAAvI,IAAA,SAAAgI,GAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,KAAAc,EAAA2J,QAAAhB,GAAA1M,KAAA,SAAAiL,GAAAY,EAAApM,MAAAwL,EAAAO,EAAAK,IAAA,SAAAZ,GAAA,OAAAwC,EAAA,QAAAxC,EAAAO,EAAAvI,OAAA0I,EAAAa,KAAA,IAAAtB,EAAAI,EAAAzM,KAAA,WAAAY,MAAA,SAAAwL,EAAAG,GAAA,SAAAwC,IAAA,WAAA7J,EAAA,SAAAA,EAAAmH,GAAAuC,EAAAxC,EAAAG,EAAArH,EAAAmH,KAAA,OAAAA,MAAAlL,KAAA4N,YAAA,SAAAtB,EAAAvI,EAAAmH,EAAAE,GAAA,IAAAE,EAAAoB,EAAA,gBAAAlB,EAAAvI,GAAA,GAAAqI,IAAAsB,EAAA,UAAAiB,MAAA,mCAAAvC,IAAAuB,EAAA,cAAArB,EAAA,MAAAvI,EAAA,OAAAxD,MAAAwL,EAAA6C,MAAA,OAAA1C,EAAA2C,OAAAvC,EAAAJ,EAAAoB,IAAAvJ,IAAA,KAAA0I,EAAAP,EAAA4C,SAAA,GAAArC,EAAA,KAAAE,EAAAoC,EAAAtC,EAAAP,GAAA,GAAAS,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,GAAA,YAAAT,EAAA2C,OAAA3C,EAAA8C,KAAA9C,EAAA+C,MAAA/C,EAAAoB,SAAA,aAAApB,EAAA2C,OAAA,IAAAzC,IAAAoB,EAAA,MAAApB,EAAAuB,EAAAzB,EAAAoB,IAAApB,EAAAgD,kBAAAhD,EAAAoB,SAAA,WAAApB,EAAA2C,QAAA3C,EAAAiD,OAAA,SAAAjD,EAAAoB,KAAAlB,EAAAsB,EAAA,IAAA1L,EAAAqL,EAAAxI,EAAAmH,EAAAE,GAAA,cAAAlK,EAAAqD,KAAA,IAAA+G,EAAAF,EAAA0C,KAAAjB,EAAAF,EAAAzL,EAAAsL,MAAAM,EAAA,gBAAArN,MAAAyB,EAAAsL,IAAAsB,KAAA1C,EAAA0C,MAAA,UAAA5M,EAAAqD,OAAA+G,EAAAuB,EAAAzB,EAAA2C,OAAA,QAAA3C,EAAAoB,IAAAtL,EAAAsL,OAAA,SAAAyB,EAAAlK,EAAAmH,GAAA,IAAAE,EAAAF,EAAA6C,OAAAzC,EAAAvH,EAAA2H,SAAAN,GAAA,GAAAE,IAAAL,EAAA,OAAAC,EAAA8C,SAAA,eAAA5C,GAAArH,EAAA2H,SAAA4C,SAAApD,EAAA6C,OAAA,SAAA7C,EAAAsB,IAAAvB,EAAAgD,EAAAlK,EAAAmH,GAAA,UAAAA,EAAA6C,SAAA,WAAA3C,IAAAF,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAAnD,EAAA,aAAA0B,EAAA,IAAAtB,EAAAe,EAAAjB,EAAAvH,EAAA2H,SAAAR,EAAAsB,KAAA,aAAAhB,EAAAjH,KAAA,OAAA2G,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAAhB,EAAAgB,IAAAtB,EAAA8C,SAAA,KAAAlB,EAAA,IAAA7J,EAAAuI,EAAAgB,IAAA,OAAAvJ,IAAA6K,MAAA5C,EAAAnH,EAAAyK,YAAAvL,EAAAxD,MAAAyL,EAAAuD,KAAA1K,EAAA2K,QAAA,WAAAxD,EAAA6C,SAAA7C,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,GAAAC,EAAA8C,SAAA,KAAAlB,GAAA7J,GAAAiI,EAAA6C,OAAA,QAAA7C,EAAAsB,IAAA,IAAA+B,UAAA,oCAAArD,EAAA8C,SAAA,KAAAlB,GAAA,SAAA6B,EAAA1D,GAAA,IAAAlH,EAAA,CAAA6K,OAAA3D,EAAA,SAAAA,IAAAlH,EAAA8K,SAAA5D,EAAA,SAAAA,IAAAlH,EAAA+K,WAAA7D,EAAA,GAAAlH,EAAAgL,SAAA9D,EAAA,IAAApM,KAAAmQ,WAAAlO,KAAAiD,GAAA,SAAAkL,EAAAhE,GAAA,IAAAlH,EAAAkH,EAAAiE,YAAA,GAAAnL,EAAAQ,KAAA,gBAAAR,EAAAyI,IAAAvB,EAAAiE,WAAAnL,EAAA,SAAAsI,EAAApB,GAAApM,KAAAmQ,WAAA,EAAAJ,OAAA,SAAA3D,EAAArK,QAAA+N,EAAA9P,WAAAsQ,OAAA,YAAA/B,EAAArJ,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAmH,EAAAnH,EAAAd,GAAA,GAAAiI,EAAA,OAAAA,EAAAuB,KAAA1I,GAAA,sBAAAA,EAAA0K,KAAA,OAAA1K,EAAA,IAAAqL,MAAArL,EAAAhG,QAAA,KAAAuN,GAAA,EAAAE,EAAA,SAAAiD,IAAA,OAAAnD,EAAAvH,EAAAhG,QAAA,GAAAqN,EAAAqB,KAAA1I,EAAAuH,GAAA,OAAAmD,EAAAhP,MAAAsE,EAAAuH,GAAAmD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,GAAA,OAAAjD,EAAAiD,KAAAjD,GAAA,UAAA+C,iBAAAxK,EAAA,2BAAAgJ,EAAA5B,UAAA6B,EAAA1B,EAAA+B,EAAA,eAAA5N,MAAAuN,EAAAf,cAAA,IAAAX,EAAA0B,EAAA,eAAAvN,MAAAsN,EAAAd,cAAA,IAAAc,EAAAsC,YAAAtD,EAAAiB,EAAAnB,EAAA,qBAAA9H,EAAAuL,oBAAA,SAAArE,GAAA,IAAAlH,EAAA,mBAAAkH,KAAAsE,YAAA,QAAAxL,QAAAgJ,GAAA,uBAAAhJ,EAAAsL,aAAAtL,EAAAwB,QAAAxB,EAAAyL,KAAA,SAAAvE,GAAA,OAAA7J,OAAAqO,eAAArO,OAAAqO,eAAAxE,EAAA+B,IAAA/B,EAAAyE,UAAA1C,EAAAjB,EAAAd,EAAAY,EAAA,sBAAAZ,EAAAE,UAAA/J,OAAAK,OAAA4L,GAAApC,GAAAlH,EAAA4L,MAAA,SAAA1E,GAAA,OAAA0C,QAAA1C,IAAAqC,EAAAE,EAAArC,WAAAY,EAAAyB,EAAArC,UAAAQ,EAAA,kBAAA9M,OAAAkF,EAAAyJ,gBAAAzJ,EAAA6L,MAAA,SAAA3E,EAAAC,EAAAE,EAAAE,EAAAE,QAAA,IAAAA,MAAAqE,SAAA,IAAA5M,EAAA,IAAAuK,EAAArB,EAAAlB,EAAAC,EAAAE,EAAAE,GAAAE,GAAA,OAAAzH,EAAAuL,oBAAApE,GAAAjI,IAAAwL,OAAAzO,KAAA,SAAAiL,GAAA,OAAAA,EAAA6C,KAAA7C,EAAAxL,MAAAwD,EAAAwL,UAAAnB,EAAAD,GAAAtB,EAAAsB,EAAAxB,EAAA,aAAAE,EAAAsB,EAAApK,EAAA,kBAAApE,OAAAkN,EAAAsB,EAAA,mDAAAtJ,EAAA+L,KAAA,SAAA7E,GAAA,IAAAlH,EAAA3C,OAAA6J,GAAAC,EAAA,WAAAE,KAAArH,EAAAmH,EAAApK,KAAAsK,GAAA,OAAAF,EAAA6E,UAAA,SAAAtB,IAAA,KAAAvD,EAAAnN,QAAA,KAAAkN,EAAAC,EAAA8E,MAAA,GAAA/E,KAAAlH,EAAA,OAAA0K,EAAAhP,MAAAwL,EAAAwD,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAX,MAAA,EAAAW,IAAA1K,EAAAqJ,SAAAf,EAAAlB,UAAA,CAAAoE,YAAAlD,EAAA8C,MAAA,SAAApL,GAAA,GAAAlF,KAAAoR,KAAA,EAAApR,KAAA4P,KAAA,EAAA5P,KAAAqP,KAAArP,KAAAsP,MAAAlD,EAAApM,KAAAiP,MAAA,EAAAjP,KAAAmP,SAAA,KAAAnP,KAAAkP,OAAA,OAAAlP,KAAA2N,IAAAvB,EAAApM,KAAAmQ,WAAApO,QAAAqO,IAAAlL,EAAA,QAAAmH,KAAArM,KAAA,MAAAqM,EAAAgF,OAAA,IAAA9E,EAAAqB,KAAA5N,KAAAqM,KAAAkE,OAAAlE,EAAAiF,MAAA,MAAAtR,KAAAqM,GAAAD,IAAAmF,KAAA,WAAAvR,KAAAiP,MAAA,MAAA7C,EAAApM,KAAAmQ,WAAA,GAAAE,WAAA,aAAAjE,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,OAAA3N,KAAAwR,MAAAjC,kBAAA,SAAArK,GAAA,GAAAlF,KAAAiP,KAAA,MAAA/J,EAAA,IAAAmH,EAAArM,KAAA,SAAAyR,EAAAlF,EAAAE,GAAA,OAAArI,EAAAsB,KAAA,QAAAtB,EAAAuJ,IAAAzI,EAAAmH,EAAAuD,KAAArD,EAAAE,IAAAJ,EAAA6C,OAAA,OAAA7C,EAAAsB,IAAAvB,KAAAK,EAAA,QAAAA,EAAAzM,KAAAmQ,WAAAjR,OAAA,EAAAuN,GAAA,IAAAA,EAAA,KAAAE,EAAA3M,KAAAmQ,WAAA1D,GAAArI,EAAAuI,EAAA0D,WAAA,YAAA1D,EAAAoD,OAAA,OAAA0B,EAAA,UAAA9E,EAAAoD,QAAA/P,KAAAoR,KAAA,KAAAtE,EAAAP,EAAAqB,KAAAjB,EAAA,YAAAK,EAAAT,EAAAqB,KAAAjB,EAAA,iBAAAG,GAAAE,EAAA,IAAAhN,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,MAAAhQ,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,iBAAA,GAAAnD,GAAA,GAAA9M,KAAAoR,KAAAzE,EAAAqD,SAAA,OAAAyB,EAAA9E,EAAAqD,UAAA,YAAAhD,EAAA,UAAAgC,MAAA,6CAAAhP,KAAAoR,KAAAzE,EAAAsD,WAAA,OAAAwB,EAAA9E,EAAAsD,gBAAAT,OAAA,SAAApD,EAAAlH,GAAA,QAAAmH,EAAArM,KAAAmQ,WAAAjR,OAAA,EAAAmN,GAAA,IAAAA,EAAA,KAAAI,EAAAzM,KAAAmQ,WAAA9D,GAAA,GAAAI,EAAAsD,QAAA/P,KAAAoR,MAAA7E,EAAAqB,KAAAnB,EAAA,eAAAzM,KAAAoR,KAAA3E,EAAAwD,WAAA,KAAAtD,EAAAF,EAAA,OAAAE,IAAA,UAAAP,GAAA,aAAAA,IAAAO,EAAAoD,QAAA7K,MAAAyH,EAAAsD,aAAAtD,EAAA,UAAAvI,EAAAuI,IAAA0D,WAAA,UAAAjM,EAAAsB,KAAA0G,EAAAhI,EAAAuJ,IAAAzI,EAAAyH,GAAA3M,KAAAkP,OAAA,OAAAlP,KAAA4P,KAAAjD,EAAAsD,WAAAhC,GAAAjO,KAAA0R,SAAAtN,IAAAsN,SAAA,SAAAtF,EAAAlH,GAAA,aAAAkH,EAAA1G,KAAA,MAAA0G,EAAAuB,IAAA,gBAAAvB,EAAA1G,MAAA,aAAA0G,EAAA1G,KAAA1F,KAAA4P,KAAAxD,EAAAuB,IAAA,WAAAvB,EAAA1G,MAAA1F,KAAAwR,KAAAxR,KAAA2N,IAAAvB,EAAAuB,IAAA3N,KAAAkP,OAAA,SAAAlP,KAAA4P,KAAA,kBAAAxD,EAAA1G,MAAAR,IAAAlF,KAAA4P,KAAA1K,GAAA+I,GAAA0D,OAAA,SAAAvF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA4D,aAAA7D,EAAA,OAAApM,KAAA0R,SAAArF,EAAAgE,WAAAhE,EAAA6D,UAAAE,EAAA/D,GAAA4B,IAAApH,MAAA,SAAAuF,GAAA,QAAAlH,EAAAlF,KAAAmQ,WAAAjR,OAAA,EAAAgG,GAAA,IAAAA,EAAA,KAAAmH,EAAArM,KAAAmQ,WAAAjL,GAAA,GAAAmH,EAAA0D,SAAA3D,EAAA,KAAAG,EAAAF,EAAAgE,WAAA,aAAA9D,EAAA7G,KAAA,KAAA+G,EAAAF,EAAAoB,IAAAyC,EAAA/D,GAAA,OAAAI,GAAA,UAAAuC,MAAA,0BAAA4C,cAAA,SAAA1M,EAAAmH,EAAAE,GAAA,OAAAvM,KAAAmP,SAAA,CAAAtC,SAAA0B,EAAArJ,GAAAyK,WAAAtD,EAAAwD,QAAAtD,GAAA,SAAAvM,KAAAkP,SAAAlP,KAAA2N,IAAAvB,GAAA6B,IAAA/I,EAUA,IAAMqd,GAAUgB,eAIV3d,GADU,IAAIsV,gBAAgBnU,OAAOC,SAASoU,QAC1Bla,IAAI,WAExBsiB,GAAYzc,OAAOC,SAASuL,KAAKkR,YAAY,KAAO,EACpDC,GAAM3c,OAAOC,SAASuL,KAAKoR,UAAUH,IAC3C7c,QAAQC,IAAI,YAAchB,IAC1Be,QAAQC,IAAI,QAAU8c,IACtB,IAAME,GAAShgB,aAAI2e,GAAO,QAAArb,OAAWwc,GAAM,OAAM,MAMjD,SAASG,GAAUjf,GAMhB,IALDkf,EAASlf,EAATkf,UAASC,EAAAnf,EACTc,YAAI,IAAAqe,EAAG,OAAMA,EACbC,EAAWpf,EAAXof,YACAC,EAAcrf,EAAdqf,eACAzT,EAAW5L,EAAX4L,YAWM/N,EAAE,aAAAyE,OAAgB4c,GAExB,OACEhhB,IAAAC,cAAA,OAAKE,UAAU,cACbH,IAAAC,cAAA,SAAOmgB,QAASzgB,EAAIQ,UAAU,cAC3BuN,GAEH1N,IAAAC,cAAA,SACE2D,KAAMod,EACNpe,KAAMA,EACNzC,UAAU,eACVR,GAAIA,EACJ7B,MAAOojB,EAAYF,GACnBpiB,SAtBe,SAAHqQ,GAEZ,IADJxM,EAAMwM,EAANxM,OAEA0e,EAAe,SAACC,GAAe,OAAAC,0BAAA,GAC1BD,GAAe,GAAA/J,aAAA,GACjB2J,EAAYve,EAAO3E,WAkBlBwjB,IAAK,EACLC,IAAK,MAmPEC,OA7Of,WACE,IAAA9E,EAAsC1c,IAAMiD,SAAS,CACnD9C,UAAW,sBACX2Q,MAAO,OACPvQ,OAAQ,QACRkhB,gBACE,sGACFC,mCAAoC,OACpCC,YAAa,EACbC,YAAa,EACbC,YAAa,UACbC,YAAa,UACbzhB,MAAO,CAAE0hB,YAAa,kBACtBC,SAAU,GACVC,2BAA2B,EAC3BC,eAAe,EACfC,qBAAsB,MACtBC,aAAa,IACbzF,EAAAxZ,YAAAuZ,EAAA,GAjBKwE,EAAWvE,EAAA,GAAEwE,EAAcxE,EAAA,GA6B5BtN,EAAYrP,IAAMqiB,YAExBhF,EAA4Crd,IAAMiD,SAAS,WAAUqa,EAAAna,YAAAka,EAAA,GAA9DiF,EAAchF,EAAA,GAAEiF,EAAiBjF,EAAA,GACxCC,EAAkDvd,IAAMiD,SAAS,aAAYua,EAAAra,YAAAoa,EAAA,GAAtEiF,EAAiBhF,EAAA,GAAEiF,EAAoBjF,EAAA,GAC9CC,EAA8Bzd,IAAMiD,SAAS,IAAGya,EAAAva,YAAAsa,EAAA,GAChDE,GADcD,EAAA,GAAYA,EAAA,GACJ1d,IAAMiD,SAAS,KAAG2a,EAAAza,YAAAwa,EAAA,GAA5B+E,GAAF9E,EAAA,GAAQA,EAAA,IAClBoB,EAA0Bhf,IAAMiD,SAAS,IAAGgc,EAAA9b,YAAA6b,EAAA,GAA9B2D,GAAF1D,EAAA,GAAUA,EAAA,IACtB2D,EAAoC5iB,IAAMiD,SAAS,CACjD4f,OAAQ,KACRC,SAAU,OACVC,EAAA5f,YAAAyf,EAAA,GAHiBI,GAAFD,EAAA,GAAeA,EAAA,IAMhCE,EAA8CjjB,IAAMiD,SAAS,OAAMigB,EAAA/f,YAAA8f,EAAA,GAWnEjgB,GAXsBkgB,EAAA,GAAoBA,EAAA,GAWdjgB,oBAAS,IAAMC,EAAAC,YAAAH,EAAA,GAApCmgB,EAAMjgB,EAAA,GAAEkgB,EAASlgB,EAAA,GAkHlBmgB,EAAsB,CAC1B,CAAC,eAzDiB,WAAM,IAAAC,EAClBC,EAAwB,QAApBD,EAAGjU,EAAUiB,eAAO,IAAAgT,OAAA,EAAjBA,EAAmBC,KAE5BA,GACFA,KAqDkB,QACpB,CAAC,2BAlDiB,WAAM,IAAAC,EAClBC,EAAwB,QAApBD,EAAGnU,EAAUiB,eAAO,IAAAkT,OAAA,EAAjBA,EAAmBC,KAE5BA,GACFA,KA8CoB,QACtB,CAAC,2BA3CkB,WAAM,IAAAC,EACnBC,EAA+B,QAApBD,EAAGrU,EAAUiB,eAAO,IAAAoT,OAAA,EAAjBA,EAAmBC,YAEnCA,GACFA,KAuCqB,QACvB,CAAC,eApCwB,WAAM,IAAAC,EACzBC,EAA+B,QAApBD,EAAGvU,EAAUiB,eAAO,IAAAsT,OAAA,EAAjBA,EAAmBC,YAEnCA,GACFA,KAgCyB,QAC3B,CAAC,eAjFgB,WAAM,IAAAC,EACjBC,EAA6B,QAApBD,EAAGzU,EAAUiB,eAAO,IAAAwT,OAAA,EAAjBA,EAAmBC,UAEjCA,IACFxB,EAAkB,WAClBE,EAAqB,aACrBsB,GAAU,KA2EOzB,GACnB,CAAC,qBAxEmB,WAAM,IAAA0B,EACpBD,EAA6B,QAApBC,EAAG3U,EAAUiB,eAAO,IAAA0T,OAAA,EAAjBA,EAAmBD,UAEjCA,IACFxB,EAAkB,aAClBE,EAAqB,WACrBsB,GAAU,KAkEWvB,GACvB,CAAC,eAvHmB,eAAA9S,EAAAC,YAAAtG,KAAAwE,KAAG,SAAA+B,IAAA,IAAAqU,EAAAC,EAAAC,EAAAC,EAAA,OAAA/a,KAAAmB,KAAA,SAAAuF,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAjD,MAAA,OACuB,KAAxCoX,EAA6B,QAApBD,EAAG5U,EAAUiB,eAAO,IAAA2T,OAAA,EAAjBA,EAAmBC,WAExB,CAAAnU,EAAAjD,KAAA,gBAAAiD,EAAAjD,KAAA,EACiBoX,IAAW,OAAnCC,EAAepU,EAAAxD,KACnBmW,EAAOyB,GACPf,GAAU,GACVvf,QAAQC,IAAIqgB,GAEZA,EAAkBA,EACfhgB,QAAQ,mSAAoS,IACzSigB,EAAO,IAAIC,KAAK,CAACF,GAAkB,CAAEvhB,KAAM,kBACjD0hB,aAAYxD,GAAQsD,GAAM/lB,KAAK,SAACe,GAC5ByE,QAAQC,IAAI,oCACbC,MAAM,SAACC,GACNH,QAAQG,MAAM,gCAAiCA,KAChD,yBAAA+L,EAAAtB,SAAAmB,MAGN,kBAnBqB,OAAAF,EAAA/R,MAAAT,KAAAU,YAAA,GAuHK,WACzB,CAAC,qBAjBc,WACVulB,EACDlf,OAAOC,SAASuL,KAAO3M,GAGvBiQ,MAAM,qDAYQ,YAcpB,OACE/S,IAAAC,cAAA,QAAME,UAAU,uBACdH,IAAAC,cAAA,OAAKE,UAAU,OAGbH,IAAAC,cAAA,WAASE,UAAU,UACjBH,IAAAC,cAAA,UAAQE,UAAU,QAChBH,IAAAC,cAAA,UAAI,qDAEND,IAAAC,cAAA,WAASE,UAAU,sCACjBH,IAAAC,cAAA,OAAKE,UAAU,oBACbH,IAAAC,cAACskB,KAAiB9kB,OAAAC,OAAA,CAChBoB,IAAKuO,EACLzQ,SAjBG,SAAC4lB,GAChB7B,EAAS6B,IAiBGC,SAAU,SAAC5B,EAAQC,GAAQ,OACzBE,EAAc,CAAEH,SAAQC,eAEtB5B,KAGRlhB,IAAAC,cAAA,OAAKE,UAAU,eACbH,IAAAC,cAAA,OAAKE,UAAU,gBACZkjB,EAAoB/jB,IAAI,SAAAwb,GAAA,IAAA4J,EAAAvhB,YAAA2X,EAAA,GAA4B,OApE9C,SACnBmD,EACA0G,EACAC,GAAU,OAEV5kB,IAAAC,cAAA,UACEpC,IAAKogB,EACL9d,UAAS,WAAAiE,OAAawgB,EAAU,cAChChiB,KAAK,SACLkE,QAAS6d,GAER1G,GA0DW4G,CAD8BH,EAAA,GAASA,EAAA,GAAYA,EAAA,SAM3D1kB,IAAAC,cAAA,YAtMW,CAMjB,CAAC,cAAe,QAAS,4BACzB,CAAC,cAAe,QAAS,mCAgMHX,IAAI,SAAAwlB,GAAA,IAAAC,EAAA5hB,YAAA2hB,EAAA,GAAE9D,EAAS+D,EAAA,GAAEniB,EAAImiB,EAAA,GAAErX,EAAWqX,EAAA,UAC5C/kB,IAAAC,cAAC8gB,GAAU,CACTljB,IAAKmjB,EACLA,UAAWA,EACXtT,YAAaA,EACb9K,KAAMA,EACNse,YAAaA,EACbC,eAAgBA,+BCrLnB6D,OArGf,SAAmBljB,GAAY,IAAR4Q,EAAI5Q,EAAJ4Q,KACnBgK,EAA8C1c,IAAMiD,UAAS,GAAM0Z,EAAAxZ,YAAAuZ,EAAA,GAA5DuI,EAAetI,EAAA,GAAEuI,EAAkBvI,EAAA,GAC1CU,EAAsDrd,IAAMiD,UAAS,GAAMqa,EAAAna,YAAAka,EAAA,GAApE8H,EAAmB7H,EAAA,GAAE8H,EAAsB9H,EAAA,GAClDC,EAAsCvd,IAAMiD,SAAS,IAAGua,EAAAra,YAAAoa,EAAA,GAAjD7P,EAAW8P,EAAA,GAAE6H,EAAc7H,EAAA,GAClCC,EAAkCzd,IAAMiD,UAAS,GAAMya,EAAAva,YAAAsa,EAAA,GAAhDI,EAASH,EAAA,GAAEI,EAAYJ,EAAA,GAC9BC,EAAsC3d,IAAMiD,SAAS,IAAG2a,EAAAza,YAAAwa,EAAA,GAAjD2H,EAAW1H,EAAA,GAAE2H,EAAc3H,EAAA,GAClCoB,EAAsChf,IAAMiD,SAAS,IAAGgc,EAAA9b,YAAA6b,EAAA,GAAjDwG,EAAWvG,EAAA,GAAEwG,EAAcxG,EAAA,GA8BlC,OACIjf,IAAAC,cAACC,KAAS,KACNF,IAAAC,cAAAD,IAAAiI,SAAA,KACAjI,IAAAC,cAACwc,KAAM,KAAC,4BACRzc,IAAAC,cAACwc,KAAM,CAACjF,KAAK,SAAQ,iCAEjBxX,IAAAC,cAACyC,KAAM,CAACyd,QAAQ,QAAQrZ,QAAS,kBAAMoe,GAAmB,KAAO,iBAIrEllB,IAAAC,cAACylB,KAAO,CAACC,UAAQ,GAAEjT,EAAKhF,aACxB1N,IAAAC,cAAC8R,KAAK,CAACE,KAAMgT,EAAiBzN,KAAK,QAC/BxX,IAAAC,cAAC8R,KAAM0K,OAAM,KAAC,8CACdzc,IAAAC,cAAC8R,KAAM6T,QAAO,KACV5lB,IAAAC,cAACuC,KAAK,CACFuU,YAAY,yDACZjZ,MAAO4P,EACP9O,SAAU,SAACwD,GAAC,OAAKijB,EAAejjB,EAAEK,OAAO3E,QACzC+nB,OAAK,KAGb7lB,IAAAC,cAAC8R,KAAM+T,QAAO,KACV9lB,IAAAC,cAACyC,KAAM,CAACoE,QAAS,kBAAMoe,GAAmB,KAAQ,gBAClDllB,IAAAC,cAACyC,KAAM,CAACoE,QAnDxB,WACIgX,GAAa,GACbpL,EAAKqT,cAAc,CACfrY,gBACDrP,KAAK,WACJgnB,EAAe,IACfH,GAAmB,GACnBpH,GAAa,MA4C0BM,QAASP,GAAY,mBAK5D7d,IAAAC,cAAAD,IAAAiI,SAAA,KACIjI,IAAAC,cAACwc,KAAM,CAACjF,KAAK,SAAQ,2BAEjBxX,IAAAC,cAACyC,KAAM,CAACyd,QAAQ,QAAQrZ,QAAS,kBAAOse,GAAuB,KAAO,iBAI1EplB,IAAAC,cAACylB,KAAO,CAACC,UAAQ,GAAC,YAClB3lB,IAAAC,cAAC8R,KAAK,CAACyF,KAAK,OAAOvF,KAAMkT,GACrBnlB,IAAAC,cAAC8R,KAAM0K,OAAM,KAAC,8CACdzc,IAAAC,cAAC8R,KAAM6T,QAAO,KACV5lB,IAAAC,cAACwc,KAAM,CAACjF,KAAK,SAAQ,4BACrBxX,IAAAC,cAACuC,KAAK,CACFuU,YAAY,iCACZjZ,MAAOwnB,EACP1mB,SAAU,SAACwD,GAAC,OAAKmjB,EAAenjB,EAAEK,OAAO3E,QACzC+nB,OAAK,IAET7lB,IAAAC,cAACwc,KAAM,CAACjF,KAAK,SAAQ,sBACrBxX,IAAAC,cAACuC,KAAK,CACFuU,YAAY,iCACZjZ,MAAO0nB,EACP5mB,SAAU,SAACwD,GAAC,OAAKqjB,EAAerjB,EAAEK,OAAO3E,QACzC+nB,OAAK,KAIb7lB,IAAAC,cAAC8R,KAAM+T,QAAO,KACd9lB,IAAAC,cAACyC,KAAM,CAACoE,QAAS,kBAAMse,GAAuB,KAAQ,gBACtDplB,IAAAC,cAACyC,KAAM,CAACoE,QA1ExB,WACIgX,GAAa,GACb,IAAMkI,EAAa9pB,EAASmB,KAAK4oB,kBAAkBD,WAC/CtT,EAAKL,MAAOiT,GAEhB5S,EAAKwT,6BAA6BF,GAAY3nB,KAAK,WAC/CqU,EAAKyT,eAAeX,GAAannB,KAAK,WAClC+mB,GAAuB,GACvBG,EAAe,IACfE,EAAe,IACf3H,GAAa,QAgE0BM,QAASP,GAAY,qBC/F7DuI,OANf,WACI,MACI,sECCO,SAASC,GAAUvkB,GAAU,IAAP6O,EAAG7O,EAAH6O,IACjC,OACI3Q,IAAAC,cAAA,OAAKE,UAAWC,KAAOnE,UACnB+D,IAAAC,cAAA,UAAQqmB,YAAY,IAAI3V,IAAKA,EAAK4V,gBAAgB,OAAOjI,MAAM,0CCyC5DkI,OAvCf,WACI,IAAAxjB,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/B0P,EAAIxP,EAAA,GAAEmR,EAAOnR,EAAA,GAQpB,OANAlD,IAAM0D,UAAU,WACZxH,EAASmB,OAAO6V,mBAAmB,SAAC0J,GACpCvI,EAAQuI,OAKR5c,IAAAC,cAACC,KAAS,CAACG,MAAO,CAAEyQ,MAAO,OAAQvQ,OAAQ,UAE3CP,IAAAC,cAACuR,KAAI,CAACxV,UAAQ,EAACqE,MAAO,CAAEomB,UAAW,SAC/BzmB,IAAAC,cAAA,OAAKE,UAAWC,KAAOrE,aAAcsE,MAAO,CAAEqmB,WAAW,SAAU,OAEvE1mB,IAAAC,cAACuR,KAAI,CAACxV,UAAQ,EAACqE,MAAO,CAAEomB,UAAW,SAC/BzmB,IAAAC,cAAA,OAAKE,UAAWC,KAAOrE,aAAcsE,MAAO,CAAEqmB,WAAW,SAAU,cAEvE1mB,IAAAC,cAACuR,KAAI,CAACxV,UAAQ,EAACqE,MAAO,CAAEomB,UAAW,SAC9B/T,EACG1S,IAAAC,cAAAD,IAAAiI,SAAA,MAEJjI,IAAAC,cAACyC,KAAM,CAACC,MAAM,WAAW6U,KAAK,QAAQuF,GAAIpU,IAAMC,GAAI,WAAU,0CAGlE5I,IAAAC,cAACuR,KAAI,CAACxV,UAAQ,EAACqE,MAAO,CAAEomB,UAAW,SAC/BzmB,IAAAC,cAACuR,KAAKE,OAAM,CAACZ,MAAO,IAChB9Q,IAAAC,cAAComB,GAAU,CACP1V,IAAI,uDACJgW,UAAQ,EACR7V,MAAM,aCiCX8V,OA9Df,WACE,IAAA5jB,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BuF,EAAKrF,EAAA,GAAEsF,EAAQtF,EAAA,GACtBE,EAAkCH,mBAAS,IAAGI,EAAAF,YAAAC,EAAA,GAAvC/B,EAASgC,EAAA,GAAEoF,EAAYpF,EAAA,GAE9B,OAAIkF,EAAMnM,OAAS,EAEf4D,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAkB,GAClDR,IAAAC,cAACyI,IAAS,KAENH,EAAMjJ,IAAI,SAAAoC,GAAI,OACZ1B,IAAAC,cAAC0I,IAAI,CAAC9K,IAAK6D,EAAK/B,GAAIiJ,GAAE,SAAAxE,OAAW1C,EAAK/B,KACpCK,IAAAC,cAAC4I,IAAa,CACZC,IAAI,SACJC,QAAM,GAELrH,EAAKkC,WASI,IAAjB2E,EAAMnM,OACN4D,IAAAC,cAAC+I,IAAQ,CAACJ,GAAE,SAAAxE,OAAWmE,EAAM,GAAG5I,MAIrCK,IAAAC,cAACF,EAAiB,CAACO,SAAU,IAAKE,kBAAkB,GAClDR,IAAAC,cAAA,MAAIE,UAAWC,KAAOrE,cAAc,kBACpCiE,IAAAC,cAACiC,IAAI,CACH/B,UAAU,OACVgC,SAAU,SAACC,GACTA,EAAEC,iBACF6F,EAAqB7G,GAAWhD,KAAKmK,KAGvCxI,IAAAC,cAACqC,IAAS,KACRtC,IAAAC,cAACsC,IAAK,CAAC0G,IAAI,aAAY,6BACvBjJ,IAAAC,cAACuC,IAAK,CAAC7C,GAAG,YAAYiD,KAAK,SAAS9E,MAAOuD,EAAWzC,SAAU,SAAAwD,GAAC,OAAIqG,EAAarG,EAAEK,OAAO3E,WAE7FkC,IAAAC,cAACyC,IAAM,CACLC,MAAM,UACNoE,UAAW1F,EACXuB,KAAK,UACN,6BAKH5C,IAAAC,cAAA,SAAOiJ,QAAM,GAAC,oCAEZlJ,IAAAC,cAAC0I,IAAI,CAACC,GAAG,UAAS,cCoBbie,OA3Cf,WACE,IAAAnK,EAAwB1c,IAAMiD,SAAS,MAAK0Z,EAAAxZ,YAAAuZ,EAAA,GAArChK,EAAIiK,EAAA,GAAEtI,EAAOsI,EAAA,GAMpB,OALA3c,IAAM0D,UAAU,WACdxH,EAASmB,OAAO6V,mBAAmB,SAAC0J,GAClCvI,EAAQuI,OAIV5c,IAAAC,cAAC6mB,IAAU,KACT9mB,IAAAC,cAACwc,GAAM,MACLzc,IAAAC,cAAA,OAAKE,UAAU,OACbH,IAAAC,cAAC8mB,IAAM,KAEL/mB,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,SAASslB,QAASjnB,IAAAC,cAAC+T,GAAU,MAAInW,IAAKmW,GAAWrU,KAC7DK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,IAAIulB,OAAK,EAACD,QAASjnB,IAAAC,cAACumB,GAAQ,MAAI3oB,IAAK2oB,GAAS7mB,KAC1DK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,UAAUulB,OAAK,EAACD,QAASjnB,IAAAC,cAACid,GAAM,MAAKrf,IAAKqf,GAAOvd,KAC7DK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,UAAUulB,OAAK,EAACD,QAASjnB,IAAAC,cAAC2mB,GAAK,QAE3C5mB,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,iBAAiBslB,QAASjnB,IAAAC,cAACiR,GAAU,MAAKrT,IAAKqT,GAAWvR,KACtEK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,6BAA6BslB,QAASjnB,IAAAC,cAAC+G,EAAW,MAAKnJ,IAAKmJ,EAAYrH,KACpFK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,gBAAgBslB,QAASjnB,IAAAC,cAAC4C,EAAS,MAAKhF,IAAKgF,EAAUlD,KACnEK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,QAAQslB,QAASjnB,IAAAC,cAACiY,GAAa,MAAKra,IAAKqa,GAAcvY,KACnEK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,gBAAgBslB,QAASjnB,IAAAC,cAACkV,GAAe,MAAKtX,IAAKsX,GAAgBxV,KAC/EK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,iBAAiBslB,QAASjnB,IAAAC,cAACwX,GAAgB,MAAK5Z,IAAK4Z,GAAiB9X,KAClFK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,SAASulB,OAAK,EAACD,QAASjnB,IAAAC,cAAC2U,GAAY,MAAK/W,IAAK+W,GAAajV,KACxEK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,WAAWslB,QAASjnB,IAAAC,cAACqI,EAAS,MAAKzK,IAAKyK,EAAU3I,KAE9DK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,YAAYulB,OAAK,EAACD,QAASjnB,IAAAC,cAACoe,GAAO,MAAKxgB,IAAKwgB,GAAQ1e,KACjEK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,QAAQulB,OAAK,EAACD,QAASjnB,IAAAC,cAACuhB,GAAI,MAAK3jB,IAAK2jB,GAAK7hB,KACvDK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,YAAYulB,OAAK,EAACD,QAASjnB,IAAAC,cAAC+kB,GAAU,CAACtS,KAAMA,IAAS7U,IAAKmnB,GAAWrlB,KAClFK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,WAAWulB,OAAK,EAACD,QAASjnB,IAAAC,cAACmmB,GAAO,MAAIvoB,IAAKuoB,GAAQzmB,KAE/DK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,kCAAkCslB,QAASjnB,IAAAC,cAACqZ,GAAoB,MAAIzb,IAAKyb,GAAqB3Z,KAC1GK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,kCAAkCslB,QAASjnB,IAAAC,cAACuc,GAAoB,MAAK3e,IAAK2e,GAAqB7c,KAC3GK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,8BAA8BslB,QAASjnB,IAAAC,cAACgc,GAAiB,MAAKpe,IAAKoe,GAAkBtc,KACjGK,IAAAC,cAAC+mB,IAAK,CAACrlB,KAAK,oCAAoCslB,QAASjnB,IAAAC,cAAC4a,GAAoB,MAAKhd,IAAKgd,GAAqBlb,gBClEzHwnB,IAASC,OAAOpnB,IAAAC,cAAC4mB,GAAG,MAAKQ,SAASC,eAAe","file":"static/js/main.4a26a74d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_heading\":\"styles_hero_heading__2bf5D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_heading\":\"styles_hero_heading__3G9nH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centered\":\"styles_centered__2VJdW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videobox\":\"RwdYoutube_videobox__3qM6I\"};","import firebase from 'firebase/compat/app';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAUlqVFqNfKTY34UCA0_jt9kHlTqMgDzi0\",\r\n    authDomain: \"ar-classroom-1bb48.firebaseapp.com\",\r\n    projectId: \"ar-classroom-1bb48\",\r\n    storageBucket: \"ar-classroom-1bb48.appspot.com\",\r\n    messagingSenderId: \"801778279327\",\r\n    appId: \"1:801778279327:web:e63f67b115057a5e2c53aa\",\r\n    measurementId: \"G-DEC44C4SPG\"\r\n  };\r\n\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n    // firebase.firestore.setLogLevel('debug');\r\n  }\r\n\r\n\r\nexport default firebase;","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth'\r\n\r\nconst REACT_APP_FIREBASE_CONFIG = {\r\n    apiKey: \"AIzaSyAUlqVFqNfKTY34UCA0_jt9kHlTqMgDzi0\",\r\n    authDomain: \"ar-classroom-1bb48.firebaseapp.com\",\r\n    projectId: \"ar-classroom-1bb48\",\r\n    storageBucket: \"ar-classroom-1bb48.appspot.com\",\r\n    messagingSenderId: \"801778279327\",\r\n    appId: \"1:801778279327:web:e63f67b115057a5e2c53aa\",\r\n    measurementId: \"G-DEC44C4SPG\"\r\n};\r\n\r\n//const FIREBASE_CONFIG = REACT_APP_FIREBASE_CONFIG;\r\n\r\n\r\nclass BaseStore {\r\n  constructor(props) {\r\n    // workaround to prevent initializing multiple times\r\n    if(firebase.apps !== undefined){\r\n      if (!firebase.apps.length) {\r\n        firebase.initializeApp(REACT_APP_FIREBASE_CONFIG);\r\n        // firebase.firestore.setLogLevel('debug');\r\n      }\r\n    }\r\n    \r\n\r\n    this.firestore = firebase.firestore();\r\n    this.auth = firebase.auth();\r\n  }\r\n}\r\n\r\nexport default BaseStore;\r\n","import BaseStore from './BaseStore';\r\n\r\nclass PlayerStore extends BaseStore {\r\n  get(playerId, scopes = {}) {\r\n    return this.firestore\r\n      .collection('games')\r\n      .doc(scopes.gameId)\r\n      .collection('players')\r\n      .doc(playerId)\r\n      .get()\r\n      .then(this._convertDocToPlayer)\r\n  }\r\n\r\n  create(attributes = {}) {\r\n    let chain = this.firestore;\r\n    if ('gameId' in attributes) {\r\n      const gameId = attributes.gameId;\r\n      delete attributes.gameId;\r\n\r\n      chain = chain.collection('games').doc(gameId).collection('players');\r\n    }\r\n\r\n    return chain\r\n      .add(attributes)\r\n      .then(playerRef => playerRef.get())\r\n      .then(this._convertDocToPlayer)\r\n  }\r\n\r\n  list(scopes = {}, onChange) {\r\n    let chain = this.firestore;\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId);\r\n    }\r\n    chain = chain.collection('players');\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    if (onChange !== undefined) {\r\n      return chain.onSnapshot(playersSnapshot => {\r\n        let players = [];\r\n        playersSnapshot.forEach(playerDoc => players.push(this._convertDocToPlayer(playerDoc)));\r\n        onChange(players);\r\n      });\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((p) => this._convertDocToQuestion(p)))\r\n  }\r\n\r\n  _convertDocToPlayer(playerDoc) {\r\n    return Object.assign({ id: playerDoc.id }, playerDoc.data());\r\n  }\r\n}\r\n\r\nexport default PlayerStore;\r\n","import PlayerStore from '../store/PlayerStore';\r\n\r\n\r\nconst addPlayer = (attributes) => {\r\n  return new PlayerStore().create(attributes);\r\n};\r\n\r\nexport default addPlayer;\r\n","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nimport styles from './styles.module.css';\r\n\r\n/**\r\n * Vertically and horizontally centered container. Parent height should be 100%.\r\n */\r\nconst CenteredContainer = props => {\r\n  return (\r\n    <Container className={styles.centered} style={{ maxWidth: props.maxWidth || null, height: props.verticalCentered ? \"100%\" : null }}>\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CenteredContainer;\r\n\r\n","export default class Game {\r\n  static get STATE_DRAFT() { return 'draft' }\r\n  static get STATE_WAITING_FOR_PLAYERS() { return 'waitingForPlayers' }\r\n}\r\n","import BaseStore from './BaseStore';\r\nimport Game from '../entities/Game';\r\n\r\n\r\nclass GameStore extends BaseStore {\r\n  create(attributes = {}) {\r\n    return this.firestore\r\n      .collection('games')\r\n      .add(Object.assign({ state: Game.STATE_DRAFT }, attributes))\r\n      .then(ref => ref.get())\r\n      .then(this._convertDocToGame)\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {String} gameId\r\n   * @param {Function} onChange - if provided, will trigger when Game is updated\r\n   * @returns\r\n   * @memberof GameStore\r\n   */\r\n  get(gameId, onChange) {\r\n    const doc = this._getGameDoc(gameId)\r\n\r\n    if (onChange !== undefined) {\r\n      return doc.onSnapshot(gameDoc => onChange(this._convertDocToGame(gameDoc)));\r\n    }\r\n\r\n    return doc.get().then(this._convertDocToGame);\r\n  }\r\n\r\n  list(scopes = {}) {\r\n    let chain = this.firestore.collection('games');\r\n\r\n    if ('ownerId' in scopes) {\r\n      // FIXME: ideally this would be independent of the gameId\r\n      chain = chain.where(\"ownerId\", \"==\", scopes.ownerId);\r\n    }\r\n\r\n    if ('state' in scopes) {\r\n      chain = chain.where(\"state\", \"==\", scopes.state);\r\n    }\r\n\r\n    if ('shortCode' in scopes) {\r\n      chain = chain.where(\"shortCode\", \"==\", scopes.shortCode);\r\n    }\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToGame(a)))\r\n  }\r\n\r\n  update(gameId, attributes) {\r\n    const doc = this._getGameDoc(gameId);\r\n\r\n    if ('currentQuestionId' in attributes) {\r\n      attributes.currentQuestion = doc.collection('questions').doc(attributes.currentQuestionId);\r\n      delete attributes.currentQuestionId;\r\n    }\r\n\r\n    return doc.update(attributes);\r\n  }\r\n\r\n  _getGameDoc(gameId) {\r\n    return this.firestore\r\n      .collection('games')\r\n      .doc(gameId);\r\n  }\r\n\r\n  _convertDocToGame(gameDoc) {\r\n    let game = Object.assign({ id: gameDoc.id }, gameDoc.data());\r\n    if ('currentQuestion' in game) {\r\n      game.currentQuestionId = game.currentQuestion.id;\r\n      game.currentQuestion = game.currentQuestion.path;  // TODO: remove this\r\n    }\r\n    return game;\r\n  }\r\n}\r\n\r\nexport default GameStore;\r\n","import GameStore from '../store/GameStore';\r\n\r\n\r\nconst getGame = (gameId, onChange) => {\r\n  return new GameStore().get(gameId, onChange);\r\n};\r\n\r\nexport default getGame;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Button, FormGroup, Label, Input, Form } from 'reactstrap';\r\nimport firebase from \"../utils/firebase\";\r\n\r\nimport addPlayer from '../use_cases/addPlayer';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport getGame from '../use_cases/getGame';\r\n\r\n\r\n\r\nconst JoinForm = ({ playerName, setPlayerName, joinGame }) => {\r\n  return (\r\n    <Form onSubmit={e => {\r\n      e.preventDefault();\r\n      joinGame();\r\n    }}>\r\n      <FormGroup>\r\n        <Label>輸入你的暱稱:</Label>\r\n        <Input\r\n          value={playerName}\r\n          onChange={e => setPlayerName(e.target.value)}\r\n        />\r\n      </FormGroup>\r\n      <Button color=\"primary\" type=\"submit\">加入房間</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst JoinRoute = () => {\r\n  let { gameId } = useParams();\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [playerId, setPlayerId] = useState('');\r\n  const [game, setGame] = useState(null);\r\n  let playUrl = \"\";\r\n\r\n  useEffect(() => {\r\n    if (playerId) {\r\n      const db = firebase.firestore();\r\n      const sidCollection = db.collection('SID'); \r\n\r\n      sidCollection.doc(playerId).set({\r\n        name: playerName,\r\n        id: playerId\r\n      })\r\n      .then(() => {\r\n        console.log(\"Player data stored in Firestore!\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error storing player data: \", error);\r\n      });\r\n    }\r\n  }, [playerId, playerName]);\r\n\r\n  useEffect(() => {\r\n    if (gameId && game === null) {\r\n      getGame(gameId).then(setGame);\r\n    }\r\n  }, [gameId, game])\r\n\r\n  playUrl =  \"?playUrl=/play/\" + gameId + \"/as/\" + playerId;\r\n\r\n  const redirectToPlay = () => {\r\n    window.location.replace(`/AR-classroom/#/draw${playUrl}`);\r\n  };\r\n\r\n  return (\r\n    <CenteredContainer maxWidth={500} verticalCentered>\r\n      <h1>{game ? game.name : null}</h1>\r\n      {playerId ? (\r\n          redirectToPlay()\r\n       ) : (\r\n          <JoinForm\r\n            playerName={playerName}\r\n            setPlayerName={setPlayerName}\r\n            joinGame={() => addPlayer({ name: playerName, gameId }).then(p => setPlayerId(p.id))}\r\n          />\r\n      )}\r\n    </CenteredContainer>\r\n  )\r\n  \r\n}\r\n\r\nexport default JoinRoute\r\n","import PlayerStore from '../store/PlayerStore';\r\n\r\n\r\nconst getPlayer = (playerId, scopes = {}) => {\r\n  return new PlayerStore().get(playerId, scopes);\r\n};\r\n\r\nexport default getPlayer;\r\n","import BaseStore from './BaseStore';\r\n\r\nclass AnswerStore extends BaseStore {\r\n  /**\r\n   * Creates an Answer.\r\n   *\r\n   * @param {Object} attributes - `gameId` will be used to nest the subcollection\r\n   *  and generate a fully qualified reference for `playerId` and `questionId`\r\n   * @returns Object - an \"Answer\" object\r\n   * @memberof AnswerStore\r\n   */\r\n  create(attributes) {\r\n    const gameId = this._popAttr(attributes, 'gameId');\r\n    const playerId = this._popAttr(attributes, 'playerId');\r\n    const questionId = this._popAttr(attributes, 'questionId');\r\n\r\n    const subcollection = this.firestore\r\n      .collection('games')\r\n      .doc(gameId)\r\n      .collection('answers');\r\n\r\n    return subcollection\r\n      .add(Object.assign({\r\n        player: this.firestore.doc(['/games', gameId, 'players', playerId].join('/')),\r\n        question: this.firestore.doc(['/games', gameId, 'questions', questionId].join('/'))\r\n      }, attributes))\r\n      .then(answerRef => answerRef.get())\r\n      .then(this._convertDocToAnswer)\r\n  }\r\n\r\n  list(scopes = {}) {\r\n    let chain = this.firestore;\r\n\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId);\r\n    }\r\n    chain = chain.collection('answers');\r\n\r\n    if ('questionId' in scopes) {\r\n      // FIXME: ideally this would be independent of the gameId\r\n      chain = chain.where(\"question\", \"==\", this.firestore.doc(`games/${scopes.gameId}/questions/${scopes.questionId}`));\r\n    }\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToAnswer(a)))\r\n  }\r\n\r\n  _convertDocToAnswer(answerDoc) {\r\n    return Object.assign({ id: answerDoc.id }, answerDoc.data());\r\n  }\r\n\r\n  _popAttr(obj, attr) {\r\n    const val = obj[attr];\r\n    delete obj[attr];\r\n    return val;\r\n  }\r\n}\r\n\r\nexport default AnswerStore;\r\n","export function popKey(obj, key) {\r\n  const value = obj[key];\r\n  delete obj[key];\r\n  return value;\r\n}\r\n","import BaseStore from './BaseStore';\r\nimport { popKey } from '../utils/popKey';\r\n\r\nclass QuestionStore extends BaseStore {\r\n  /**\r\n   * Retrieves a Question from the store\r\n   *\r\n   * @param {string} questionId - if a scope is not provided, this must be a\r\n   *   fully qualified ref, as there is no top-level questions collection.\r\n   * @param {Object} [scopes={}]\r\n   * @returns Object\r\n   * @memberof QuestionStore\r\n   */\r\n  get(questionId, scopes = {}) {\r\n    let chain = this.firestore;\r\n    let addAttrs = {};\r\n\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\r\n      addAttrs['gameId'] = scopes.gameId;\r\n    }\r\n\r\n    return chain\r\n      .doc(questionId)\r\n      .get()\r\n      .then(questionDoc => this._convertDocToQuestion(questionDoc, addAttrs));\r\n  }\r\n\r\n  create(attributes) {\r\n    let attributesCopy = Object.assign({}, attributes);\r\n    const gameId = popKey(attributesCopy, 'gameId');\r\n\r\n    let collection = this.firestore.collection('games').doc(gameId).collection('questions');\r\n\r\n    return collection\r\n      .add(attributesCopy)\r\n      .then(qnRef => qnRef.get())\r\n      .then(qnDoc => this._convertDocToQuestion(qnDoc, { gameId }));\r\n  }\r\n\r\n  /**\r\n   * Update an object\r\n   *\r\n   * @param {String} questionId\r\n   * @param {Object} attributes\r\n   * @returns Promise<void>\r\n   * @memberof QuestionStore\r\n   */\r\n  update(questionId, attributes) {\r\n    let attributesCopy = Object.assign({}, attributes);\r\n    const gameId = popKey(attributesCopy, 'gameId');\r\n\r\n    let doc = this.firestore.collection('games').doc(gameId).collection('questions').doc(questionId);\r\n\r\n    return doc.update(attributesCopy);\r\n  }\r\n\r\n  list(scopes = {}) {\r\n    let chain = this.firestore;\r\n    let addAttrs = {};\r\n\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\r\n      addAttrs['gameId'] = scopes.gameId;\r\n    }\r\n    if ('from' in scopes) {\r\n      chain = chain.where(\"order\", \">\", scopes.from);\r\n    }\r\n\r\n    chain = chain.orderBy(\"order\");\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((q) => this._convertDocToQuestion(q, addAttrs)));\r\n  }\r\n\r\n  _convertDocToQuestion(questionDoc, addAttributes = {}) {\r\n    return Object.assign({ id: questionDoc.id }, questionDoc.data(), addAttributes);\r\n  }\r\n}\r\n\r\nexport default QuestionStore;\r\n","import GameStore from '../store/GameStore';\r\nimport AnswerStore from '../store/AnswerStore';\r\nimport QuestionStore from '../store/QuestionStore';\r\n\r\n\r\n/**\r\n * Saves an Answer.\r\n *\r\n * @param {Object} attributes\r\n * @returns Object - an \"Answer\"\r\n */\r\nconst addAnswer = (attributes) => {\r\n  const questionStore = new QuestionStore();\r\n  const timestamp = new Date().getTime();\r\n\r\n  return new GameStore()\r\n    .get(attributes.gameId)\r\n    .then(game => {\r\n      return questionStore.get(game.currentQuestionId, { gameId: game.id });\r\n    })\r\n    .then(question => {\r\n      attributes.isCorrect = question.correctAnswer === attributes.choice;\r\n      attributes.questionId = question.id;\r\n      attributes.timestamp = timestamp;\r\n      console.log(attributes)\r\n      return new AnswerStore().create(attributes);\r\n    })\r\n};\r\n\r\nexport default addAnswer;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Button, Row, Col, Alert } from 'reactstrap';\r\n\r\nimport getPlayer from '../use_cases/getPlayer';\r\nimport addAnswer from '../use_cases/addAnswer';\r\nimport getGame from '../use_cases/getGame';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\nconst SECONDS_TO_CHOOSE = 3;\r\n\r\n\r\nconst AnswerGrid = ({ recordAnswer, isAnswerDisabled }) => {\r\n  return (\r\n    <Row>\r\n      {\r\n        ['A', 'B', 'C', 'D'].map((ans) =>\r\n          <Col sm={12} md={6} className=\"mb-4\" key={ans}>\r\n            <Button\r\n              className=\"w-100 h-100\"\r\n              onClick={() => recordAnswer(ans)}\r\n              disabled={isAnswerDisabled}>\r\n                <strong>{ans}</strong>\r\n            </Button>\r\n          </Col>\r\n        )\r\n      }\r\n    </Row>\r\n  )\r\n}\r\n\r\nconst PlayerRoute = () => {\r\n  let { gameId, playerId } = useParams()\r\n  const [currentGame, setCurrentGame] = useState();\r\n  const [playerName, setPlayerName] = useState('')\r\n  const [answer, setAnswer] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [isAnswerDisabled, setIsAnswerDisabled] = useState(false);\r\n\r\n  const handleGameChange = (game) => {\r\n    if (game) {\r\n      // workaround to clear answer\r\n      setAnswer(null);\r\n      setCurrentGame(game);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (gameId && playerId) {\r\n      getGame(gameId, handleGameChange);\r\n      getPlayer(playerId, { gameId })\r\n        .then(player => setPlayerName(player.name))\r\n    }\r\n  }, [gameId, playerId])\r\n\r\n  const recordAnswer = ans => {\r\n    // playerName is for convenience later, though it feels a little like this knows more about the store than it should\r\n    if (isAnswerDisabled) {\r\n      // If answer selection is disabled, do nothing\r\n      return;\r\n    }\r\n    setIsAnswerDisabled(true); // Disable answer selection\r\n    addAnswer({ playerId, playerName, gameId, choice: ans })\r\n      .then(answer => {\r\n        setAnswer(answer);\r\n        setTimeout(() => {\r\n          setAnswer(null); // Clear the answer after the timeout\r\n          setIsAnswerDisabled(false); // Enable answer selection after the timeout\r\n        }, SECONDS_TO_CHOOSE * 1000);\r\n      })\r\n      .catch(e => {\r\n        setErrorMessage(e);\r\n        setTimeout(() => {\r\n          setErrorMessage('');\r\n          setIsAnswerDisabled(false); // Enable answer selection after an error\r\n        }, 5000);\r\n      });\r\n    }\r\n\r\n  switch (currentGame ? currentGame.state : null) {\r\n    case 'pendingQuestion':\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          準備回答下一題...請看投影喔!\r\n        </CenteredContainer>\r\n      )\r\n    case 'showingQuestion':\r\n      /*if (answer) {\r\n        return (\r\n          <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n            你選了 {answer.choice}!\r\n          </CenteredContainer>\r\n        )\r\n      }*/\r\n\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          <Row className=\"mb-4\">\r\n            <Col sm={12}>\r\n              <h2>Hi {playerName}!</h2>\r\n              <h3>看投影選擇答案:</h3>\r\n            </Col>\r\n          </Row>\r\n          <AnswerGrid recordAnswer={recordAnswer} isAnswerDisabled={isAnswerDisabled}/>\r\n          {errorMessage ? <Alert color=\"danger\">{errorMessage}</Alert> : null}\r\n          {answer && isAnswerDisabled ? (\r\n            \r\n            <Row className=\"mb-4\">\r\n              <Col sm={12}>\r\n                <h2>你選了 {answer.choice}!</h2>                \r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <></>\r\n          )\r\n          }\r\n          \r\n        </CenteredContainer>\r\n      );\r\n    case 'showingQuestionResults':\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          <div>顯示回答結果...請看投影喔!</div>\r\n        </CenteredContainer>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          等待課程開始...開始後請看投影喔!\r\n        </CenteredContainer>\r\n      )\r\n  }\r\n}\r\n\r\nexport default PlayerRoute\r\n","import GameStore from '../store/GameStore';\r\nimport Game from '../entities/Game';\r\n\r\n\r\nconst findGamesByShortCode = (shortCode) => {\r\n  return new GameStore().list({ shortCode: String(shortCode), state: Game.STATE_WAITING_FOR_PLAYERS });\r\n};\r\n\r\nexport default findGamesByShortCode;\r\n","import React, { useState } from 'react'\r\nimport { Link, Navigate } from \"react-router-dom\"\r\nimport { Button, Form, FormGroup, Label, Input, ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nimport CenteredContainer from '../../view_components/CenteredContainer';\r\nimport styles from './styles.module.css'\r\nimport findGamesByShortCode from '../../use_cases/findGamesByShortCode';\r\n\r\n\r\nconst HomeRoute = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [shortCode, setShortCode] = useState('');\r\n\r\n  if (games.length > 1) {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n        <ListGroup>\r\n          {\r\n            games.map(game => (\r\n              <Link key={game.id} to={`/join/${game.id}`}>\r\n                <ListGroupItem\r\n                  tag=\"button\"\r\n                  action\r\n                >\r\n                  {game.name}\r\n                </ListGroupItem>\r\n              </Link>\r\n            ))\r\n          }\r\n        </ListGroup>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n  else if (games.length === 1) {\r\n    return <Navigate to={`/join/${games[0].id}`} />;\r\n  }\r\n  else {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n        <h1 className={styles.hero_heading}>Cahoots!</h1>\r\n        <Form\r\n          className=\"mb-5\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            findGamesByShortCode(shortCode).then(setGames);\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <Label for=\"shortCode\">房間代碼:</Label>\r\n            <Input id=\"shortCode\" type=\"number\" value={shortCode} onChange={e => setShortCode(e.target.value)} />\r\n          </FormGroup>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!shortCode}\r\n            type=\"submit\"\r\n          >\r\n            加入房間\r\n          </Button>\r\n        </Form>\r\n        \r\n        <Link to={`/games`}>\r\n          <Button color=\"primary\" > \r\n            建立課程\r\n          </Button>\r\n        </Link>\r\n        <aside hidden>\r\n          Want to create your own quiz?&nbsp;\r\n          <Link to=\"/login\">\r\n            Sign Up\r\n          </Link>\r\n        </aside>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeRoute\r\n","import PlayerStore from '../store/PlayerStore';\r\nimport GameStore from '../store/GameStore';\r\n\r\n\r\nconst getLobbyPlayers = (gameId, onChange, playerStore = new PlayerStore(), gameStore = new GameStore()) => {\r\n  gameStore.update(gameId, { state: 'waitingForPlayers' });\r\n  return playerStore.list({ gameId }, onChange);\r\n};\r\n\r\nexport default getLobbyPlayers;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport qrcode from \"qrcode\";\r\nimport getLobbyPlayers from '../use_cases/getLobbyPlayers';\r\nimport getGame from '../use_cases/getGame';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport styles from './HomeRoute/styles.module.css'\r\nimport { Grid, Modal } from 'semantic-ui-react';\r\n\r\n\r\nconst PlayerList = ({ players }) => {\r\n  return (\r\n    <ListGroup>\r\n      {\r\n        players.map(player => (\r\n          <ListGroupItem key={player.id}>{player.name}</ListGroupItem>\r\n        ))\r\n      }\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\n\r\nconst QRCode = ({ imageSize }) => {\r\n  //let { gameId } = useParams();\r\n  const [qrcodeData, setQRCodeData] = useState(null);\r\n  const canvasRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n  const currentUrl = window.location.href;\r\n  const QRUrl = currentUrl.replace(\"lobby\", \"join\");\r\n  //console.log(\"c\",currentUrl);\r\n  //console.log(\"QR\",QRUrl);\r\n\r\n  useEffect(() => {\r\n    const generateQRCode = async (url) => {\r\n      try {\r\n        const dataURL = await qrcode.toDataURL(url);\r\n        setQRCodeData(dataURL);\r\n      } catch (error) {\r\n        console.error(\"QR code generation error:\", error);\r\n      }\r\n    };\r\n\r\n    generateQRCode(QRUrl);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (qrcodeData) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const img = new Image();\r\n      img.src = qrcodeData;\r\n\r\n      img.onload = () => {\r\n        // Clear the canvas before drawing\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw the QR code image\r\n        ctx.drawImage(img, 0, 0);\r\n      };\r\n    }\r\n  }, [qrcodeData]);\r\n\r\n  return (\r\n    <div className=\"qr-code-container\">\r\n      <canvas ref={canvasRef} width={imageSize} height={imageSize} style={{ display: 'none' }}/>\r\n      <img ref={imageRef} src={qrcodeData} alt=\"QR Code\" className=\"qr-code-image\" style={{ width: imageSize, height: imageSize }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LobbyRoute = props => {\r\n  let { gameId } = useParams();\r\n  const [players, setPlayers] = useState([]);\r\n  const [game, setGame] = useState(null);\r\n  const joinUrl = `${window.location.origin}/AR-classroom/#/join-s/`;\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (gameId) {\r\n      getLobbyPlayers(gameId, setPlayers);\r\n      getGame(gameId).then(setGame);\r\n    }\r\n  }, [gameId])\r\n\r\n  return (\r\n    <Grid>\r\n      \r\n      <Grid.Row centered columns={2}>\r\n        \r\n        <Grid.Column width={8}>\r\n          <Grid.Row>\r\n          <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n            \r\n            <h2>\r\n              加入遊戲請前往<a href={joinUrl} rel=\"noopener noreferrer\" target=\"_blank\">{joinUrl}</a> \r\n              <br/>輸入房間代碼: \r\n            </h2>\r\n          </CenteredContainer>\r\n          </Grid.Row>\r\n          <Grid.Row verticalAlign='middle'>\r\n            <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n              <br/>\r\n            <h1 className={styles.hero_heading} style={{fontSize:60}}>\r\n              <strong>{game ? game.shortCode : \"___\"}</strong>\r\n            </h1>\r\n            </CenteredContainer>\r\n          </Grid.Row>\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n          <h2>\r\n            或掃描 QR code&nbsp;\r\n            <Button \r\n              outline\r\n              color=\"dark\"\r\n              onClick={() => setIsModalOpen(true)}\r\n            >\r\n              放大\r\n            </Button>\r\n          </h2>\r\n          <Modal basic open={isModalOpen} onClose={() => setIsModalOpen(false)}>\r\n            <Button\r\n              close\r\n              color='primary'\r\n              onClick={() => setIsModalOpen(false)}\r\n            ></Button>\r\n            <CenteredContainer>\r\n              <QRCode imageSize=\"700px\"/>\r\n            </CenteredContainer>\r\n          </Modal>\r\n          \r\n          <QRCode />\r\n        </Grid.Column>\r\n        \r\n      </Grid.Row>\r\n      <Grid.Row centered columns={1}>\r\n        <h1>等待玩家加入...</h1>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n       \r\n            <Link to={`/host/${gameId}/questions/pending`}>\r\n              <Button color=\"primary\">開始</Button>\r\n            </Link>\r\n          \r\n        </CenteredContainer>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n          \r\n          <PlayerList players={players} />\r\n          \r\n        </CenteredContainer>\r\n      </Grid.Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LobbyRoute\r\n","import BaseStore from './BaseStore';\r\n\r\nclass UserStore extends BaseStore {\r\n  create(attributes = {}) {\r\n    const { email, password } = attributes;\r\n\r\n    return this.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const firebaseUser = userCredentials.user;\r\n        return this._convertUser(firebaseUser);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // auth/email-already-in-use\r\n        // auth/invalid-email\r\n        // auth/operation-not-allowed\r\n        if (errorCode === 'auth/weak-password') {\r\n          alert('The password is too weak.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n      });\r\n  }\r\n\r\n  login({ email, password }) {\r\n    return this.auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const firebaseUser = userCredentials.user;\r\n        return this._convertUser(firebaseUser);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // auth/email-already-in-use\r\n        // auth/invalid-email\r\n        // auth/operation-not-allowed\r\n        if (errorCode === 'auth/weak-password') {\r\n          alert('The password is too weak.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n      });\r\n  }\r\n\r\n  onCurrentUserChange(handleChange) {\r\n    this.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        handleChange(this._convertUser(user));\r\n      }\r\n    })\r\n  }\r\n\r\n  _convertUser(firebaseUser) {\r\n    return {\r\n      id: firebaseUser.uid,\r\n      email: firebaseUser.email,\r\n      name: firebaseUser.displayName,\r\n    };\r\n  }\r\n}\r\n\r\nexport default UserStore;\r\n","import UserStore from \"../store/UserStore\";\r\n\r\nconst signupUser = ({ email, password }) => {\r\n  const userStore = new UserStore();\r\n\r\n  return userStore.create({ email, password });\r\n}\r\n\r\nexport default signupUser;\r\n","import UserStore from \"../store/UserStore\";\r\n\r\nconst loginUser = ({ email, password }) => {\r\n  const userStore = new UserStore();\r\n\r\n  return userStore.login({ email, password });\r\n}\r\n\r\nexport default loginUser;\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport signupUser from '../use_cases/signupUser';\r\nimport loginUser from '../use_cases/loginUser';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\nconst handleSubmit = (event, { email, password, authFn, successCallback }) => {\r\n  event.preventDefault();\r\n  authFn({ email, password })\r\n    .then(user => successCallback(user))\r\n}\r\n\r\nconst SignupForm = ({ onUserChange }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  return (\r\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: signupUser, successCallback: onUserChange })}>\r\n      <FormGroup>\r\n        <Label for=\"email\">Email:</Label>\r\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Password:</Label>\r\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n      </FormGroup>\r\n      <Button color=\"primary\">Sign Up</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst LoginForm = ({ onUserChange }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  return (\r\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: loginUser, successCallback: onUserChange })}>\r\n      <FormGroup>\r\n        <Label for=\"email\">Email:</Label>\r\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Password:</Label>\r\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n      </FormGroup>\r\n      <Button color=\"primary\">Login</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst LoginRoute = props => {\r\n  const [isExistingUser, setIsExistingUser] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const toggleForm = event => {\r\n    event.preventDefault();\r\n    setIsExistingUser(!isExistingUser);\r\n  }\r\n\r\n  if (user) {\r\n    return <Navigate to='/games' />\r\n  } else if (isExistingUser) {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered>\r\n        <h1>Login to Cahoots!</h1>\r\n        <LoginForm onUserChange={setUser} />\r\n        <div>\r\n          No account? <br />\r\n          <Button color=\"link\" onClick={toggleForm}>Sign Up!</Button>\r\n        </div>\r\n      </CenteredContainer>\r\n    );\r\n  } else {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered>\r\n        <h1>Signup for Cahoots!</h1>\r\n        <SignupForm onUserChange={setUser} />\r\n        <div>\r\n          Have an account? <br />\r\n          <Button color=\"link\" onClick={toggleForm}>Login</Button>\r\n        </div>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginRoute\r\n","import UserStore from \"../store/UserStore\";\r\n\r\nconst getCurrentUser = () => {\r\n  const userStore = new UserStore();\r\n\r\n  return new Promise(resolve => userStore.onCurrentUserChange(resolve));\r\n}\r\n\r\nexport default getCurrentUser;\r\n","\r\nimport GameStore from \"../store/GameStore\";\r\nimport getCurrentUser from \"./getCurrentUser\";\r\n\r\n\r\nconst getCurrentUserGames = () => {\r\n  const gameStore = new GameStore();\r\n\r\n  return getCurrentUser().then(user => user ? gameStore.list({ ownerId: user.id }) : null);\r\n}\r\n\r\nexport default getCurrentUserGames;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport getCurrentUserGames from '../use_cases/getCurrentUserGames';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst MyGamesRoute = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [redirectUrl, setRedirectUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCurrentUserGames().then(setGames);\r\n  }, []);\r\n\r\n  if (redirectUrl) {\r\n    return <Navigate to={redirectUrl} />;\r\n  } else {\r\n    return (\r\n      <Container style={{maxWidth: \"500px\"}}>\r\n        <h1>我的課程</h1>\r\n        <ListGroup>\r\n          {\r\n            games.map(game => (\r\n              <ListGroupItem\r\n                key={game.id}\r\n                onClick={() => setRedirectUrl(`/games/${game.id}`)}\r\n                tag=\"button\"\r\n                action\r\n              >\r\n                {game.name}\r\n              </ListGroupItem>\r\n            ))\r\n          }\r\n          <ListGroupItem\r\n            onClick={() => setRedirectUrl('/games/create')}\r\n            tag=\"button\"\r\n            color=\"info\"\r\n            action\r\n          >\r\n            創建新課程\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyGamesRoute\r\n","import GameStore from '../store/GameStore';\r\n\r\n\r\nconst createGame = (attributes, gameStore = new GameStore()) => {\r\n  // generate a random shortcode\r\n  const shortCode = String(Math.floor(Math.random() * Math.floor(9999)));\r\n  return gameStore.create(Object.assign({ shortCode }, attributes));\r\n};\r\n\r\nexport default createGame;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport getCurrentUser from '../use_cases/getCurrentUser';\r\nimport createGame from '../use_cases/createGame';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst save = (gameAttributes, onCreate) => {\r\n  return createGame(gameAttributes).then(onCreate);\r\n}\r\n\r\nconst CreateGameRoute = props => {\r\n  const [user, setUser] = useState(null);\r\n  const [gameName, setGameName] = useState('');\r\n  const [game, setGame] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCurrentUser().then(setUser);\r\n  }, []);\r\n\r\n  if (game) {\r\n    return <Navigate to=\"/games\" />;\r\n  } else {\r\n    return (\r\n      <Container style={{maxWidth: \"500px\"}}>\r\n        <h1>創建您的課程</h1>\r\n        <FormGroup>\r\n          <Label for=\"name\">課程名稱:</Label>\r\n          <Input id=\"name\" name=\"name\" value={gameName} onChange={e => setGameName(e.target.value)} />\r\n        </FormGroup>\r\n        <Button color=\"primary\" onClick={() => save({ name: gameName, ownerId: user.id }, setGame)}>確認</Button>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateGameRoute\r\n","import QuestionStore from \"../store/QuestionStore\";\r\n\r\nconst getQuestions = (scopes) => {\r\n  const questionStore = new QuestionStore();\r\n  return questionStore.list(scopes)\r\n};\r\n\r\nexport default getQuestions;\r\n","import QuestionStore from \"../store/QuestionStore\";\r\nimport { popKey } from '../utils/popKey';\r\n\r\n/**\r\n * Creates a new Question or saves an existing one.\r\n *\r\n * @param {Object} attributes - should minimally contain `gameId`. If no `id` is included, is assumed to be a new Question\r\n * @returns Promise - resolves to either Object or void\r\n */\r\nconst saveQuestion = (attributes, questionStore = new QuestionStore()) => {\r\n  let attributesCopy = Object.assign({}, attributes);\r\n\r\n  if ('id' in attributesCopy) {\r\n    const questionId = popKey(attributesCopy, 'id');\r\n    return questionStore.update(questionId, attributesCopy);\r\n  } else {\r\n    return questionStore.create(attributesCopy);\r\n  }\r\n};\r\n\r\nexport default saveQuestion;\r\n","import { doc, deleteDoc } from \"firebase/firestore\";\r\nimport firebase from \"../utils/firebase\";\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst currentUrl = window.location.href;\r\n//console.log(\"u:\", currentUrl);\r\nconst parsedURL = new URL(currentUrl);\r\nconst path = parsedURL.pathname;\r\nconst segments = path.split('/');\r\nconst gameId = segments[segments.length - 1];\r\nconsole.log(\"gameId:\", gameId);\r\n\r\nconst deleteQuestion = async (questionId) => {\r\n    const db = firebase.firestore();\r\n    \r\n    try {\r\n        await deleteDoc(doc(db, 'games', gameId, 'questions', questionId))\r\n        window.location.reload();\r\n    } catch (error) {\r\n        throw new Error('Error deleting question: ' + error.message);\r\n    }\r\n};\r\n\r\nexport default deleteQuestion;\r\n","import React, { useState } from 'react';\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input, Card, CardTitle, Button, Spinner, FormGroup, Label } from 'reactstrap';\r\nimport saveQuestion from '../use_cases/saveQuestion';\r\nimport deleteQuestion from '../use_cases/deleteQuestion';\r\n\r\nconst STATE_DEFAULT = 'default';\r\nconst STATE_SAVING = 'saving';\r\n\r\n\r\nexport const EditableQuestion = ({ question }) => {\r\n  const [draftQuestion, setDraftQuestion] = useState(question)\r\n  const [componentState, setComponentState] = useState(STATE_DEFAULT);\r\n\r\n  const updateDraft = (newAttributes) => {\r\n    setDraftQuestion(Object.assign({}, draftQuestion, newAttributes));\r\n  }\r\n\r\n  const handleDeleteQuestion = async () => {\r\n    setComponentState(STATE_SAVING);\r\n    try {\r\n      await deleteQuestion(draftQuestion.id); // Replace 'draftQuestion.id' with the appropriate way to identify the question in Firebase.\r\n      // Assuming 'deleteQuestion' function deletes the question in Firebase.\r\n      setComponentState(STATE_DEFAULT);\r\n      // Optionally, you can clear the draftQuestion state or handle any other cleanup.\r\n    } catch (error) {\r\n      // Handle any potential errors here.\r\n      console.error(\"Error deleting question\", error);\r\n      setComponentState(STATE_DEFAULT);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Card body className=\"mt-4 mb-4\">\r\n        <CardTitle>\r\n          <InputGroup className=\"mb-2\">\r\n            <Input\r\n              type=\"textarea\"\r\n              placeholder=\"請輸入完整題目\"\r\n              value={draftQuestion.text || ''}\r\n              onChange={e => updateDraft({ text: e.target.value })}\r\n            />\r\n          </InputGroup>\r\n        </CardTitle>\r\n        {['answerA', 'answerB', 'answerC', 'answerD'].map((ansKey) => (\r\n          <InputGroup key={ansKey} className=\"mb-2\">\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText>{ansKey}</InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input\r\n              placeholder=\"請輸入選項\"\r\n              value={ansKey in draftQuestion ? draftQuestion[ansKey] : ''}\r\n              onChange={e => updateDraft({[ansKey]: e.target.value})}\r\n            />\r\n          </InputGroup>\r\n        ))}\r\n        <FormGroup>\r\n          <Label for=\"correctAnswerDropdown\">正確答案</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"correctAnswer\"\r\n            id=\"correctAnswerDropdown\"\r\n            data-testid=\"correctAnswerDropdown\"\r\n            value={draftQuestion.correctAnswer || '選擇正確答案'}\r\n            onChange={e => updateDraft({ correctAnswer: e.target.value })}\r\n          >\r\n            <option>A</option>\r\n            <option>B</option>\r\n            <option>C</option>\r\n            <option>D</option>\r\n            <option hidden>選擇正確答案</option>\r\n          </Input>\r\n        </FormGroup>\r\n        {componentState === STATE_SAVING ?\r\n          <Button disabled color=\"primary\" className=\"mt-4\">\r\n            <Spinner type=\"grow\" size=\"sm\" color=\"info\" className=\"mr-2\" />\r\n            保存中...\r\n          </Button>\r\n          :\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"mt-4\"\r\n            onClick={() => {\r\n              setComponentState(STATE_SAVING);\r\n              saveQuestion(draftQuestion).then(() => setComponentState(STATE_DEFAULT));\r\n            }}\r\n          >\r\n            保存\r\n          </Button>\r\n          \r\n        }\r\n        <Button\r\n          color=\"danger\"\r\n          className=\"mt-4\"\r\n          onClick={handleDeleteQuestion}\r\n          disabled={componentState === STATE_SAVING}\r\n        >\r\n          {componentState === STATE_SAVING ? (\r\n            <>\r\n              <Spinner type=\"grow\" size=\"sm\" color=\"info\" className=\"mr-2\" />\r\n              刪除中...\r\n            </>\r\n          ) : (\r\n            \"刪除題目\"\r\n          )}\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Container } from 'reactstrap';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport getGame from '../use_cases/getGame';\r\nimport getQuestions from '../use_cases/getQuestions';\r\nimport { EditableQuestion } from '../view_components/EditableQuestion';\r\nimport saveQuestion from '../use_cases/saveQuestion';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport { doc, deleteDoc } from \"firebase/firestore\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\n\r\nconst GameDetailsRoute = props => {\r\n  const { gameId } = useParams();\r\n  const [game, setGame] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n  const handleDeleteGame = async () => {\r\n    if (gameId && game) {\r\n      try {\r\n        const db = firebase.firestore();        \r\n        await deleteDoc(doc(db, \"games\", gameId));        \r\n        navigate('/games');\r\n      } catch (error) {\r\n        console.error('刪除遊戲時發生錯誤', error);\r\n        // 在錯誤處理方面，你可以根據需要採取進一步的措施\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (gameId && game === null) {\r\n      getGame(gameId)\r\n        .then(game => {\r\n          setGame(game);\r\n          return game;\r\n        })\r\n        .then(game => getQuestions({ gameId: game.id }))\r\n        .then(setQuestions);\r\n    }\r\n  }, [gameId, game]);\r\n\r\n  if (game) {\r\n    return (\r\n      \r\n      <CenteredContainer maxWidth={500}>\r\n        <h1 className=\"mb-4\">{game.name}</h1>\r\n        <Container>\r\n          {questions.length > 0\r\n            ? <Link to={`/lobby/${gameId}`}>\r\n                <Button color=\"success\" size=\"lg\">\r\n                  開始課程\r\n                </Button>\r\n              </Link>\r\n            : null\r\n          } \r\n        </Container>\r\n        {questions.map(question => <EditableQuestion key={question.id} question={question}/>)}\r\n        <Container>\r\n          <Button\r\n            onClick={() => {\r\n              saveQuestion({ gameId: gameId, order: questions.length + 1 })\r\n                .then(newQn => setQuestions(questions.concat([newQn])))\r\n            }}\r\n          >\r\n            新增題目\r\n          </Button>\r\n          <br/><br/>\r\n          <Button\r\n            style={{marginBottom:20}}\r\n            onClick={handleDeleteGame}\r\n            color=\"danger\"\r\n          >\r\n            刪除遊戲\r\n          </Button>\r\n        </Container>\r\n            \r\n      </CenteredContainer>\r\n    );\r\n  } else {\r\n    return (<CenteredContainer maxWidth={500}>Loading...</CenteredContainer>)\r\n  }\r\n}\r\n\r\nexport default GameDetailsRoute\r\n","import React from 'react'\r\nimport { useLocation } from \"react-router-dom\"\r\n//import { Button, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\nconst useQueryParams = key => {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst FindGameRoute = props => {\r\n  const queryParams = useQueryParams();\r\n  const gameIdPrefix = queryParams.get('game');\r\n\r\n  return (\r\n    <CenteredContainer maxWidth={500} verticalCentered>\r\n      {gameIdPrefix}\r\n    </CenteredContainer>\r\n  )\r\n}\r\n\r\nexport default FindGameRoute;\r\n","import GameStore from '../store/GameStore';\r\nimport QuestionStore from '../store/QuestionStore';\r\n\r\nconst startNextQuestion = async (gameId, currentQuestionIndex = 0) => {\r\n  const gameStore = new GameStore();\r\n  const questionStore = new QuestionStore();\r\n\r\n  let game;\r\n  try {\r\n    game = await gameStore.get(gameId);\r\n  } catch (error) {\r\n    // Handle error\r\n  }\r\n\r\n  if (game) {\r\n    gameStore.update(gameId, { state: 'pendingQuestion' });\r\n\r\n    if ('currentQuestion' in game) {\r\n      return questionStore.get(game.currentQuestion);\r\n    } else {\r\n      const questionArray = await questionStore.list({\r\n        gameId,\r\n        from: currentQuestionIndex,\r\n        limit: 1,\r\n      });\r\n      var question = questionArray[0];\r\n\r\n      if (question) {\r\n        gameStore.update(gameId, { currentQuestionId: question.id, currentQuestionIndex: currentQuestionIndex + 1 });\r\n      } else {\r\n        // No more questions, reset the current question index and start over\r\n        gameStore.update(gameId, { currentQuestionIndex: 0 });\r\n        currentQuestionIndex = 0;\r\n        question = await startNextQuestion(gameId, currentQuestionIndex);\r\n      }\r\n      \r\n\r\n      return question;\r\n    }\r\n  } else {\r\n    return;\r\n  }\r\n};\r\n\r\nexport default startNextQuestion;","const calculateTimeLeft = date => {\r\n  const difference = (date - Date.now()) / 1000;\r\n  return difference > 0 ? difference : 0;\r\n};\r\n\r\nconst tickTimer = ({ endDate, intervalCallback, endedCallback }) => {\r\n  setTimeout(() => {\r\n    // timeLeft is in seconds\r\n    const timeLeft = calculateTimeLeft(endDate);\r\n    if (timeLeft > 0) {\r\n      intervalCallback(timeLeft);\r\n      tickTimer({ endDate, intervalCallback, endedCallback });\r\n    }\r\n    else {\r\n      endedCallback(timeLeft);\r\n    }\r\n  }, 1000);\r\n};\r\n\r\nexport const startTimer = ({ seconds, intervalCallback, endedCallback }) => {\r\n  const endDate = new Date(Date.now() + 1000 * seconds);\r\n  tickTimer({ endDate, intervalCallback, endedCallback });\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Navigate } from \"react-router-dom\"\r\n\r\nimport startNextQuestion from '../use_cases/startNextQuestion';\r\nimport { startTimer } from '../utils/calculateTimeLeft';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\nconst SECONDS_TO_QUESTION = 5;\r\n\r\n\r\nconst PendingQuestionRoute = ({ parentUrl }) => {\r\n  let { gameId } = useParams();\r\n  const [ timeLeft, setTimeLeft ] = useState(SECONDS_TO_QUESTION);\r\n  const [ nextQuestion, setNextQuestion ] = useState(null);\r\n  console.log(gameId);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (gameId) {\r\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\r\n      startNextQuestion(gameId).then(setNextQuestion);\r\n      console.log(\"snq\",startNextQuestion)\r\n    }\r\n  }, [gameId])\r\n\r\n  \r\n  let url = \"/host/\" + gameId;\r\n  //console.log(url);\r\n  console.log(\"n:\",nextQuestion);\r\n  return (\r\n    \r\n    <CenteredContainer verticalCentered={true}>\r\n      <div className=\"mb-4\">Next question in...</div>\r\n      <div className=\"display-1\">\r\n        {Math.ceil(timeLeft)}\r\n      </div>\r\n      {timeLeft <= 0 && nextQuestion\r\n        ? <Navigate to={`${url}/questions/current`} />\r\n        : null\r\n      }\r\n    </CenteredContainer>\r\n  )\r\n\r\n}\r\n\r\nexport default PendingQuestionRoute","import QuestionStore from \"../store/QuestionStore\";\r\n\r\nconst getQuestion = (questionId, scopes, questionStore = new QuestionStore()) => {\r\n  return questionStore.get(questionId, scopes)\r\n};\r\n\r\nexport default getQuestion;\r\n","import GameStore from '../store/GameStore';\r\nimport AnswerStore from '../store/AnswerStore';\r\n\r\nconst calculateQuestionResults = (gameId, questionId, gameStore = new GameStore(), answerStore = new AnswerStore()) => {\r\n  gameStore.update(gameId, { state: 'showingQuestionResults' });\r\n  return answerStore\r\n    .list({ gameId, questionId })\r\n    .then(answers => {\r\n      let results = { 'A': [], 'B': [], 'C': [], 'D': []};\r\n      answers.forEach(answer => {\r\n        results[answer.choice] = results[answer.choice].concat(answer.playerName);\r\n      });\r\n      return results;\r\n    });\r\n}\r\n\r\nexport default calculateQuestionResults;\r\n","import QuestionStore from '../store/QuestionStore';\r\n\r\nconst countTotalQuestions = (gameId) => {\r\n  const questionStore = new QuestionStore();\r\n  return questionStore\r\n    .list({ gameId })\r\n    .then(questions => questions.length);\r\n}\r\n\r\nexport default countTotalQuestions;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { Button, Card, CardBody, Row, Col, CardTitle, CardText, Container } from 'reactstrap';\r\n\r\nimport getQuestion from '../use_cases/getQuestion';\r\nimport calculateQuestionResults from '../use_cases/calculateQuestionResults';\r\nimport countTotalQuestions from '../use_cases/countTotalQuestions';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\nconst isCorrectChoice = (question, choice) => {\r\n  return question.correctAnswer === choice;\r\n}\r\n\r\nconst ResultBoard = ({ result, className, question }) => {\r\n  return (\r\n    <div className={className}>\r\n      <h2 className=\"mb-4\">{question ? question.text : null}</h2>\r\n      <Row>\r\n        {\r\n          Object.entries(result).map(([answer, players]) => (\r\n            <Col sm={12} md={6} className=\"mb-4\">\r\n              <Card\r\n                color={isCorrectChoice(question, answer) ? 'success' : null}\r\n                inverse={isCorrectChoice(question, answer) ? true : null}\r\n              >\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <strong className='mr-2'>{answer}</strong>\r\n                    {isCorrectChoice(question, answer) ? '✔️' : '❌'}\r\n                  </CardTitle>\r\n                  <CardText>\r\n                    {players.join(', ')}\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst QuestionResultsRoute = ({ parentUrl }) => {\r\n  let { gameId, questionId } = useParams()\r\n  let [result, setResult] = useState({})\r\n  let [question, setQuestion] = useState(null)\r\n  let [totalQuestionCount, setTotalQuestionCount] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (gameId && questionId) {\r\n      getQuestion(questionId, { gameId }).then(setQuestion);\r\n      countTotalQuestions(gameId).then(setTotalQuestionCount);\r\n      calculateQuestionResults(gameId, questionId).then(setResult);\r\n    }\r\n  }, [gameId, questionId])\r\n  let url = \"/host/\" + gameId;\r\n  return (\r\n    <CenteredContainer verticalCentered={true}>\r\n      <ResultBoard className=\"mb-4\" result={result} question={question} />\r\n      <Container>\r\n        {question && question.order >= totalQuestionCount ?\r\n          <Link to={`${url}/results/final`}>\r\n            <Button color=\"primary\">\r\n              顯示課程最終結果\r\n            </Button>\r\n          </Link>\r\n          :\r\n          <Link to={`${url}/questions/pending`}>\r\n            <Button color=\"primary\">\r\n              下一題\r\n            </Button>\r\n          </Link>\r\n        }\r\n      </Container>\r\n    </CenteredContainer>\r\n  )\r\n}\r\n\r\nexport default QuestionResultsRoute\r\n\r\n// no result, no question, start button\r\n// no result, question, no buttons if time out, else show button if within time\r\n// have result, show result, hide question, next button (clears result)\r\n","import AnswerStore from '../store/AnswerStore';\r\nimport GameStore from '../store/GameStore';\r\nconst gameStore = new GameStore()\r\n\r\n/**\r\n * Saves an Answer.\r\n *\r\n * @param {Object} attributes\r\n * @returns Object - an \"Answer\"\r\n */\r\nconst calculateFinalResults = (gameId) => {\r\n  const answerStore = new AnswerStore();\r\n\r\n  gameStore.update(gameId, { state: 'draft' });\r\n  \r\n  return answerStore.list({ gameId })\r\n    .then(answers => {\r\n      return answers\r\n        .filter(val => 'isCorrect' in val && !!val.isCorrect)\r\n        .reduce((acc, curr) => {\r\n          if (curr.playerName in acc) {\r\n            acc[curr.playerName] += 1;\r\n          } else {\r\n            acc[curr.playerName] = 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n    })\r\n};\r\n\r\nexport default calculateFinalResults;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { ListGroup, ListGroupItem, Badge, Button, Container } from 'reactstrap';\r\nimport calculateFinalResults from '../use_cases/calculateFinalResults';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\n// Compares two Arrays of playerName, score in terms of ascending score.\r\nconst sortScores = (a, b) => {\r\n  const [, score1] = a;\r\n  const [, score2] = b;\r\n\r\n  if (score1 > score2) {\r\n    return -1;\r\n  }\r\n  if (score1 < score2) {\r\n    return 1;\r\n  }\r\n  // a must be equal to b\r\n  return 0;\r\n}\r\n\r\nconst Leaderboard = ({ results }) => {\r\n  let scores = Object.entries(results);\r\n  scores.sort(sortScores);\r\n\r\n  return (\r\n    <ListGroup>\r\n      {\r\n        scores.slice(0, 5).map(([key, value], index) => {\r\n          if (index <= 2) {\r\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\">{key}<Badge className=\"ml-4 p-2\" color=\"success\">{value}</Badge></ListGroupItem>;\r\n          } else {\r\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\">{key}<Badge className=\"ml-4 p-2\">{value}</Badge></ListGroupItem>;\r\n          }\r\n        })\r\n      }\r\n    </ListGroup>\r\n\r\n  );\r\n}\r\n\r\nconst FinalResultsRoute = props => {\r\n  let { gameId } = useParams()\r\n  let [results, setResults] = useState({})\r\n  \r\n  useEffect(() => {\r\n    if (gameId) {\r\n      calculateFinalResults(gameId).then(setResults);\r\n    }\r\n  }, [gameId])\r\n  \r\n  return (\r\n    <CenteredContainer verticalCentered={true} maxWidth={500}>\r\n      <h1>\r\n        課程結果\r\n      </h1>\r\n      <Leaderboard results={results} />\r\n      <br/>\r\n      <Container>\r\n        <Link to={`/games`}>\r\n          <Button color=\"primary\"> \r\n            回題目列表\r\n          </Button>\r\n        </Link>\r\n        \r\n      </Container>\r\n      <br/>\r\n      <Container>\r\n        <Link to={`/`}>\r\n          <Button color=\"primary\"> \r\n            回首頁\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </CenteredContainer>\r\n    \r\n  )\r\n  \r\n}\r\n\r\nexport default FinalResultsRoute\r\n","import GameStore from '../store/GameStore';\r\nimport QuestionStore from '../store/QuestionStore';\r\n\r\nconst showCurrentQuestion = (gameId, gameStore = new GameStore(), questionStore = new QuestionStore()) => {\r\n  gameStore.update(gameId, { state: 'showingQuestion' });\r\n  return gameStore\r\n    .get(gameId)\r\n    .then(game => {\r\n      return questionStore.get(game.currentQuestion)\r\n    });\r\n}\r\n\r\nexport default showCurrentQuestion;\r\n","import React from 'react'\r\nimport { Card, CardBody, Row, Col, CardTitle, CardText } from 'reactstrap';\r\n\r\n\r\n\r\nconst Question = ({ question, className }) => (\r\n  <div className={className}>\r\n    <h2 className=\"mb-4\">{question.text}</h2>\r\n    <Row>\r\n      {\r\n        ['A', 'B', 'C', 'D'].map((ans) =>\r\n          <Col key={ans} sm={12} md={6} className=\"mb-4\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle><strong>{ans}</strong></CardTitle>\r\n                <CardText>\r\n                  {question[`answer${ans}`]}\r\n                </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        )\r\n      }\r\n    </Row>\r\n  </div>\r\n)\r\n\r\nexport default Question\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { Button } from 'reactstrap';\r\n\r\nimport showCurrentQuestion from '../use_cases/showCurrentQuestion'\r\nimport Question from '../view_components/Question'\r\nimport { startTimer } from '../utils/calculateTimeLeft';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\nconst SECONDS_TO_QUESTION = 2;\r\n\r\nconst ShowResultsBtn = ({ isVisible, linkTo }) => {\r\n  return isVisible ?\r\n    (\r\n      <Link to={linkTo}>\r\n        <Button color=\"primary\">顯示回答結果</Button>\r\n      </Link>\r\n    ) : null\r\n}\r\n\r\nconst CurrentQuestionRoute = ({ parentUrl }) => {\r\n  let { gameId } = useParams();\r\n  const [question, setQuestion] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(SECONDS_TO_QUESTION);\r\n\r\n  useEffect(() => {\r\n    if (gameId) {\r\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\r\n      showCurrentQuestion(gameId).then(setQuestion);\r\n    }\r\n  }, [gameId])\r\n  //let url = \"/host/\" + gameId ;\r\n  return (\r\n    <CenteredContainer verticalCentered={true}>\r\n      {question ?\r\n          <div>\r\n            <Question question={question} />\r\n            <div className=\"mt-4\">剩餘時間:</div>\r\n            <div className=\"display-1\">\r\n              {Math.ceil(timeLeft)}\r\n            </div>\r\n            <ShowResultsBtn\r\n              isVisible={timeLeft <= 0}\r\n              //linkTo={`${url}/results/${question.id}`}\r\n              linkTo={`http://localhost:5173/index.html?GID=${gameId}&QID=${question.id}`}\r\n            />\r\n          </div>\r\n        : <div>請稍等...</div>\r\n      }\r\n    </CenteredContainer>\r\n  )\r\n}\r\n\r\nexport default CurrentQuestionRoute\r\n","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport firebase from \"./utils/firebase\";\r\n\r\nfunction Header(){\r\n    const [user, setUser] = React.useState(null);\r\n    React.useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((currentUser) => {\r\n            setUser(currentUser)\r\n        });\r\n    }, []);\r\n    return (\r\n        \r\n        <Menu size=\"large\">\r\n            <Menu.Item as={Link} to=\"/\">\r\n                AR Classroom\r\n            </Menu.Item>\r\n            \r\n            <Menu.Menu position=\"right\">\r\n                {user ? (\r\n                <>  \r\n                    <Menu.Item as={Link} to =\"/games\">我的課程</Menu.Item>\r\n                    <Menu.Item as={Link} to =\"/join-s\">學生連結</Menu.Item>\r\n                    <Menu.Item as={Link} to =\"/results\">結果報表</Menu.Item>\r\n                    <Menu.Item as={Link} to =\"/settings\">設定</Menu.Item>\r\n                    <Menu.Item onClick={() => firebase.auth().signOut()}>登出</Menu.Item>\r\n                </> \r\n                ) : (\r\n                    <Menu.Item as={Link} to =\"/signin\">註冊/登入</Menu.Item>\r\n                )}\r\n            </Menu.Menu>\r\n            \r\n        </Menu>\r\n    );\r\n    \r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Menu, Form, Container, Message} from 'semantic-ui-react'\r\nimport firebase from '../utils/firebase';\r\nimport \"firebase/auth\";\r\n//import { useNavigate } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Signin(){\r\n    const [activeItem, setActiveItem] = React.useState('register');\r\n    const [email, setEmail]= React.useState('');\r\n    const [password, setPassword]= React.useState('');\r\n    const navigate = useNavigate();\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    \r\n    function onSubmit(){\r\n        setIsLoading(true);\r\n        if(activeItem === 'register'){\r\n            firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(() =>{\r\n                navigate('/');\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                switch(error.code){\r\n                    case 'auth/email-already-in-use':\r\n                        setErrorMessage('信箱已存在');\r\n                        break;\r\n                    case 'auth/invalid-email':\r\n                        setErrorMessage('信箱格式不正確');\r\n                        break;\r\n                    case 'auth/weak-password':\r\n                        setErrorMessage('密碼強度不足');\r\n                        break;\r\n                    default:\r\n                }\r\n                \r\n            });\r\n        }else if(activeItem === 'signin'){\r\n            firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(() =>{\r\n                navigate('/');\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                console.log(errorCode);\r\n                switch(errorCode){\r\n                    case 'auth/invalid-email':\r\n                        setErrorMessage('信箱格式不正確');\r\n                        break;\r\n                    case 'auth/internal-error':\r\n                        setErrorMessage('此信箱尚未註冊 或 密碼錯誤');\r\n                        setIsLoading(false);\r\n                        break;\r\n                    default:\r\n                }\r\n            \r\n            });\r\n        }\r\n    }\r\n    return(\r\n        <Container>\r\n            <Menu widths=\"2\">\r\n                <Menu.Item \r\n                    active={activeItem === 'register'} \r\n                    onClick={() => {\r\n                        setErrorMessage('');\r\n                        setActiveItem('register');\r\n                    }}\r\n                >\r\n                    註冊\r\n                </Menu.Item>\r\n                <Menu.Item \r\n                    active={activeItem === 'signin'}\r\n                    onClick={() => {\r\n                        setErrorMessage('');\r\n                        setActiveItem('signin');\r\n                    }}\r\n                >\r\n                    登入\r\n                </Menu.Item>\r\n            </Menu>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Input \r\n                    label=\"信箱\" \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"請輸入信箱\"\r\n                />\r\n                <Form.Input \r\n                    label=\"密碼\" \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"請輸入密碼\"\r\n                    type=\"password\"\r\n                />\r\n                {errorMessage && <Message negative>{errorMessage}</Message>}\r\n                <Form.Button loading={isLoading}>\r\n                    {activeItem === 'register' && '註冊'}\r\n                    {activeItem === 'signin' && '登入'}\r\n                </Form.Button>\r\n                    \r\n            </Form>\r\n        </Container>\r\n    );\r\n    \r\n}\r\n\r\nexport default Signin;","import { Button, Container, Form, Header, Image } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\nimport \"firebase/firestore\";\r\nimport firebase from \"../utils/firebase\";\r\n//import { useNavigate } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport 'firebase/storage';\r\n\r\n\r\nfunction NewPost(){\r\n    const [title, setTitle]=React.useState('');\r\n    const [content, setContent]=React.useState('');\r\n    const [topics, setTopics]=React.useState([]);\r\n    const [topicName, setTopicName]=React.useState(\"\");\r\n    const [file, setFile]=React.useState(null);\r\n    const navigate = useNavigate();\r\n    const [isLoading, setIsLoading]=React.useState(false);\r\n\r\n    React.useEffect(() =>{\r\n        firebase\r\n            .firestore()\r\n            .collection(\"topics\")\r\n            .get()\r\n            .then((collectionSnapshot)=>{\r\n                const data = collectionSnapshot.docs.map(doc =>{\r\n                    return doc.data();\r\n                });\r\n                setTopics(data);\r\n                \r\n            });\r\n    }, []);\r\n\r\n    const options = topics.map(topic => {\r\n        return{\r\n            text:topic.name,\r\n            value:topic.name,\r\n        }\r\n    })\r\n\r\n    const previewUrl = file\r\n     ? URL.createObjectURL(file)\r\n     : 'https://react.semantic-ui.com/images/wireframe/image.png' ;\r\n\r\n    function onSubmit(){\r\n        setIsLoading(true);\r\n        const documentRef = \r\n            firebase.firestore().collection(\"posts\").doc();\r\n        const fileRef = \r\n            firebase.storage().ref('post-images/' + documentRef.id)\r\n        const metadata ={\r\n            contentType: file.type\r\n        };\r\n        fileRef.put(file, metadata).then(() => {\r\n            fileRef.getDownloadURL().then((imageUrl) => {\r\n                documentRef.set({\r\n                    title,\r\n                    content,\r\n                    topic : topicName,\r\n                    createdAt:firebase.firestore.Timestamp.now(),\r\n                    author: {\r\n                        displayName: firebase.auth().currentUser.displayName || \"\",\r\n                        photoURL: firebase.auth().currentUser.photoURL || \"\",\r\n                        uid: firebase.auth().currentUser.uid,\r\n                        email: firebase.auth().currentUser.email\r\n                    },\r\n                    imageUrl,\r\n                })\r\n                .then(() =>{\r\n                    setIsLoading(false);\r\n                    navigate(\"/\");\r\n                })\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    return (    \r\n    \r\n        <Container>\r\n            <Header>發表文章</Header>\r\n            <Form onSubmit={onSubmit}>\r\n                <Image \r\n                    src={previewUrl} \r\n                    size=\"small\"\r\n                    floated=\"left\"\r\n                />\r\n                <Button basic as=\"label\" htmlFor=\"post-image\">\r\n                    上傳文章圖片\r\n                </Button>\r\n                <Form.Input \r\n                    type=\"file\" \r\n                    id=\"post-image\" \r\n                    style={{ display: 'none' }} \r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                />\r\n                <Form.Input \r\n                    placeholder=\"輸入文章標題\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                            \r\n                <Form.TextArea \r\n                    placeholder=\"輸入文章內容\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                />\r\n\r\n                <Form.Dropdown \r\n                    placeholder=\"選擇文章主題\"\r\n                    options={options}\r\n                    selection\r\n                    value={topicName}\r\n                    onChange={(e, {value}) => setTopicName(value)}\r\n                />\r\n                <Form.Button loading={isLoading}>送出</Form.Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default NewPost;","import React,{ useState } from \"react\";\r\nimport {\r\n  //CanvasPath,\r\n  //ExportImageType,\r\n  ReactSketchCanvas,\r\n  //ReactSketchCanvasProps,\r\n  //ReactSketchCanvasRef,\r\n} from \"react-sketch-canvas\";\r\nimport firebase from \"../utils/firebase\";\r\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\r\n\r\nconst storage = getStorage();\r\n\r\n\r\nvar urlParams = new URLSearchParams(window.location.search);\r\nconst playUrl = urlParams.get('playUrl');\r\n//const playUrl = window.location.search.substring(1).split(\"=\")[1];\r\nconst lastParam = window.location.href.lastIndexOf(\"/\") + 1;\r\nconst SID = window.location.href.substring(lastParam);\r\nconsole.log(\"playUrl: \" + playUrl)\r\nconsole.log(\"SID: \" + SID);\r\nconst svgRef = ref(storage, `svgs/${ SID + \".svg\" } `);\r\n\r\nconst Handlers = [\r\n  [\"string\", () => {}, \"string\"],\r\n];\r\n\r\nfunction InputField({\r\n  fieldName,\r\n  type = \"text\",\r\n  canvasProps,\r\n  setCanvasProps,\r\n  displayName,\r\n}) {\r\n  const handleChange = ({\r\n    target,\r\n  }) => {\r\n    setCanvasProps((prevCanvasProps) => ({\r\n      ...prevCanvasProps,\r\n      [fieldName]: target.value,\r\n    }));\r\n  };\r\n\r\n  const id = `validation${fieldName}`;\r\n\r\n  return (\r\n    <div className=\"p-2 col-10\">\r\n      <label htmlFor={id} className=\"form-label\">\r\n        {displayName}\r\n      </label>\r\n      <input\r\n        name={fieldName}\r\n        type={type}\r\n        className=\"form-control\"\r\n        id={id}\r\n        value={canvasProps[fieldName]}\r\n        onChange={handleChange}\r\n        min={1}\r\n        max={30}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Draw() {\r\n  const [canvasProps, setCanvasProps] = React.useState({\r\n    className: \"react-sketch-canvas\",\r\n    width: \"100%\",\r\n    height: \"450PX\",\r\n    backgroundImage:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/7/70/Graph_paper_scan_1600x1000_%286509259561%29.jpg\",\r\n    preserveBackgroundImageAspectRatio: \"none\",\r\n    strokeWidth: 4,\r\n    eraserWidth: 5,\r\n    strokeColor: \"#000000\",\r\n    canvasColor: \"#FFFFFF\",\r\n    style: { borderRight: \"1px solid #CCC\" },\r\n    svgStyle: {},\r\n    exportWithBackgroundImage: false,\r\n    withTimestamp: true,\r\n    allowOnlyPointerType: \"all\",\r\n    withViewBox: false,\r\n  });\r\n\r\n  const inputProps = [\r\n    //[\"className\", \"text\"],\r\n    //[\"width\", \"text\"],\r\n    //[\"height\", \"text\"],\r\n    //[\"backgroundImage\", \"text\"],\r\n    //[\"preserveBackgroundImageAspectRatio\", \"text\"],\r\n    [\"strokeWidth\", \"range\", \"畫筆粗細\"],\r\n    [\"eraserWidth\", \"range\", \"橡皮擦粗細\"],\r\n  ];\r\n\r\n  const canvasRef = React.createRef();\r\n\r\n  const [penButtonColor, setPenButtonColor] = React.useState(\"primary\");\r\n  const [eraserButtonColor, setEraserButtonColor] = React.useState(\"secondary\");\r\n  const [dataURI, setDataURI] = React.useState(\"\");\r\n  const [svg, setSVG] = React.useState(\"\");\r\n  const [paths, setPaths] = React.useState([]);\r\n  const [lastStroke, setLastStroke] = React.useState({\r\n    stroke: null,\r\n    isEraser: null,\r\n  });\r\n  //const [pathsToLoad, setPathsToLoad] = React.useState(\"\");\r\n  //const [sketchingTime, setSketchingTime] = React.useState(0);\r\n  const [exportImageType, setexportImageType] = React.useState(\"png\");\r\n\r\n /* const imageExportHandler = async () => {\r\n    const exportImage = canvasRef.current?.exportImage;\r\n\r\n    if (exportImage) {\r\n      const exportedDataURI = await exportImage(exportImageType);\r\n      setDataURI(exportedDataURI);\r\n    }\r\n  };*/\r\n\r\n  const [isDone, setIsDone] = useState(false);\r\n  \r\n  const svgExportHandler = async () => {\r\n    const exportSvg = canvasRef.current?.exportSvg;\r\n\r\n    if (exportSvg) {\r\n      var exportedDataURI = await exportSvg();\r\n      setSVG(exportedDataURI);\r\n      setIsDone(true);\r\n      console.log(exportedDataURI);\r\n      \r\n      exportedDataURI = exportedDataURI\r\n        .replace('<rect id=\"react-sketch-canvas__mask-background\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\"></rect></g><defs></defs><g id=\"react-sketch-canvas__canvas-background-group\"><rect id=\"react-sketch-canvas__canvas-background\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#FFFFFF\"></rect>', '');\r\n      const blob = new Blob([exportedDataURI], { type: 'image/svg+xml' });\r\n      uploadBytes(svgRef, blob).then((snapshot) => {\r\n          console.log('SVG upload to Firebase succeed');\r\n      }).catch((error) => {\r\n          console.error('SVG upload to Firebase failed', error);\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n  /*const getSketchingTimeHandler = async () => {\r\n    const getSketchingTime = canvasRef.current?.getSketchingTime;\r\n\r\n    try {\r\n      if (getSketchingTime) {\r\n        const currentSketchingTime = await getSketchingTime();\r\n        setSketchingTime(currentSketchingTime);\r\n      }\r\n    } catch {\r\n      setSketchingTime(0);\r\n      console.error(\"With timestamp is disabled\");\r\n    }\r\n  };*/\r\n\r\n  \r\n  const penHandler = () => {\r\n    const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n    if (eraseMode) {\r\n      setPenButtonColor(\"primary\");\r\n      setEraserButtonColor(\"secondary\");\r\n      eraseMode(false);\r\n    }\r\n  };\r\n\r\n  const eraserHandler = () => {\r\n    const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n    if (eraseMode) {\r\n      setPenButtonColor(\"secondary\");\r\n      setEraserButtonColor(\"primary\");\r\n      eraseMode(true);\r\n    }\r\n  };\r\n  \r\n  const undoHandler = () => {\r\n    const undo = canvasRef.current?.undo;\r\n\r\n    if (undo) {\r\n      undo();\r\n    }\r\n  };\r\n\r\n  const redoHandler = () => {\r\n    const redo = canvasRef.current?.redo;\r\n\r\n    if (redo) {\r\n      redo();\r\n    }\r\n  };\r\n\r\n  const clearHandler = () => {\r\n    const clearCanvas = canvasRef.current?.clearCanvas;\r\n\r\n    if (clearCanvas) {\r\n      clearCanvas();\r\n    }\r\n  };\r\n\r\n  const resetCanvasHandler = () => {\r\n    const resetCanvas = canvasRef.current?.resetCanvas;\r\n\r\n    if (resetCanvas) {\r\n      resetCanvas();\r\n    }\r\n  };\r\n\r\n  const createButton = (\r\n    label,\r\n    handler,\r\n    themeColor\r\n  ) => (\r\n    <button\r\n      key={label}\r\n      className={`btn btn-${themeColor} btn-block`}\r\n      type=\"button\"\r\n      onClick={handler}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n\r\n  const goToNext = () =>{\r\n      if(isDone) {\r\n        window.location.href = playUrl;\r\n      }\r\n      else{\r\n        alert(\"請先畫圖並按完成\")\r\n      }\r\n  };\r\n\r\n  const buttonsWithHandlers = [\r\n    [\"復原\", undoHandler, \"dark\"],\r\n    [\"取消復原\", redoHandler, \"dark\"],\r\n    [\"清除全部\", clearHandler, \"dark\"],\r\n    [\"重置\", resetCanvasHandler, \"dark\"],\r\n    [\"畫筆\", penHandler, penButtonColor],\r\n    [\"橡皮擦\", eraserHandler, eraserButtonColor],\r\n    [\"完成\", svgExportHandler, \"success\"],\r\n    [\"下一步\", goToNext, \"success\"],\r\n    //[\"Export Image\", imageExportHandler, \"success\"],\r\n    \r\n    //[\"Get Sketching time\", getSketchingTimeHandler, \"success\"],\r\n  ];\r\n\r\n  //const buttonNext = [\r\n    \r\n  //];\r\n\r\n  const onChange = (updatedPaths) => {\r\n    setPaths(updatedPaths);\r\n  };\r\n\r\n  return (\r\n    <main className=\"container-fluid p-2\">\r\n      <div className=\"row\">\r\n        \r\n      \r\n        <section className=\"col-12\">\r\n          <header className=\"my-5\">\r\n            <h1>畫出你的虛擬替身</h1>\r\n          </header>\r\n          <section className=\"row no-gutters canvas-area m-0 p-0\">\r\n            <div className=\"col-9 canvas p-0\">\r\n              <ReactSketchCanvas\r\n                ref={canvasRef}\r\n                onChange={onChange}\r\n                onStroke={(stroke, isEraser) =>\r\n                  setLastStroke({ stroke, isEraser })\r\n                }\r\n                {...canvasProps}\r\n              />\r\n            </div>\r\n            <div className=\"col-3 panel\">\r\n              <div className=\"d-grid gap-2\">\r\n                {buttonsWithHandlers.map(([label, handler, themeColor]) =>\r\n                  createButton(label, handler, themeColor)\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <form>\r\n              {inputProps.map(([fieldName, type, displayName]) => (\r\n                <InputField\r\n                  key={fieldName}\r\n                  fieldName={fieldName}\r\n                  displayName={displayName}\r\n                  type={type}\r\n                  canvasProps={canvasProps}\r\n                  setCanvasProps={setCanvasProps}\r\n                />\r\n              ))}\r\n          </form>\r\n          \r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Draw;\r\n","import { Header, Button, Segment, Modal, Input, Container } from 'semantic-ui-react'\r\n//import React from 'react';\r\nimport firebase from \"../utils/firebase\";\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\nfunction MySettings( { user } ){\r\n    const [isNameModalOpen, setIsNameModalOpen] = React.useState(false);\r\n    const [isPasswordModalOpen, setIsPasswordModalOpen] = React.useState(false);\r\n    const [displayName, setDisplayName] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [oldPassword, setOldPassword] = React.useState('');\r\n    const [newPassword, setNewPassword] = React.useState('');\r\n\r\n    function onSubmitName(){\r\n        setIsLoading(true)\r\n        user.updateProfile({\r\n            displayName,\r\n        }).then(() =>{\r\n            setDisplayName('');\r\n            setIsNameModalOpen(false);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    function onSubmitPassword(){\r\n        setIsLoading(true);\r\n        const credential = firebase.auth.EmailAuthProvider.credential(\r\n            user.email, oldPassword\r\n        );\r\n        user.reauthenticateWithCredential(credential).then(() => {\r\n            user.updatePassword(newPassword).then(() => {\r\n                setIsPasswordModalOpen(false);\r\n                setOldPassword('');\r\n                setNewPassword('');\r\n                setIsLoading(false);\r\n            });\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <>\r\n            <Header>我的檔案</Header>\r\n            <Header size='small'>\r\n                使用者名稱\r\n                <Button floated='right' onClick={() => setIsNameModalOpen(true)}>\r\n                    修改\r\n                </Button>\r\n            </Header>\r\n            <Segment vertical>{user.displayName}</Segment>\r\n            <Modal open={isNameModalOpen} size='mini'>\r\n                <Modal.Header>修改使用者名稱</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input \r\n                        placeholder=\"輸入新的使用者名稱\" \r\n                        value={displayName} \r\n                        onChange={(e) => setDisplayName(e.target.value)}\r\n                        fluid \r\n                    />\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={() => setIsNameModalOpen(false)}>取消</Button>\r\n                    <Button onClick={onSubmitName} loading={isLoading} >修改</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n            </>\r\n            <>\r\n                <Header size='small'>\r\n                    修改密碼\r\n                    <Button floated='right' onClick={() =>  setIsPasswordModalOpen(true)}>\r\n                        修改\r\n                    </Button>\r\n                </Header>\r\n                <Segment vertical>********</Segment>\r\n                <Modal size='mini' open={isPasswordModalOpen}>\r\n                    <Modal.Header>修改使用者密碼</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Header size=\"small\">目前密碼</Header>\r\n                        <Input \r\n                            placeholder=\"輸入舊密碼\" \r\n                            value={oldPassword} \r\n                            onChange={(e) => setOldPassword(e.target.value)}\r\n                            fluid \r\n                        />\r\n                        <Header size=\"small\">新密碼</Header>\r\n                        <Input \r\n                            placeholder=\"輸入新密碼\" \r\n                            value={newPassword} \r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            fluid \r\n                        />\r\n                    </Modal.Content>\r\n                    \r\n                    <Modal.Actions>\r\n                    <Button onClick={() => setIsPasswordModalOpen(false)}>取消</Button>\r\n                    <Button onClick={onSubmitPassword} loading={isLoading} >修改</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MySettings;","function Results(){\r\n    return (\r\n        \"結果報表\"\r\n    )\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport styles from './RwdYoutube.module.css';\r\n\r\nexport default function RwdYoutube({ src }) {\r\n    return (\r\n        <div className={styles.videobox}>\r\n            <iframe frameBorder=\"0\" src={src} allowFullScreen=\"true\" title='實際操作影片' />\r\n        </div>\r\n    )\r\n}","//import React from \"react\";\r\nimport { Grid, Container, Button } from 'semantic-ui-react'\r\nimport React, { useState } from 'react';\r\nimport styles from './styles.module.css'\r\nimport RwdYoutube from '../component/RwdYoutube';\r\nimport firebase from '../utils/firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Mainpage(){\r\n    const [user, setUser] = useState(null);\r\n    \r\n    React.useEffect(() =>{\r\n        firebase.auth().onAuthStateChanged((currentUser) =>{\r\n        setUser(currentUser);\r\n        })\r\n    })\r\n\r\n    return (\r\n        <Container style={{ width: \"100%\", height: \"100vh\" }}>\r\n        \r\n        <Grid centered style={{ marginTop: \"40px\" }}>\r\n            <div className={styles.hero_heading} style={{ fontWeight:\"bold\" }}>AR</div>\r\n        </Grid>\r\n        <Grid centered style={{ marginTop: \"40px\" }}>\r\n            <div className={styles.hero_heading} style={{ fontWeight:\"bold\" }}>Classroom</div>\r\n        </Grid>\r\n        <Grid centered style={{ marginTop: \"40px\" }}>\r\n            {user ? (\r\n                <></>\r\n            ) : (\r\n            <Button color='positive' size='large' as={Link} to =\"/signin\">立即註冊/登入</Button>\r\n            )}\r\n        </Grid>\r\n        <Grid centered style={{ marginTop: \"40px\" }}>\r\n            <Grid.Column width={12}>\r\n                <RwdYoutube\r\n                    src=\"https://youtube.com/embed/LY_b0lxHX7o?feature=share;\"\r\n                    controls\r\n                    width=\"100%\"\r\n                />\r\n            </Grid.Column>\r\n        </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nexport default Mainpage;","import React, { useState } from 'react'\r\nimport { Link, Navigate } from \"react-router-dom\"\r\nimport { Button, Form, FormGroup, Label, Input, ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport styles from './styles.module.css'\r\nimport findGamesByShortCode from '../use_cases/findGamesByShortCode';\r\n\r\n\r\nfunction JoinS(){\r\n  const [games, setGames] = useState([]);\r\n  const [shortCode, setShortCode] = useState('');\r\n\r\n  if (games.length > 1) {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n        <ListGroup>\r\n          {\r\n            games.map(game => (\r\n              <Link key={game.id} to={`/join/${game.id}`}>\r\n                <ListGroupItem\r\n                  tag=\"button\"\r\n                  action\r\n                >\r\n                  {game.name}\r\n                </ListGroupItem>\r\n              </Link>\r\n            ))\r\n          }\r\n        </ListGroup>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n  else if (games.length === 1) {\r\n    return <Navigate to={`/join/${games[0].id}`} />;\r\n  }\r\n  else {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n        <h1 className={styles.hero_heading}>AR Classroom !</h1>\r\n        <Form\r\n          className=\"mb-5\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            findGamesByShortCode(shortCode).then(setGames);\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <Label for=\"shortCode\">房間代碼:</Label>\r\n            <Input id=\"shortCode\" type=\"number\" value={shortCode} onChange={e => setShortCode(e.target.value)} />\r\n          </FormGroup>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!shortCode}\r\n            type=\"submit\"\r\n          >\r\n            加入房間\r\n          </Button>\r\n        </Form>\r\n        \r\n        <aside hidden>\r\n          Want to create your own quiz?&nbsp;\r\n          <Link to=\"/login\">\r\n            Sign Up\r\n          </Link>\r\n        </aside>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JoinS;\r\n","import React from 'react';\r\nimport {\r\n  HashRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport firebase from './utils/firebase';\r\n\r\nimport JoinRoute from './routes/JoinRoute'\r\nimport PlayerRoute from './routes/PlayerRoute'\r\nimport HomeRoute from './routes/HomeRoute/HomeRoute';\r\nimport LobbyRoute from './routes/LobbyRoute';\r\nimport LoginRoute from './routes/LoginRoute';\r\nimport MyGamesRoute from './routes/MyGamesRoute';\r\nimport CreateGameRoute from './routes/CreateGameRoute';\r\n//import HostRoute from './routes/HostRoute';\r\nimport GameDetailsRoute from './routes/GameDetailsRoute';\r\nimport FindGameRoute from './routes/FindGameRoute';\r\n\r\nimport PendingQuestionRoute from './routes/PendingQuestionRoute';\r\nimport QuestionResultsRoute from './routes/QuestionResultsRoute';\r\nimport FinalResultsRoute from './routes/FinalResultsRoute';\r\nimport CurrentQuestionRoute from './routes/CurrentQuestionRoute';\r\n\r\n\r\nimport Header from \"./Header\";\r\nimport Signin from './pages/Signin'\r\n//import Posts from \"./pages/Posts\";\r\nimport NewPost from \"./pages/NewPost\";\r\nimport Draw from \"./pages/Draw\";\r\nimport MySettings from './pages/MySettings';\r\nimport Results from './pages/Results';\r\nimport Mainpage from './pages/Mainpage';\r\n\r\n//import NameS from './pages/NameS';\r\nimport JoinS from './pages/JoinS';//join頁面要刪掉\r\n\r\nfunction App() {\r\n  const [user, setUser] = React.useState(null);\r\n  React.useEffect(() =>{\r\n    firebase.auth().onAuthStateChanged((currentUser) =>{\r\n      setUser(currentUser);\r\n    })\r\n  })\r\n  return (\r\n    <HashRouter>\r\n      <Header/>\r\n        <div className=\"App\">\r\n          <Routes>\r\n            \r\n            <Route path=\"/login\" element={<LoginRoute/>} key={LoginRoute.id}/>            \r\n            <Route path=\"/\" exact element={<Mainpage/>} key={Mainpage.id}/> \r\n            <Route path=\"/signin\" exact element={<Signin />} key={Signin.id}/>\r\n            <Route path=\"/join-s\" exact element={<JoinS/>} />\r\n            \r\n            <Route path=\"/lobby/:gameId\" element={<LobbyRoute />} key={LobbyRoute.id}/>\r\n            <Route path=\"/play/:gameId/as/:playerId\" element={<PlayerRoute />} key={PlayerRoute.id}/>\r\n            <Route path=\"/join/:gameId\" element={<JoinRoute />} key={JoinRoute.id}/>\r\n            <Route path=\"/join\" element={<FindGameRoute />} key={FindGameRoute.id}/> \r\n            <Route path=\"/games/create\" element={<CreateGameRoute />} key={CreateGameRoute.id}/>\r\n            <Route path=\"/games/:gameId\" element={<GameDetailsRoute />} key={GameDetailsRoute.id}/>\r\n            <Route path=\"/games\" exact element={<MyGamesRoute />} key={MyGamesRoute.id}/>\r\n            <Route path=\"/cahoots\" element={<HomeRoute />} key={HomeRoute.id}/>\r\n            \r\n            <Route path=\"/new-post\" exact element={<NewPost />} key={NewPost.id}/>\r\n            <Route path=\"/draw\" exact element={<Draw />} key={Draw.id}/>\r\n            <Route path=\"/settings\" exact element={<MySettings user={user}/>} key={MySettings.id}/>\r\n            <Route path=\"/results\" exact element={<Results/>} key={Results.id}/>\r\n\r\n            <Route path=\"/host/:gameId/questions/pending\" element={<PendingQuestionRoute/>} key={PendingQuestionRoute.id}/>\r\n            <Route path=\"/host/:gameId/questions/current\" element={<CurrentQuestionRoute />} key={CurrentQuestionRoute.id}/>\r\n            <Route path=\"/host/:gameId/results/final\" element={<FinalResultsRoute />} key={FinalResultsRoute.id}/>\r\n            <Route path=\"/host/:gameId/results/:questionId\" element={<QuestionResultsRoute />} key={QuestionResultsRoute.id}/>\r\n                     \r\n          </Routes>\r\n        </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}