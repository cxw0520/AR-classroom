{"version":3,"sources":["view_components/CenteredContainer/styles.module.css","routes/HomeRoute/styles.module.css","component/RwdYoutube.module.css","utils/firebase.js","store/BaseStore.js","store/PlayerStore.js","use_cases/addPlayer.js","view_components/CenteredContainer/index.js","entities/Game.js","store/GameStore.js","use_cases/getGame.js","routes/JoinRoute.js","use_cases/getPlayer.js","store/AnswerStore.js","utils/popKey.js","store/QuestionStore.js","use_cases/addAnswer.js","routes/PlayerRoute.js","use_cases/getLobbyPlayers.js","routes/LobbyRoute.js","store/UserStore.js","use_cases/signupUser.js","use_cases/loginUser.js","routes/LoginRoute.js","use_cases/getCurrentUser.js","use_cases/getCurrentUserGames.js","routes/MyGamesRoute.js","use_cases/createGame.js","routes/CreateGameRoute.js","use_cases/getQuestions.js","use_cases/saveQuestion.js","use_cases/deleteQuestion.js","view_components/EditableQuestion.js","routes/GameDetailsRoute.js","use_cases/startNextQuestion.js","utils/calculateTimeLeft.js","routes/PendingQuestionRoute.js","use_cases/getQuestion.js","use_cases/calculateQuestionResults.js","use_cases/countTotalQuestions.js","routes/QuestionResultsRoute.js","use_cases/calculateFinalResults.js","routes/FinalResultsRoute.js","use_cases/showCurrentQuestion.js","view_components/Question.js","routes/CurrentQuestionRoute.js","Header.js","pages/Signin.js","pages/Draw.js","pages/MySettings.js","component/RwdYoutube.js","pages/Mainpage.js","use_cases/findGamesByShortCode.js","pages/JoinS.js","App.js","index.js","pages/styles.module.css"],"names":["module","exports","centered","hero_heading","videobox","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_FIREBASE_CONFIG","BaseStore","_createClass","props","_classCallCheck","this","undefined","firestore","auth","PlayerStore","_BaseStore","_inherits","_super","_createSuper","apply","arguments","key","value","playerId","scopes","collection","doc","gameId","get","then","_convertDocToPlayer","attributes","chain","add","playerRef","_this","onChange","limit","onSnapshot","playersSnapshot","players","forEach","playerDoc","push","snapshot","docs","map","p","_convertDocToQuestion","Object","assign","id","data","addPlayer","create","CenteredContainer","React","createElement","Container","className","styles","style","maxWidth","height","verticalCentered","children","Game","GameStore","state","STATE_DRAFT","ref","_convertDocToGame","_getGameDoc","gameDoc","_this2","where","ownerId","shortCode","a","currentQuestion","currentQuestionId","update","game","path","getGame","JoinForm","_ref","playerName","setPlayerName","joinGame","Form","onSubmit","e","preventDefault","FormGroup","Label","Input","sanitizedInput","target","replace","pattern","title","placeholder","Button","color","type","JoinRoute","playUrl","useParams","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setPlayerId","_useState5","_useState6","setGame","useEffect","set","name","console","log","catch","error","window","location","concat","getPlayer","AnswerStore","_popAttr","questionId","player","join","question","answerRef","_convertDocToAnswer","answerDoc","obj","attr","val","popKey","QuestionStore","addAttrs","questionDoc","attributesCopy","qnRef","qnDoc","_this3","from","orderBy","q","addAttributes","addAnswer","questionStore","timestamp","Date","getTime","isCorrect","correctAnswer","choice","AnswerGrid","recordAnswer","isAnswerDisabled","Row","ans","Col","sm","md","outline","onClick","disabled","PlayerRoute","_useParams","currentGame","setCurrentGame","answer","setAnswer","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","setIsAnswerDisabled","handleGameChange","Spinner","size","setTimeout","SECONDS_TO_CHOOSE","Alert","Fragment","getLobbyPlayers","playerStore","list","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","PlayerList","fontSize","fontWeight","ListGroup","ListGroupItem","QRCode","_ref2","imageSize","qrcodeData","setQRCodeData","canvasRef","useRef","imageRef","QRUrl","href","_ref3","_asyncToGenerator","_callee","url","dataURL","_context","qrcode","toDataURL","t0","_x","generateQRCode","canvas","current","ctx","getContext","img","Image","src","onload","clearRect","width","drawImage","display","alt","LobbyRoute","setPlayers","currentUrl","origin","displayUrl","joinUrl","isModalOpen","setIsModalOpen","Grid","columns","Column","rel","verticalAlign","Modal","basic","open","onClose","close","Link","to","UserStore","email","password","createUserWithEmailAndPassword","userCredentials","firebaseUser","user","_convertUser","errorCode","code","message","alert","signInWithEmailAndPassword","handleChange","onAuthStateChanged","uid","signupUser","loginUser","login","handleSubmit","event","authFn","successCallback","SignupForm","onUserChange","setEmail","setPassword","for","LoginForm","LoginRoute","isExistingUser","setIsExistingUser","_useState11","_useState12","setUser","toggleForm","Navigate","getCurrentUser","userStore","onCurrentUserChange","getCurrentUserGames","gameStore","MyGamesRoute","games","setGames","redirectUrl","setRedirectUrl","tag","action","createGame","String","Math","floor","random","CreateGameRoute","gameName","setGameName","gameAttributes","onCreate","getQuestions","saveQuestion","deleteQuestion","db","deleteDoc","reload","_x2","EditableQuestion","draftQuestion","setDraftQuestion","componentState","setComponentState","updateDraft","newAttributes","handleDeleteQuestion","Card","body","CardTitle","InputGroup","text","ansKey","InputGroupAddon","addonType","InputGroupText","_defineProperty","data-testid","hidden","GameDetailsRoute","questions","setQuestions","editMode","setEditMode","navigate","useNavigate","handleDeleteGame","marginBottom","order","newQn","startNextQuestion","nextOrder","questionArray","tickTimer","endDate","intervalCallback","endedCallback","timeLeft","date","difference","now","calculateTimeLeft","startTimer","seconds","PendingQuestionRoute","parentUrl","setTimeLeft","nextQuestion","setNextQuestion","ceil","getQuestion","calculateQuestionResults","answerStore","answers","results","A","B","C","D","latestAnswers","reduce","acc","countTotalQuestions","isCorrectChoice","ResultBoard","result","entries","inverse","CardBody","CardText","QuestionResultsRoute","_ref4","setResult","setQuestion","totalQuestionCount","setTotalQuestionCount","calculateFinalResults","filter","curr","sortScores","b","score1","score2","Leaderboard","scores","sort","index","Badge","FinalResultsRoute","setResults","showCurrentQuestion","Question","ShowResultsBtn","isVisible","linkTo","CurrentQuestionRoute","Header","_React$useState","_React$useState2","currentUser","Menu","Item","as","position","signOut","Signin","activeItem","setActiveItem","_React$useState3","_React$useState4","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","isLoading","setIsLoading","widths","active","label","Message","negative","loading","storage","getStorage","InputField","fieldName","_ref$type","canvasProps","setCanvasProps","htmlFor","prevCanvasProps","_objectSpread","min","max","Draw","setPlayUrl","svgRef","setSvgRef","equalParam","lastIndexOf","substring","lastParam","SID","computedSvgRef","backgroundImage","preserveBackgroundImageAspectRatio","strokeWidth","eraserWidth","strokeColor","canvasColor","borderRight","svgStyle","exportWithBackgroundImage","withTimestamp","allowOnlyPointerType","withViewBox","createRef","penButtonOutline","setPenButtonOutline","eraserButtonOutline","setEraserButtonOutline","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setSVG","_React$useState15","_React$useState16","setPaths","_React$useState17","stroke","isEraser","_React$useState18","setLastStroke","_React$useState19","_React$useState20","isDone","setIsDone","createButton","handler","themeColor","spacingClass","buttonsPenEraser","_canvasRef$current2","eraseMode","_canvasRef$current3","buttonsWithHandlers","_canvasRef$current4","undo","_canvasRef$current5","redo","_canvasRef$current6","clearCanvas","_canvasRef$current7","resetCanvas","buttonsDone","_canvasRef$current","exportSvg","exportedDataURI","blob","Blob","uploadBytes","buttonsNext","class","ReactSketchCanvas","updatedPaths","onStroke","role","aria-label","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","MySettings","isNameModalOpen","setIsNameModalOpen","isPasswordModalOpen","setIsPasswordModalOpen","setDisplayName","oldPassword","setOldPassword","newPassword","setNewPassword","floated","Segment","vertical","Content","fluid","Actions","updateProfile","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","RwdYoutube","frameBorder","allowFullScreen","frameborder","allow","Mainpage","marginTop","controls","small_note","textAlign","findGamesByShortCode","STATE_WAITING_FOR_PLAYERS","JoinS","setShortCode","App","HashRouter","Routes","Route","element","exact","ReactDOM","render","document","getElementById","nomal_text"],"mappings":"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","file":"static/js/main.17918a4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"centered\":\"styles_centered__3iYAP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_heading\":\"styles_hero_heading__1Twp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videobox\":\"RwdYoutube_videobox__Z9csr\"};","import firebase from 'firebase/compat/app';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAUlqVFqNfKTY34UCA0_jt9kHlTqMgDzi0\",\r\n    authDomain: \"ar-classroom-1bb48.firebaseapp.com\",\r\n    projectId: \"ar-classroom-1bb48\",\r\n    storageBucket: \"ar-classroom-1bb48.appspot.com\",\r\n    messagingSenderId: \"801778279327\",\r\n    appId: \"1:801778279327:web:e63f67b115057a5e2c53aa\",\r\n    measurementId: \"G-DEC44C4SPG\"\r\n  };\r\n\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n    // firebase.firestore.setLogLevel('debug');\r\n  }\r\n\r\n\r\nexport default firebase;","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth'\r\n\r\nconst REACT_APP_FIREBASE_CONFIG = {\r\n    apiKey: \"AIzaSyAUlqVFqNfKTY34UCA0_jt9kHlTqMgDzi0\",\r\n    authDomain: \"ar-classroom-1bb48.firebaseapp.com\",\r\n    projectId: \"ar-classroom-1bb48\",\r\n    storageBucket: \"ar-classroom-1bb48.appspot.com\",\r\n    messagingSenderId: \"801778279327\",\r\n    appId: \"1:801778279327:web:e63f67b115057a5e2c53aa\",\r\n    measurementId: \"G-DEC44C4SPG\"\r\n};\r\n\r\n//const FIREBASE_CONFIG = REACT_APP_FIREBASE_CONFIG;\r\n\r\n\r\nclass BaseStore {\r\n  constructor(props) {\r\n    // workaround to prevent initializing multiple times\r\n    if(firebase.apps !== undefined){\r\n      if (!firebase.apps.length) {\r\n        firebase.initializeApp(REACT_APP_FIREBASE_CONFIG);\r\n        // firebase.firestore.setLogLevel('debug');\r\n      }\r\n    }\r\n    \r\n\r\n    this.firestore = firebase.firestore();\r\n    this.auth = firebase.auth();\r\n  }\r\n}\r\n\r\nexport default BaseStore;\r\n","import BaseStore from './BaseStore';\r\n\r\nclass PlayerStore extends BaseStore {\r\n  get(playerId, scopes = {}) {\r\n    return this.firestore\r\n      .collection('games')\r\n      .doc(scopes.gameId)\r\n      .collection('players')\r\n      .doc(playerId)\r\n      .get()\r\n      .then(this._convertDocToPlayer)\r\n  }\r\n\r\n  create(attributes = {}) {\r\n    let chain = this.firestore;\r\n    if ('gameId' in attributes) {\r\n      const gameId = attributes.gameId;\r\n      delete attributes.gameId;\r\n\r\n      chain = chain.collection('games').doc(gameId).collection('players');\r\n    }\r\n\r\n    return chain\r\n      .add(attributes)\r\n      .then(playerRef => playerRef.get())\r\n      .then(this._convertDocToPlayer)\r\n  }\r\n\r\n  list(scopes = {}, onChange) {\r\n    let chain = this.firestore;\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId);\r\n    }\r\n    chain = chain.collection('players');\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    if (onChange !== undefined) {\r\n      return chain.onSnapshot(playersSnapshot => {\r\n        let players = [];\r\n        playersSnapshot.forEach(playerDoc => players.push(this._convertDocToPlayer(playerDoc)));\r\n        onChange(players);\r\n      });\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((p) => this._convertDocToQuestion(p)))\r\n  }\r\n\r\n  _convertDocToPlayer(playerDoc) {\r\n    return Object.assign({ id: playerDoc.id }, playerDoc.data());\r\n  }\r\n}\r\n\r\nexport default PlayerStore;\r\n","import PlayerStore from '../store/PlayerStore';\r\n\r\n\r\nconst addPlayer = (attributes) => {\r\n  return new PlayerStore().create(attributes);\r\n};\r\n\r\nexport default addPlayer;\r\n","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nimport styles from './styles.module.css';\r\n\r\n/**\r\n * Vertically and horizontally centered container. Parent height should be 100%.\r\n */\r\nconst CenteredContainer = props => {\r\n  return (\r\n    <Container className={styles.centered} style={{ maxWidth: props.maxWidth || null, height: props.verticalCentered ? \"100%\" : null }}>\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CenteredContainer;\r\n\r\n","export default class Game {\r\n  static get STATE_DRAFT() { return 'draft' }\r\n  static get STATE_WAITING_FOR_PLAYERS() { return 'waitingForPlayers' }\r\n}\r\n","import BaseStore from './BaseStore';\r\nimport Game from '../entities/Game';\r\n\r\n\r\nclass GameStore extends BaseStore {\r\n  create(attributes = {}) {\r\n    return this.firestore\r\n      .collection('games')\r\n      .add(Object.assign({ state: Game.STATE_DRAFT }, attributes))\r\n      .then(ref => ref.get())\r\n      .then(this._convertDocToGame)\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {String} gameId\r\n   * @param {Function} onChange - if provided, will trigger when Game is updated\r\n   * @returns\r\n   * @memberof GameStore\r\n   */\r\n  get(gameId, onChange) {\r\n    const doc = this._getGameDoc(gameId)\r\n\r\n    if (onChange !== undefined) {\r\n      return doc.onSnapshot(gameDoc => onChange(this._convertDocToGame(gameDoc)));\r\n    }\r\n\r\n    return doc.get().then(this._convertDocToGame);\r\n  }\r\n\r\n  list(scopes = {}) {\r\n    let chain = this.firestore.collection('games');\r\n\r\n    if ('ownerId' in scopes) {\r\n      // FIXME: ideally this would be independent of the gameId\r\n      chain = chain.where(\"ownerId\", \"==\", scopes.ownerId);\r\n    }\r\n\r\n    if ('state' in scopes) {\r\n      chain = chain.where(\"state\", \"==\", scopes.state);\r\n    }\r\n\r\n    if ('shortCode' in scopes) {\r\n      chain = chain.where(\"shortCode\", \"==\", scopes.shortCode);\r\n    }\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToGame(a)))\r\n  }\r\n\r\n  update(gameId, attributes) {\r\n    const doc = this._getGameDoc(gameId);\r\n\r\n    if ('currentQuestionId' in attributes) {\r\n      attributes.currentQuestion = doc.collection('questions').doc(attributes.currentQuestionId);\r\n      delete attributes.currentQuestionId;\r\n    }\r\n\r\n    return doc.update(attributes);\r\n  }\r\n\r\n  _getGameDoc(gameId) {\r\n    return this.firestore\r\n      .collection('games')\r\n      .doc(gameId);\r\n  }\r\n\r\n  _convertDocToGame(gameDoc) {\r\n    let game = Object.assign({ id: gameDoc.id }, gameDoc.data());\r\n    if ('currentQuestion' in game) {\r\n      game.currentQuestionId = game.currentQuestion.id;\r\n      game.currentQuestion = game.currentQuestion.path;  // TODO: remove this\r\n    }\r\n    return game;\r\n  }\r\n}\r\n\r\nexport default GameStore;\r\n","import GameStore from '../store/GameStore';\r\n\r\n\r\nconst getGame = (gameId, onChange) => {\r\n  return new GameStore().get(gameId, onChange);\r\n};\r\n\r\nexport default getGame;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Button, FormGroup, Label, Input, Form } from 'reactstrap';\r\nimport firebase from \"../utils/firebase\";\r\n\r\nimport addPlayer from '../use_cases/addPlayer';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport getGame from '../use_cases/getGame';\r\n\r\n\r\n\r\nconst JoinForm = ({ playerName, setPlayerName, joinGame }) => {\r\n  const handleInputChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    const sanitizedInput = inputValue.replace(/[^a-zA-Z0-9!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/-]+/g, '');\r\n    setPlayerName(sanitizedInput);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={e => {\r\n      e.preventDefault();\r\n      joinGame();\r\n    }}>\r\n      <FormGroup>\r\n        <Label>輸入你的暱稱:</Label>\r\n        <Input\r\n          value={playerName}\r\n          onChange={handleInputChange}\r\n          pattern=\"[a-zA-Z0-9!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\/-]+\"\r\n          title=\"English, symble, numbers only\"\r\n          placeholder='只限輸入英文、符號、數字'\r\n        />\r\n      </FormGroup>\r\n      <Button color=\"primary\" type=\"submit\">加入房間</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst JoinRoute = () => {\r\n  let { gameId } = useParams();\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [playerId, setPlayerId] = useState('');\r\n  const [game, setGame] = useState(null);\r\n  let playUrl = \"\";\r\n\r\n  useEffect(() => {\r\n    if (playerId) {\r\n      const db = firebase.firestore();\r\n      const sidCollection = db.collection('SID'); \r\n\r\n      sidCollection.doc(playerId).set({\r\n        name: playerName,\r\n        id: playerId\r\n      })\r\n      .then(() => {\r\n        console.log(\"Player data stored in Firestore!\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error storing player data: \", error);\r\n      });\r\n    }\r\n  }, [playerId, playerName]);\r\n\r\n  useEffect(() => {\r\n    if (gameId && game === null) {\r\n      getGame(gameId).then(setGame);\r\n    }\r\n  }, [gameId, game])\r\n\r\n  playUrl =  \"?playUrl=/play/\" + gameId + \"/as/\" + playerId;\r\n\r\n  const redirectToPlay = () => {\r\n    window.location.replace(`/Avatar-classroom/#/draw${playUrl}`);\r\n  };\r\n\r\n  return (\r\n    <CenteredContainer maxWidth={500} verticalCentered>\r\n      <h1>{game ? game.name : null}</h1>\r\n      {playerId ? (\r\n          redirectToPlay()\r\n       ) : (\r\n          <JoinForm\r\n            playerName={playerName}\r\n            setPlayerName={setPlayerName}\r\n            joinGame={() => addPlayer({ name: playerName, gameId }).then(p => setPlayerId(p.id))}\r\n          />\r\n      )}\r\n    </CenteredContainer>\r\n  )\r\n  \r\n}\r\n\r\nexport default JoinRoute\r\n","import PlayerStore from '../store/PlayerStore';\r\n\r\n\r\nconst getPlayer = (playerId, scopes = {}) => {\r\n  return new PlayerStore().get(playerId, scopes);\r\n};\r\n\r\nexport default getPlayer;\r\n","import BaseStore from './BaseStore';\r\n\r\nclass AnswerStore extends BaseStore {\r\n  /**\r\n   * Creates an Answer.\r\n   *\r\n   * @param {Object} attributes - `gameId` will be used to nest the subcollection\r\n   *  and generate a fully qualified reference for `playerId` and `questionId`\r\n   * @returns Object - an \"Answer\" object\r\n   * @memberof AnswerStore\r\n   */\r\n  create(attributes) {\r\n    const gameId = this._popAttr(attributes, 'gameId');\r\n    const playerId = this._popAttr(attributes, 'playerId');\r\n    const questionId = this._popAttr(attributes, 'questionId');\r\n\r\n    const subcollection = this.firestore\r\n      .collection('games')\r\n      .doc(gameId)\r\n      .collection('answers');\r\n\r\n    return subcollection\r\n      .add(Object.assign({\r\n        player: this.firestore.doc(['/games', gameId, 'players', playerId].join('/')),\r\n        question: this.firestore.doc(['/games', gameId, 'questions', questionId].join('/'))\r\n      }, attributes))\r\n      .then(answerRef => answerRef.get())\r\n      .then(this._convertDocToAnswer)\r\n  }\r\n\r\n  list(scopes = {}) {\r\n    let chain = this.firestore;\r\n\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId);\r\n    }\r\n    chain = chain.collection('answers');\r\n\r\n    if ('questionId' in scopes) {\r\n      // FIXME: ideally this would be independent of the gameId\r\n      chain = chain.where(\"question\", \"==\", this.firestore.doc(`games/${scopes.gameId}/questions/${scopes.questionId}`));\r\n    }\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((a) => this._convertDocToAnswer(a)))\r\n  }\r\n\r\n  _convertDocToAnswer(answerDoc) {\r\n    return Object.assign({ id: answerDoc.id }, answerDoc.data());\r\n  }\r\n\r\n  _popAttr(obj, attr) {\r\n    const val = obj[attr];\r\n    delete obj[attr];\r\n    return val;\r\n  }\r\n}\r\n\r\nexport default AnswerStore;\r\n","export function popKey(obj, key) {\r\n  const value = obj[key];\r\n  delete obj[key];\r\n  return value;\r\n}\r\n","import BaseStore from './BaseStore';\r\nimport { popKey } from '../utils/popKey';\r\n\r\nclass QuestionStore extends BaseStore {\r\n  /**\r\n   * Retrieves a Question from the store\r\n   *\r\n   * @param {string} questionId - if a scope is not provided, this must be a\r\n   *   fully qualified ref, as there is no top-level questions collection.\r\n   * @param {Object} [scopes={}]\r\n   * @returns Object\r\n   * @memberof QuestionStore\r\n   */\r\n  get(questionId, scopes = {}) {\r\n    let chain = this.firestore;\r\n    let addAttrs = {};\r\n\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\r\n      addAttrs['gameId'] = scopes.gameId;\r\n    }\r\n\r\n    return chain\r\n      .doc(questionId)\r\n      .get()\r\n      .then(questionDoc => this._convertDocToQuestion(questionDoc, addAttrs));\r\n  }\r\n\r\n  create(attributes) {\r\n    let attributesCopy = Object.assign({}, attributes);\r\n    const gameId = popKey(attributesCopy, 'gameId');\r\n\r\n    let collection = this.firestore.collection('games').doc(gameId).collection('questions');\r\n\r\n    return collection\r\n      .add(attributesCopy)\r\n      .then(qnRef => qnRef.get())\r\n      .then(qnDoc => this._convertDocToQuestion(qnDoc, { gameId }));\r\n  }\r\n\r\n  /**\r\n   * Update an object\r\n   *\r\n   * @param {String} questionId\r\n   * @param {Object} attributes\r\n   * @returns Promise<void>\r\n   * @memberof QuestionStore\r\n   */\r\n  update(questionId, attributes) {\r\n    let attributesCopy = Object.assign({}, attributes);\r\n    const gameId = popKey(attributesCopy, 'gameId');\r\n\r\n    let doc = this.firestore.collection('games').doc(gameId).collection('questions').doc(questionId);\r\n\r\n    return doc.update(attributesCopy);\r\n  }\r\n\r\n  list(scopes = {}) {\r\n    let chain = this.firestore;\r\n    let addAttrs = {};\r\n\r\n    if ('gameId' in scopes) {\r\n      chain = chain.collection('games').doc(scopes.gameId).collection('questions');\r\n      addAttrs['gameId'] = scopes.gameId;\r\n    }\r\n    if ('from' in scopes) {\r\n      chain = chain.where(\"order\", \">\", scopes.from);\r\n    }\r\n\r\n    chain = chain.orderBy(\"order\");\r\n\r\n    if ('limit' in scopes) {\r\n      chain = chain.limit(scopes.limit);\r\n    }\r\n\r\n    return chain\r\n      .get()\r\n      .then(snapshot => snapshot.docs.map((q) => this._convertDocToQuestion(q, addAttrs)));\r\n  }\r\n\r\n  _convertDocToQuestion(questionDoc, addAttributes = {}) {\r\n    return Object.assign({ id: questionDoc.id }, questionDoc.data(), addAttributes);\r\n  }\r\n}\r\n\r\nexport default QuestionStore;\r\n","import GameStore from '../store/GameStore';\r\nimport AnswerStore from '../store/AnswerStore';\r\nimport QuestionStore from '../store/QuestionStore';\r\n\r\n\r\n/**\r\n * Saves an Answer.\r\n *\r\n * @param {Object} attributes\r\n * @returns Object - an \"Answer\"\r\n */\r\nconst addAnswer = (attributes) => {\r\n  const questionStore = new QuestionStore();\r\n  const timestamp = new Date().getTime();\r\n\r\n  return new GameStore()\r\n    .get(attributes.gameId)\r\n    .then(game => {\r\n      return questionStore.get(game.currentQuestionId, { gameId: game.id });\r\n    })\r\n    .then(question => {\r\n      attributes.isCorrect = question.correctAnswer === attributes.choice;\r\n      attributes.questionId = question.id;\r\n      attributes.timestamp = timestamp;\r\n      console.log(attributes)\r\n      return new AnswerStore().create(attributes);\r\n    })\r\n};\r\n\r\nexport default addAnswer;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Button, Row, Col, Alert, Spinner } from 'reactstrap';\r\n\r\nimport getPlayer from '../use_cases/getPlayer';\r\nimport addAnswer from '../use_cases/addAnswer';\r\nimport getGame from '../use_cases/getGame';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\nconst SECONDS_TO_CHOOSE = 3;\r\n\r\n\r\nconst AnswerGrid = ({ recordAnswer, isAnswerDisabled }) => {\r\n  return (\r\n    <Row>\r\n      {\r\n        ['A', 'B', 'C', 'D'].map((ans) =>\r\n          <Col sm={12} md={6} className=\"mb-4\" key={ans}>\r\n            <Button\r\n              color='info'\r\n              outline\r\n              className=\"w-100 h-100\"\r\n              onClick={() => recordAnswer(ans)}\r\n              disabled={isAnswerDisabled}>\r\n                <strong>{ans}</strong>\r\n            </Button>\r\n          </Col>\r\n        )\r\n      }\r\n    </Row>\r\n  )\r\n}\r\n\r\nconst PlayerRoute = () => {\r\n  let { gameId, playerId } = useParams()\r\n  const [currentGame, setCurrentGame] = useState();\r\n  const [playerName, setPlayerName] = useState('')\r\n  const [answer, setAnswer] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [isAnswerDisabled, setIsAnswerDisabled] = useState(false);\r\n\r\n  const handleGameChange = (game) => {\r\n    if (game) {\r\n      // workaround to clear answer\r\n      setAnswer(null);\r\n      setCurrentGame(game);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (gameId && playerId) {\r\n      getGame(gameId, handleGameChange);\r\n      getPlayer(playerId, { gameId })\r\n        .then(player => setPlayerName(player.name))\r\n    }\r\n  }, [gameId, playerId])\r\n\r\n  const recordAnswer = ans => {\r\n    // playerName is for convenience later, though it feels a little like this knows more about the store than it should\r\n    if (isAnswerDisabled) {\r\n      // If answer selection is disabled, do nothing\r\n      return;\r\n    }\r\n    setIsAnswerDisabled(true); // Disable answer selection\r\n    addAnswer({ playerId, playerName, gameId, choice: ans })\r\n      .then(answer => {\r\n        setAnswer(answer);\r\n        setTimeout(() => {\r\n          setAnswer(null); // Clear the answer after the timeout\r\n          setIsAnswerDisabled(false); // Enable answer selection after the timeout\r\n        }, SECONDS_TO_CHOOSE * 1000);\r\n      })\r\n      .catch(e => {\r\n        setErrorMessage(e);\r\n        setTimeout(() => {\r\n          setErrorMessage('');\r\n          setIsAnswerDisabled(false); // Enable answer selection after an error\r\n        }, 5000);\r\n      });\r\n    }\r\n\r\n  switch (currentGame ? currentGame.state : null) {\r\n    case 'pendingQuestion':\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          <div>\r\n            <a>準備回答下一題</a>\r\n            <Spinner\r\n              color=\"info\"\r\n              type=\"grow\"\r\n              size=\"sm\"\r\n            >\r\n              Loading...\r\n            </Spinner>\r\n            <a>請看投影喔!</a>\r\n          </div>\r\n        </CenteredContainer>\r\n      )\r\n    case 'showingQuestion':\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          <Row className=\"mb-4\">\r\n            <Col sm={12}>\r\n              <h2>Hi {playerName}!</h2>\r\n              <h3>請看投影選擇答案:</h3>\r\n            </Col>\r\n          </Row>\r\n          <AnswerGrid \r\n            recordAnswer={recordAnswer} \r\n            isAnswerDisabled={isAnswerDisabled}\r\n          />\r\n          {errorMessage ? <Alert color=\"danger\">{errorMessage}</Alert> : null}\r\n          {answer && isAnswerDisabled ? (\r\n            \r\n            <Row className=\"mb-4\">\r\n              <Col sm={12}>\r\n                <h2>你選了 {answer.choice}!</h2>                \r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <></>\r\n          )\r\n          }\r\n          \r\n        </CenteredContainer>\r\n      );\r\n    case 'showingQuestionResults':\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          <div>\r\n            <a>顯示回答結果</a>\r\n            <Spinner\r\n              color=\"info\"\r\n              type=\"grow\"\r\n              size=\"sm\"\r\n            >\r\n              Loading...\r\n            </Spinner>\r\n            <a>請看投影喔!</a>\r\n          </div>\r\n        </CenteredContainer>\r\n      );\r\n\r\n    default:\r\n      return (\r\n        <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n          <div>\r\n            <a>等待課程開始</a>\r\n            <Spinner\r\n              color=\"info\"\r\n              type=\"grow\"\r\n              size=\"sm\"\r\n            >\r\n              Loading...\r\n            </Spinner>\r\n            <a>開始後請看投影喔!</a>\r\n          </div>\r\n        </CenteredContainer>\r\n      )\r\n  }\r\n}\r\n\r\nexport default PlayerRoute\r\n","import PlayerStore from '../store/PlayerStore';\r\nimport GameStore from '../store/GameStore';\r\n\r\n\r\nconst getLobbyPlayers = (gameId, onChange, playerStore = new PlayerStore(), gameStore = new GameStore()) => {\r\n  gameStore.update(gameId, { state: 'waitingForPlayers' });\r\n  return playerStore.list({ gameId }, onChange);\r\n};\r\n\r\nexport default getLobbyPlayers;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { Button, ListGroup, ListGroupItem, Spinner } from 'reactstrap';\r\nimport qrcode from \"qrcode\";\r\nimport getLobbyPlayers from '../use_cases/getLobbyPlayers';\r\nimport getGame from '../use_cases/getGame';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport styles from './HomeRoute/styles.module.css'\r\nimport { Grid, Modal } from 'semantic-ui-react';\r\n\r\n\r\nconst PlayerList = ({ players }) => {\r\n  return (\r\n    <div>\r\n      <a style={{fontSize: 28, fontWeight: \"bold\"}}>正在等待學生加入</a>\r\n      <Spinner\r\n        color=\"dark\"\r\n        type=\"grow\"\r\n      >\r\n        Loading...\r\n      </Spinner>\r\n      <h1>已有&nbsp;<a className=\"display-3\">{players.length}</a>&nbsp;位學生加入</h1>\r\n      <ListGroup>\r\n        {\r\n          players.map(player => (\r\n            <ListGroupItem key={player.id}>{player.name}</ListGroupItem>\r\n          ))\r\n        }\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst QRCode = ({ imageSize }) => {\r\n  const [qrcodeData, setQRCodeData] = useState(null);\r\n  const canvasRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n  const currentUrl = window.location.href;\r\n  const QRUrl = currentUrl.replace(\"lobby\", \"join\");\r\n\r\n  useEffect(() => {\r\n    const generateQRCode = async (url) => {\r\n      try {\r\n        const dataURL = await qrcode.toDataURL(url);\r\n        setQRCodeData(dataURL);\r\n      } catch (error) {\r\n        console.error(\"QR code generation error:\", error);\r\n      }\r\n    };\r\n\r\n    generateQRCode(QRUrl);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (qrcodeData) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const img = new Image();\r\n      img.src = qrcodeData;\r\n\r\n      img.onload = () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.drawImage(img, 0, 0);\r\n      };\r\n    }\r\n  }, [qrcodeData]);\r\n\r\n  return (\r\n    <div className=\"qr-code-container\">\r\n      <canvas ref={canvasRef} width={imageSize} height={imageSize} style={{ display: 'none' }}/>\r\n      <img ref={imageRef} src={qrcodeData} alt=\"QR Code\" className=\"qr-code-image\" style={{ width: imageSize, height: imageSize }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LobbyRoute = props => {\r\n  let { gameId } = useParams();\r\n  const [players, setPlayers] = useState([]);\r\n  const [game, setGame] = useState(null);\r\n  const currentUrl = window.location.origin;\r\n  const displayUrl = `${currentUrl.replace(\"https://\", \"\")}/Avatar-classroom/#/join-s/`;\r\n  const joinUrl = `${currentUrl}/Avatar-classroom/#/join-s/`;\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (gameId) {\r\n      getLobbyPlayers(gameId, setPlayers);\r\n      getGame(gameId).then(setGame);\r\n    }\r\n  }, [gameId])\r\n\r\n  return (\r\n    <Grid>\r\n      \r\n      <Grid.Row centered columns={2}>\r\n        \r\n        <Grid.Column className='mr-2' width={7}>\r\n          <Grid.Row>\r\n          <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n            \r\n            <h2>\r\n              加入遊戲請前往\r\n              <br/>\r\n              <a href={joinUrl} rel=\"noopener noreferrer\" target=\"_blank\">{displayUrl}</a> \r\n              <br/>\r\n              並輸入房間代碼\r\n            </h2>\r\n          </CenteredContainer>\r\n          </Grid.Row>\r\n          <Grid.Row verticalAlign='middle'>\r\n            <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n              <br/>\r\n            <h1 className={styles.hero_heading} style={{fontSize:60}}>\r\n              <strong>{game ? game.shortCode : \"___\"}</strong>\r\n            </h1>\r\n            </CenteredContainer>\r\n          </Grid.Row>\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n          <h2>\r\n            或掃描 QR code&nbsp;\r\n            <Button \r\n              outline\r\n              color=\"dark\"\r\n              onClick={() => setIsModalOpen(true)}\r\n            >\r\n              放大\r\n            </Button>\r\n          </h2>\r\n          <Modal basic open={isModalOpen} onClose={() => setIsModalOpen(false)}>\r\n            <Button\r\n              close\r\n              color='primary'\r\n              onClick={() => setIsModalOpen(false)}\r\n            ></Button>\r\n            <CenteredContainer>\r\n              <QRCode imageSize=\"700px\"/>\r\n            </CenteredContainer>\r\n          </Modal>\r\n          <QRCode />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n            <Link to={`/host/${gameId}/questions/pending`}>\r\n              <Button size='lg' color=\"primary\">開始</Button>\r\n            </Link>\r\n        </CenteredContainer>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <CenteredContainer verticalCentered={true} maxWidth={800}>\r\n          <PlayerList players={players} />\r\n        </CenteredContainer>\r\n      </Grid.Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default LobbyRoute\r\n","import BaseStore from './BaseStore';\r\n\r\nclass UserStore extends BaseStore {\r\n  create(attributes = {}) {\r\n    const { email, password } = attributes;\r\n\r\n    return this.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const firebaseUser = userCredentials.user;\r\n        return this._convertUser(firebaseUser);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // auth/email-already-in-use\r\n        // auth/invalid-email\r\n        // auth/operation-not-allowed\r\n        if (errorCode === 'auth/weak-password') {\r\n          alert('The password is too weak.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n      });\r\n  }\r\n\r\n  login({ email, password }) {\r\n    return this.auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const firebaseUser = userCredentials.user;\r\n        return this._convertUser(firebaseUser);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // auth/email-already-in-use\r\n        // auth/invalid-email\r\n        // auth/operation-not-allowed\r\n        if (errorCode === 'auth/weak-password') {\r\n          alert('The password is too weak.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n      });\r\n  }\r\n\r\n  onCurrentUserChange(handleChange) {\r\n    this.auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        handleChange(this._convertUser(user));\r\n      }\r\n    })\r\n  }\r\n\r\n  _convertUser(firebaseUser) {\r\n    return {\r\n      id: firebaseUser.uid,\r\n      email: firebaseUser.email,\r\n      name: firebaseUser.displayName,\r\n    };\r\n  }\r\n}\r\n\r\nexport default UserStore;\r\n","import UserStore from \"../store/UserStore\";\r\n\r\nconst signupUser = ({ email, password }) => {\r\n  const userStore = new UserStore();\r\n\r\n  return userStore.create({ email, password });\r\n}\r\n\r\nexport default signupUser;\r\n","import UserStore from \"../store/UserStore\";\r\n\r\nconst loginUser = ({ email, password }) => {\r\n  const userStore = new UserStore();\r\n\r\n  return userStore.login({ email, password });\r\n}\r\n\r\nexport default loginUser;\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport signupUser from '../use_cases/signupUser';\r\nimport loginUser from '../use_cases/loginUser';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\nconst handleSubmit = (event, { email, password, authFn, successCallback }) => {\r\n  event.preventDefault();\r\n  authFn({ email, password })\r\n    .then(user => successCallback(user))\r\n}\r\n\r\nconst SignupForm = ({ onUserChange }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  return (\r\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: signupUser, successCallback: onUserChange })}>\r\n      <FormGroup>\r\n        <Label for=\"email\">Email:</Label>\r\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Password:</Label>\r\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n      </FormGroup>\r\n      <Button color=\"primary\">Sign Up</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst LoginForm = ({ onUserChange }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  return (\r\n    <Form className=\"mb-5\" onSubmit={f => handleSubmit(f, { email, password, authFn: loginUser, successCallback: onUserChange })}>\r\n      <FormGroup>\r\n        <Label for=\"email\">Email:</Label>\r\n        <Input id=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Password:</Label>\r\n        <Input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n      </FormGroup>\r\n      <Button color=\"primary\">Login</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst LoginRoute = props => {\r\n  const [isExistingUser, setIsExistingUser] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const toggleForm = event => {\r\n    event.preventDefault();\r\n    setIsExistingUser(!isExistingUser);\r\n  }\r\n\r\n  if (user) {\r\n    return <Navigate to='/games' />\r\n  } else if (isExistingUser) {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered>\r\n        <h1>Login to Cahoots!</h1>\r\n        <LoginForm onUserChange={setUser} />\r\n        <div>\r\n          No account? <br />\r\n          <Button color=\"link\" onClick={toggleForm}>Sign Up!</Button>\r\n        </div>\r\n      </CenteredContainer>\r\n    );\r\n  } else {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered>\r\n        <h1>Signup for Cahoots!</h1>\r\n        <SignupForm onUserChange={setUser} />\r\n        <div>\r\n          Have an account? <br />\r\n          <Button color=\"link\" onClick={toggleForm}>Login</Button>\r\n        </div>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginRoute\r\n","import UserStore from \"../store/UserStore\";\r\n\r\nconst getCurrentUser = () => {\r\n  const userStore = new UserStore();\r\n\r\n  return new Promise(resolve => userStore.onCurrentUserChange(resolve));\r\n}\r\n\r\nexport default getCurrentUser;\r\n","\r\nimport GameStore from \"../store/GameStore\";\r\nimport getCurrentUser from \"./getCurrentUser\";\r\n\r\n\r\nconst getCurrentUserGames = () => {\r\n  const gameStore = new GameStore();\r\n\r\n  return getCurrentUser().then(user => user ? gameStore.list({ ownerId: user.id }) : null);\r\n}\r\n\r\nexport default getCurrentUserGames;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport getCurrentUserGames from '../use_cases/getCurrentUserGames';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst MyGamesRoute = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [redirectUrl, setRedirectUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCurrentUserGames().then(setGames);\r\n  }, []);\r\n\r\n  if (redirectUrl) {\r\n    return <Navigate to={redirectUrl} />;\r\n  } else {\r\n    return (\r\n      <Container style={{maxWidth: \"500px\"}}>\r\n        <h1>我的課程</h1>\r\n        <ListGroup>\r\n          {\r\n            games.map(game => (\r\n              <ListGroupItem\r\n                key={game.id}\r\n                onClick={() => setRedirectUrl(`/games/${game.id}`)}\r\n                tag=\"button\"\r\n                action\r\n              >\r\n                {game.name}\r\n              </ListGroupItem>\r\n            ))\r\n          }\r\n          <ListGroupItem\r\n            onClick={() => setRedirectUrl('/games/create')}\r\n            tag=\"button\"\r\n            color=\"info\"\r\n            action\r\n          >\r\n            創建新課程\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyGamesRoute\r\n","import GameStore from '../store/GameStore';\r\n\r\n\r\nconst createGame = (attributes, gameStore = new GameStore()) => {\r\n  // generate a random shortcode\r\n  const shortCode = String(Math.floor(Math.random() * Math.floor(9999)));\r\n  return gameStore.create(Object.assign({ shortCode }, attributes));\r\n};\r\n\r\nexport default createGame;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport getCurrentUser from '../use_cases/getCurrentUser';\r\nimport createGame from '../use_cases/createGame';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nconst save = (gameAttributes, onCreate) => {\r\n  return createGame(gameAttributes).then(onCreate);\r\n}\r\n\r\nconst CreateGameRoute = props => {\r\n  const [user, setUser] = useState(null);\r\n  const [gameName, setGameName] = useState('');\r\n  const [game, setGame] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCurrentUser().then(setUser);\r\n  }, []);\r\n\r\n  if (game) {\r\n    return <Navigate to=\"/games\" />;\r\n  } else {\r\n    return (\r\n      <Container style={{maxWidth: \"500px\"}}>\r\n        <h1>創建您的課程</h1>\r\n        <FormGroup>\r\n          <Label for=\"name\">課程名稱:</Label>\r\n          <Input id=\"name\" name=\"name\" value={gameName} onChange={e => setGameName(e.target.value)} />\r\n        </FormGroup>\r\n        <Button color=\"primary\" onClick={() => save({ name: gameName, ownerId: user.id }, setGame)}>確認</Button>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateGameRoute\r\n","import QuestionStore from \"../store/QuestionStore\";\r\n\r\nconst getQuestions = (scopes) => {\r\n  const questionStore = new QuestionStore();\r\n  return questionStore.list(scopes)\r\n};\r\n\r\nexport default getQuestions;\r\n","import QuestionStore from \"../store/QuestionStore\";\r\nimport { popKey } from '../utils/popKey';\r\n\r\n/**\r\n * Creates a new Question or saves an existing one.\r\n *\r\n * @param {Object} attributes - should minimally contain `gameId`. If no `id` is included, is assumed to be a new Question\r\n * @returns Promise - resolves to either Object or void\r\n */\r\nconst saveQuestion = (attributes, questionStore = new QuestionStore()) => {\r\n  let attributesCopy = Object.assign({}, attributes);\r\n\r\n  if ('id' in attributesCopy) {\r\n    const questionId = popKey(attributesCopy, 'id');\r\n    return questionStore.update(questionId, attributesCopy);\r\n  } else {\r\n    return questionStore.create(attributesCopy);\r\n  }\r\n};\r\n\r\nexport default saveQuestion;\r\n","import { doc, deleteDoc } from \"firebase/firestore\";\r\nimport firebase from \"../utils/firebase\";\r\nimport { useParams } from \"react-router-dom\"\r\n\r\n\r\nconst deleteQuestion = async (questionId, gameId) => {\r\n    \r\n    const db = firebase.firestore();\r\n    \r\n    try {\r\n        await deleteDoc(doc(db, 'games', gameId, 'questions', questionId))\r\n        window.location.reload();\r\n    } catch (error) {\r\n        throw new Error('Error deleting question: ' + error.message);\r\n    }\r\n};\r\n\r\nexport default deleteQuestion;\r\n","import React, { useState, useParams } from 'react';\r\nimport { InputGroup, InputGroupAddon, InputGroupText, Input, Card, CardTitle, Button, Spinner, FormGroup, Label } from 'reactstrap';\r\nimport saveQuestion from '../use_cases/saveQuestion';\r\nimport deleteQuestion from '../use_cases/deleteQuestion';\r\n\r\nconst STATE_DEFAULT = 'default';\r\nconst STATE_SAVING = 'saving';\r\n\r\n\r\nexport const EditableQuestion = ({ question, game }) => {\r\n  const [draftQuestion, setDraftQuestion] = useState(question)\r\n  const [componentState, setComponentState] = useState(STATE_DEFAULT);\r\n\r\n  const updateDraft = (newAttributes) => {\r\n    setDraftQuestion(Object.assign({}, draftQuestion, newAttributes));\r\n  }\r\n\r\n  const handleDeleteQuestion = async () => {\r\n    setComponentState(STATE_SAVING);\r\n    try {\r\n      await deleteQuestion(draftQuestion.id, game); // Replace 'draftQuestion.id' with the appropriate way to identify the question in Firebase.\r\n      // Assuming 'deleteQuestion' function deletes the question in Firebase.\r\n      setComponentState(STATE_DEFAULT);\r\n      // Optionally, you can clear the draftQuestion state or handle any other cleanup.\r\n    } catch (error) {\r\n      console.error(\"Error deleting question\", error);\r\n      setComponentState(STATE_DEFAULT);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Card body className=\"mt-4 mb-4\">\r\n        <CardTitle>\r\n          <InputGroup className=\"mb-2\">\r\n            <Input\r\n              type=\"textarea\"\r\n              placeholder=\"請輸入完整題目\"\r\n              value={draftQuestion.text || ''}\r\n              onChange={e => updateDraft({ text: e.target.value })}\r\n            />\r\n          </InputGroup>\r\n        </CardTitle>\r\n        {['answerA', 'answerB', 'answerC', 'answerD'].map((ansKey) => (\r\n          <InputGroup key={ansKey} className=\"mb-2\">\r\n            <InputGroupAddon addonType=\"prepend\">\r\n              <InputGroupText>{ansKey}</InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input\r\n              placeholder=\"請輸入選項\"\r\n              value={ansKey in draftQuestion ? draftQuestion[ansKey] : ''}\r\n              onChange={e => updateDraft({[ansKey]: e.target.value})}\r\n            />\r\n          </InputGroup>\r\n        ))}\r\n        <FormGroup>\r\n          <Label for=\"correctAnswerDropdown\">正確答案</Label>\r\n          <Input\r\n            type=\"select\"\r\n            name=\"correctAnswer\"\r\n            id=\"correctAnswerDropdown\"\r\n            data-testid=\"correctAnswerDropdown\"\r\n            value={draftQuestion.correctAnswer || '選擇正確答案'}\r\n            onChange={e => updateDraft({ correctAnswer: e.target.value })}\r\n          >\r\n            <option>A</option>\r\n            <option>B</option>\r\n            <option>C</option>\r\n            <option>D</option>\r\n            <option hidden>選擇正確答案</option>\r\n          </Input>\r\n        </FormGroup>\r\n        {componentState === STATE_SAVING ?\r\n          <Button disabled color=\"primary\" className=\"mt-4\">\r\n            <Spinner type=\"grow\" size=\"sm\" color=\"info\" className=\"mr-2\" />\r\n            保存中...\r\n          </Button>\r\n          :\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"mt-4\"\r\n            onClick={() => {\r\n              setComponentState(STATE_SAVING);\r\n              saveQuestion(draftQuestion).then(() => setComponentState(STATE_DEFAULT));\r\n            }}\r\n          >\r\n            保存\r\n          </Button>\r\n          \r\n        }\r\n        <Button\r\n          color=\"danger\"\r\n          className=\"mt-4\"\r\n          onClick={handleDeleteQuestion}\r\n          disabled={componentState === STATE_SAVING}\r\n        >\r\n          {componentState === STATE_SAVING ? (\r\n            <>\r\n              <Spinner type=\"grow\" size=\"sm\" color=\"info\" className=\"mr-2\" />\r\n              刪除中...\r\n            </>\r\n          ) : (\r\n            \"刪除題目\"\r\n          )}\r\n        </Button>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Container } from 'reactstrap';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport getGame from '../use_cases/getGame';\r\nimport getQuestions from '../use_cases/getQuestions';\r\nimport { EditableQuestion } from '../view_components/EditableQuestion';\r\nimport saveQuestion from '../use_cases/saveQuestion';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport { doc, deleteDoc } from \"firebase/firestore\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\n\r\nconst GameDetailsRoute = props => {\r\n  const { gameId } = useParams();\r\n  const [game, setGame] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const handleDeleteGame = async () => {\r\n    if (gameId && game) {\r\n      try {\r\n        const db = firebase.firestore();        \r\n        await deleteDoc(doc(db, \"games\", gameId));        \r\n        navigate('/games');\r\n      } catch (error) {\r\n        console.error('刪除遊戲時發生錯誤', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (gameId && game === null) {\r\n      getGame(gameId)\r\n        .then(game => {\r\n          setGame(game);\r\n          return game;\r\n        })\r\n        .then(game => getQuestions({ gameId: game.id }))\r\n        .then(setQuestions);\r\n    }\r\n  }, [gameId, game]);\r\n\r\n  if (game) {\r\n    return (\r\n      <CenteredContainer maxWidth={500}>\r\n        <h1 className=\"mb-4\">{game.name}</h1>\r\n        <Container>\r\n          {questions.length > 0 ? (\r\n            <Link to={`/lobby/${gameId}`}>\r\n              <Button color=\"success\" size=\"lg\">\r\n                開始課程\r\n              </Button>\r\n            </Link>\r\n          ) : null}\r\n          <br/><br/>\r\n          <Button color=\"primary\" onClick={() => setEditMode(!editMode)}>\r\n            {editMode ? '結束編輯' : '編輯課程'}\r\n          </Button>\r\n          <br/><br/>\r\n          <Button\r\n            style={{ marginBottom: 20 }}\r\n            onClick={handleDeleteGame}\r\n            color=\"danger\"\r\n          >\r\n            刪除課程\r\n          </Button>\r\n        </Container>\r\n        {editMode && (\r\n          <Container>\r\n            {questions.map((question) => (\r\n              <EditableQuestion key={question.id} question={question} game={gameId} />\r\n            ))}\r\n            <Container>\r\n              <Button\r\n                onClick={() => {\r\n                  saveQuestion({ gameId: gameId, order: questions.length + 1 }).then((newQn) =>\r\n                    setQuestions(questions.concat([newQn]))\r\n                  );\r\n                }}\r\n              >\r\n                新增題目\r\n              </Button>\r\n              <br/>\r\n            </Container>\r\n          </Container>\r\n        )}\r\n      </CenteredContainer>\r\n    );\r\n  } else {\r\n    return (<CenteredContainer maxWidth={500}>Loading...</CenteredContainer>)\r\n  }\r\n}\r\n\r\nexport default GameDetailsRoute\r\n","import GameStore from '../store/GameStore';\r\nimport QuestionStore from '../store/QuestionStore';\r\n\r\nconst startNextQuestion = (gameId) => {\r\n  const gameStore = new GameStore();\r\n  const questionStore = new QuestionStore();\r\n\r\n  gameStore.update(gameId, { state: 'pendingQuestion' });\r\n  return gameStore\r\n    .get(gameId)\r\n    .then(game => {\r\n      if ('currentQuestion' in game) {\r\n        return questionStore.get(game.currentQuestion);\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n    })\r\n    .then(currentQuestion => {\r\n      const nextOrder = currentQuestion ? currentQuestion.order : 0 ;\r\n      return questionStore.list({ gameId, from: nextOrder, limit: 1 });\r\n    })\r\n    .then(questionArray => {\r\n      const question = questionArray[0];\r\n      if (question) {\r\n        gameStore.update(gameId, { currentQuestionId: question.id });\r\n      }\r\n\r\n      return question;\r\n    });\r\n}\r\n\r\nexport default startNextQuestion;","const calculateTimeLeft = date => {\r\n  const difference = (date - Date.now()) / 1000;\r\n  return difference > 0 ? difference : 0;\r\n};\r\n\r\nconst tickTimer = ({ endDate, intervalCallback, endedCallback }) => {\r\n  setTimeout(() => {\r\n    // timeLeft is in seconds\r\n    const timeLeft = calculateTimeLeft(endDate);\r\n    if (timeLeft > 0) {\r\n      intervalCallback(timeLeft);\r\n      tickTimer({ endDate, intervalCallback, endedCallback });\r\n    }\r\n    else {\r\n      endedCallback(timeLeft);\r\n    }\r\n  }, 1000);\r\n};\r\n\r\nexport const startTimer = ({ seconds, intervalCallback, endedCallback }) => {\r\n  const endDate = new Date(Date.now() + 1000 * seconds);\r\n  tickTimer({ endDate, intervalCallback, endedCallback });\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Navigate } from \"react-router-dom\"\r\n\r\nimport startNextQuestion from '../use_cases/startNextQuestion';\r\nimport { startTimer } from '../utils/calculateTimeLeft';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\nconst SECONDS_TO_QUESTION = 3;\r\n\r\nconst PendingQuestionRoute = ({ parentUrl }) => {\r\n  let { gameId } = useParams();\r\n  const [ timeLeft, setTimeLeft ] = useState(SECONDS_TO_QUESTION);\r\n  const [ nextQuestion, setNextQuestion ] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (gameId) {\r\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\r\n      startNextQuestion(gameId).then(setNextQuestion);\r\n    }\r\n  }, [gameId])\r\n  let url = \"/host/\" + gameId;\r\n  return (\r\n    <CenteredContainer verticalCentered={true}>\r\n      <div style={{fontSize: 25}}>下一題...</div>\r\n      <div className=\"display-1 mt-4\">\r\n        {Math.ceil(timeLeft)}\r\n      </div>\r\n      {timeLeft <= 0 && nextQuestion\r\n        ? <Navigate to={`${url}/questions/current`} />\r\n        : null\r\n      }\r\n    </CenteredContainer>\r\n  )\r\n}\r\n\r\nexport default PendingQuestionRoute","import QuestionStore from \"../store/QuestionStore\";\r\n\r\nconst getQuestion = (questionId, scopes, questionStore = new QuestionStore()) => {\r\n  return questionStore.get(questionId, scopes)\r\n};\r\n\r\nexport default getQuestion;\r\n","import GameStore from '../store/GameStore';\r\nimport AnswerStore from '../store/AnswerStore';\r\n\r\nconst calculateQuestionResults = (gameId, questionId, gameStore = new GameStore(), answerStore = new AnswerStore()) => {\r\n  gameStore.update(gameId, { state: 'showingQuestionResults' });\r\n  return answerStore\r\n    .list({ gameId, questionId })\r\n    .then(answers => {\r\n      \r\n      let results = { 'A': [], 'B': [], 'C': [], 'D': []};\r\n\r\n      const latestAnswers = answers.reduce((acc, answer) => {\r\n        if (!acc[answer.playerName] || answer.timestamp > acc[answer.playerName].timestamp) {\r\n          acc[answer.playerName] = answer;\r\n        }\r\n        return acc;\r\n      }, {});\r\n\r\n      Object.values(latestAnswers).forEach(answer => {\r\n        results[answer.choice] = results[answer.choice].concat(answer.playerName);\r\n      });\r\n\r\n      return results;\r\n    });\r\n}\r\n\r\nexport default calculateQuestionResults;\r\n","import QuestionStore from '../store/QuestionStore';\r\n\r\nconst countTotalQuestions = (gameId) => {\r\n  const questionStore = new QuestionStore();\r\n  return questionStore\r\n    .list({ gameId })\r\n    .then(questions => questions.length);\r\n}\r\n\r\nexport default countTotalQuestions;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { Button, Card, CardBody, Row, Col, CardTitle, CardText, Container } from 'reactstrap';\r\n\r\nimport getQuestion from '../use_cases/getQuestion';\r\nimport calculateQuestionResults from '../use_cases/calculateQuestionResults';\r\nimport countTotalQuestions from '../use_cases/countTotalQuestions';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\nconst isCorrectChoice = (question, choice) => {\r\n  return question.correctAnswer === choice;\r\n}\r\n\r\nconst ResultBoard = ({ result, className, question }) => {\r\n  return (\r\n    <div className={className}>\r\n      <h2 className=\"mb-4\">{question ? question.text : null}</h2>\r\n      <Row>\r\n        {\r\n          Object.entries(result).map(([answer, players]) => (\r\n            <Col sm={12} md={6} className=\"mb-4\">\r\n              <Card\r\n                color={isCorrectChoice(question, answer) ? 'success' : null}\r\n                inverse={isCorrectChoice(question, answer) ? true : null}\r\n              >\r\n                <CardBody>\r\n                  <CardTitle >\r\n                    <strong className='mr-2' style={{fontSize: 20}}>{answer}</strong>\r\n                    {isCorrectChoice(question, answer) ? '✔️' : '❌'}\r\n                  </CardTitle>\r\n                  <CardTitle>\r\n                    <strong style={{fontSize: 17}}>\r\n                      {question[`answer${answer}`]}\r\n                    </strong>\r\n                  </CardTitle>\r\n                  <CardText style={{fontSize: 17}}>\r\n                    {players.join(', ')}\r\n                  </CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        }\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst QuestionResultsRoute = ({ parentUrl }) => {\r\n  let { gameId, questionId } = useParams()\r\n  let [result, setResult] = useState({})\r\n  let [question, setQuestion] = useState(null)\r\n  let [totalQuestionCount, setTotalQuestionCount] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (gameId && questionId) {\r\n      getQuestion(questionId, { gameId }).then(setQuestion);\r\n      countTotalQuestions(gameId).then(setTotalQuestionCount);\r\n      calculateQuestionResults(gameId, questionId).then(setResult);\r\n    }\r\n  }, [gameId, questionId])\r\n  let url = \"/host/\" + gameId;\r\n  return (\r\n    <CenteredContainer verticalCentered={true}>\r\n      <ResultBoard className=\"mb-4\" result={result} question={question} />\r\n      <Container>\r\n        {question && question.order >= totalQuestionCount ?\r\n          <Link to={`${url}/results/final`}>\r\n            <Button color=\"primary\">\r\n              顯示課程最終結果\r\n            </Button>\r\n          </Link>\r\n          :\r\n          <Link to={`${url}/questions/pending`}>\r\n            <Button color=\"primary\">\r\n              下一題\r\n            </Button>\r\n          </Link>\r\n        }\r\n      </Container>\r\n    </CenteredContainer>\r\n  )\r\n}\r\n\r\nexport default QuestionResultsRoute\r\n\r\n// no result, no question, start button\r\n// no result, question, no buttons if time out, else show button if within time\r\n// have result, show result, hide question, next button (clears result)\r\n","import AnswerStore from '../store/AnswerStore';\r\nimport GameStore from '../store/GameStore';\r\nconst gameStore = new GameStore()\r\n\r\n/**\r\n * Saves an Answer.\r\n *\r\n * @param {Object} attributes\r\n * @returns Object - an \"Answer\"\r\n */\r\nconst calculateFinalResults = (gameId) => {\r\n  const answerStore = new AnswerStore();\r\n\r\n  gameStore.update(gameId, { state: 'draft' });\r\n  \r\n  return answerStore.list({ gameId })\r\n    .then(answers => {\r\n      return answers\r\n        .filter(val => 'isCorrect' in val && !!val.isCorrect)\r\n        .reduce((acc, curr) => {\r\n          if (curr.playerName in acc) {\r\n            acc[curr.playerName] += 1;\r\n          } else {\r\n            acc[curr.playerName] = 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n    })\r\n};\r\n\r\nexport default calculateFinalResults;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { ListGroup, ListGroupItem, Badge, Button, Container } from 'reactstrap';\r\nimport calculateFinalResults from '../use_cases/calculateFinalResults';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\n\r\n// Compares two Arrays of playerName, score in terms of ascending score.\r\nconst sortScores = (a, b) => {\r\n  const [, score1] = a;\r\n  const [, score2] = b;\r\n\r\n  if (score1 > score2) {\r\n    return -1;\r\n  }\r\n  if (score1 < score2) {\r\n    return 1;\r\n  }\r\n  // a must be equal to b\r\n  return 0;\r\n}\r\n\r\nconst Leaderboard = ({ results }) => {\r\n  let scores = Object.entries(results);\r\n  scores.sort(sortScores);\r\n\r\n  return (\r\n    <ListGroup>\r\n      {\r\n        scores.slice(0, 5).map(([key, value], index) => {\r\n          if (index <= 2) {\r\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\" style={{fontSize: 17}}>{key}<Badge className=\"ml-4 p-2\" color=\"success\">{value}</Badge></ListGroupItem>;\r\n          } else {\r\n            return <ListGroupItem key={key} className=\"d-flex justify-content-between\">{key}<Badge className=\"ml-4 p-2\">{value}</Badge></ListGroupItem>;\r\n          }\r\n        })\r\n      }\r\n    </ListGroup>\r\n\r\n  );\r\n}\r\n\r\nconst FinalResultsRoute = props => {\r\n  let { gameId } = useParams()\r\n  let [results, setResults] = useState({})\r\n  \r\n  useEffect(() => {\r\n    if (gameId) {\r\n      calculateFinalResults(gameId).then(setResults);\r\n    }\r\n  }, [gameId])\r\n  \r\n  return (\r\n    <CenteredContainer verticalCentered={true} maxWidth={500}>\r\n      <h1>\r\n        課程結果\r\n      </h1>\r\n      <Leaderboard results={results} />\r\n      <br/>\r\n      <Container>\r\n        <Link to={`/games`}>\r\n          <Button color=\"primary\"> \r\n            回題目列表\r\n          </Button>\r\n        </Link>\r\n        \r\n      </Container>\r\n      <br/>\r\n      <Container>\r\n        <Link to={`/`}>\r\n          <Button color=\"primary\"> \r\n            回首頁\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </CenteredContainer>\r\n    \r\n  )\r\n  \r\n}\r\n\r\nexport default FinalResultsRoute\r\n","import GameStore from '../store/GameStore';\r\nimport QuestionStore from '../store/QuestionStore';\r\n\r\nconst showCurrentQuestion = (gameId, gameStore = new GameStore(), questionStore = new QuestionStore()) => {\r\n  gameStore.update(gameId, { state: 'showingQuestion' });\r\n  return gameStore\r\n    .get(gameId)\r\n    .then(game => {\r\n      return questionStore.get(game.currentQuestion)\r\n    });\r\n}\r\n\r\nexport default showCurrentQuestion;\r\n","import React from 'react'\r\nimport { Card, CardBody, Row, Col, CardTitle, CardText } from 'reactstrap';\r\n\r\n\r\n\r\nconst Question = ({ question, className }) => (\r\n  <div className={className}>\r\n    <h2 className=\"mb-4\" style={{fontSize: 24}}>{question.text}</h2>\r\n    <Row>\r\n      {\r\n        ['A', 'B', 'C', 'D'].map((ans) =>\r\n          <Col key={ans} sm={12} md={6} className=\"mb-4\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle><strong style={{fontSize: 20}}>{ans}</strong></CardTitle>\r\n                <CardText style={{fontSize: 20}}>\r\n                  {question[`answer${ans}`]}\r\n                </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        )\r\n      }\r\n    </Row>\r\n  </div>\r\n)\r\n\r\nexport default Question\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport { Button } from 'reactstrap';\r\n\r\nimport showCurrentQuestion from '../use_cases/showCurrentQuestion'\r\nimport Question from '../view_components/Question'\r\nimport { startTimer } from '../utils/calculateTimeLeft';\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\n\r\nconst SECONDS_TO_QUESTION = 10;\r\n\r\nconst ShowResultsBtn = ({ isVisible, linkTo }) => {\r\n  const handleBtnClick = () => {\r\n    if (isVisible) {\r\n      window.location.href = linkTo;\r\n    }\r\n  };\r\n\r\n  return isVisible ? (\r\n    <Button color=\"primary\" onClick={handleBtnClick}>\r\n      顯示回答結果\r\n    </Button>\r\n  ) : null;\r\n};\r\n\r\nconst CurrentQuestionRoute = ({ parentUrl }) => {\r\n  let { gameId } = useParams();\r\n  const [question, setQuestion] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(SECONDS_TO_QUESTION);\r\n\r\n  useEffect(() => {\r\n    if (gameId) {\r\n      startTimer({ seconds: SECONDS_TO_QUESTION, intervalCallback: setTimeLeft, endedCallback: setTimeLeft });\r\n      showCurrentQuestion(gameId).then(setQuestion);\r\n    }\r\n  }, [gameId])\r\n  //let url = \"/host/\" + gameId ;\r\n  return (\r\n    <CenteredContainer verticalCentered={true}>\r\n      {question ?\r\n          <div>\r\n            <Question question={question} />\r\n            <div className=\"mt-4\">剩餘時間:</div>\r\n            <div className=\"display-1\">\r\n              {Math.ceil(timeLeft)}\r\n            </div>\r\n            <ShowResultsBtn\r\n              isVisible={timeLeft <= 0}\r\n              linkTo={`https://cxw0520.github.io/AC-Three/?GID=${gameId}&QID=${question.id}`}\r\n            />\r\n          </div>\r\n        : <div>請稍等...</div>\r\n      }\r\n    </CenteredContainer>\r\n  )\r\n}\r\n\r\nexport default CurrentQuestionRoute\r\n","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport firebase from \"./utils/firebase\";\r\n\r\nfunction Header(){\r\n    const [user, setUser] = React.useState(null);\r\n    React.useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((currentUser) => {\r\n            setUser(currentUser)\r\n        });\r\n    }, []);\r\n    return (\r\n        <Menu size=\"large\">\r\n            <Menu.Item as={Link} to=\"/\">\r\n                Avatar Classroom\r\n            </Menu.Item>\r\n            \r\n            <Menu.Menu position=\"right\">\r\n                {user ? (\r\n                <>  \r\n                    <Menu.Item as={Link} to =\"/games\">我的課程</Menu.Item>\r\n                    <Menu.Item as={Link} to =\"/join-s\">學生連結</Menu.Item>\r\n                    <Menu.Item as={Link} to =\"/settings\">設定</Menu.Item>\r\n                    <Menu.Item \r\n                        onClick={() => firebase.auth().signOut()} \r\n                        as={Link} to =\"/\"\r\n                    >\r\n                        登出\r\n                    </Menu.Item>\r\n                </> \r\n                ) : (\r\n                <>\r\n                    <Menu.Item as={Link} to =\"/join-s\">學生連結</Menu.Item>\r\n                    <Menu.Item as={Link} to =\"/signin\">註冊/登入</Menu.Item>\r\n                </>\r\n                )}\r\n            </Menu.Menu>\r\n            \r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Menu, Form, Container, Message} from 'semantic-ui-react'\r\nimport firebase from '../utils/firebase';\r\nimport \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Signin(){\r\n    const [activeItem, setActiveItem] = React.useState('register');\r\n    const [email, setEmail]= React.useState('');\r\n    const [password, setPassword]= React.useState('');\r\n    const navigate = useNavigate();\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    \r\n    function onSubmit(){\r\n        setIsLoading(true);\r\n        if(activeItem === 'register'){\r\n            firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(() =>{\r\n                navigate('/');\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                switch(error.code){\r\n                    case 'auth/email-already-in-use':\r\n                        setErrorMessage('信箱已存在');\r\n                        break;\r\n                    case 'auth/invalid-email':\r\n                        setErrorMessage('信箱格式不正確');\r\n                        break;\r\n                    case 'auth/weak-password':\r\n                        setErrorMessage('密碼強度不足');\r\n                        break;\r\n                    default:\r\n                }\r\n                \r\n            });\r\n        }else if(activeItem === 'signin'){\r\n            firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(() =>{\r\n                navigate('/');\r\n                setIsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                console.log(errorCode);\r\n                switch(errorCode){\r\n                    case 'auth/invalid-email':\r\n                        setErrorMessage('信箱格式不正確');\r\n                        break;\r\n                    case 'auth/internal-error':\r\n                        setErrorMessage('此信箱尚未註冊 或 密碼錯誤');\r\n                        setIsLoading(false);\r\n                        break;\r\n                    default:\r\n                }\r\n            \r\n            });\r\n        }\r\n    }\r\n    return(\r\n        <Container>\r\n            <Menu widths=\"2\">\r\n                <Menu.Item \r\n                    active={activeItem === 'register'} \r\n                    onClick={() => {\r\n                        setErrorMessage('');\r\n                        setActiveItem('register');\r\n                    }}\r\n                >\r\n                    註冊\r\n                </Menu.Item>\r\n                <Menu.Item \r\n                    active={activeItem === 'signin'}\r\n                    onClick={() => {\r\n                        setErrorMessage('');\r\n                        setActiveItem('signin');\r\n                    }}\r\n                >\r\n                    登入\r\n                </Menu.Item>\r\n            </Menu>\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Input \r\n                    label=\"信箱\" \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"請輸入信箱\"\r\n                />\r\n                <Form.Input \r\n                    label=\"密碼\" \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"請輸入密碼\"\r\n                    type=\"password\"\r\n                />\r\n                {errorMessage && <Message negative>{errorMessage}</Message>}\r\n                <Form.Button loading={isLoading}>\r\n                    {activeItem === 'register' && '註冊'}\r\n                    {activeItem === 'signin' && '登入'}\r\n                </Form.Button>\r\n                    \r\n            </Form>\r\n        </Container>\r\n    );\r\n    \r\n}\r\n\r\nexport default Signin;","import React, { useState } from \"react\";\r\nimport {\r\n  //CanvasPath,\r\n  //ExportImageType,\r\n  ReactSketchCanvas,\r\n  //ReactSketchCanvasProps,\r\n  //ReactSketchCanvasRef,\r\n} from \"react-sketch-canvas\";\r\nimport firebase from \"../utils/firebase\";\r\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\r\n\r\nconst storage = getStorage();\r\n\r\nconst Handlers = [\r\n  [\"string\", () => {}, \"string\"],\r\n];\r\n\r\nfunction InputField({\r\n  fieldName,\r\n  type = \"text\",\r\n  canvasProps,\r\n  setCanvasProps,\r\n  displayName,\r\n}) {\r\n  const handleChange = ({\r\n    target,\r\n  }) => {\r\n    setCanvasProps((prevCanvasProps) => ({\r\n      ...prevCanvasProps,\r\n      [fieldName]: target.value,\r\n    }));\r\n  };\r\n\r\n  const id = `validation${fieldName}`;\r\n\r\n  return (\r\n    <div className=\"p-0 col-10\">\r\n      <label htmlFor={id} className=\"form-label\">\r\n        {displayName}\r\n      </label>\r\n      <input\r\n        name={fieldName}\r\n        type={type}\r\n        className=\"form-control\"\r\n        id={id}\r\n        value={canvasProps[fieldName]}\r\n        onChange={handleChange}\r\n        min={1}\r\n        max={30}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Draw() {\r\n  const [playUrl, setPlayUrl] = React.useState(\"\");\r\n  const [svgRef, setSvgRef] = React.useState(null);\r\n  React.useEffect(() => {\r\n    const equalParam = window.location.href.lastIndexOf(\"=\") + 1;\r\n    const playUrl = window.location.href.substring(equalParam);\r\n    setPlayUrl(playUrl);\r\n    \r\n    const lastParam = window.location.href.lastIndexOf(\"/\") + 1;\r\n    const SID = window.location.href.substring(lastParam);\r\n    const computedSvgRef = ref(storage, `svgs/${SID + \".svg\"}`);\r\n    setSvgRef(computedSvgRef);\r\n  }, []);\r\n  //console.log(\"playUrl:\", playUrl);\r\n  \r\n  const [canvasProps, setCanvasProps] = React.useState({\r\n    className: \"react-sketch-canvas\",\r\n    width: \"100%\",\r\n    height: \"450PX\",\r\n    backgroundImage:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/7/70/Graph_paper_scan_1600x1000_%286509259561%29.jpg\",\r\n    preserveBackgroundImageAspectRatio: \"none\",\r\n    strokeWidth: 4,\r\n    eraserWidth: 5,\r\n    strokeColor: \"#000000\",\r\n    canvasColor: \"#FFFFFF\",\r\n    style: { borderRight: \"1px solid #CCC\" },\r\n    svgStyle: {},\r\n    exportWithBackgroundImage: false,\r\n    withTimestamp: true,\r\n    allowOnlyPointerType: \"all\",\r\n    withViewBox: false,\r\n  });\r\n\r\n  const inputProps = [\r\n    //[\"className\", \"text\"],\r\n    //[\"width\", \"text\"],\r\n    //[\"height\", \"text\"],\r\n    //[\"backgroundImage\", \"text\"],\r\n    //[\"preserveBackgroundImageAspectRatio\", \"text\"],\r\n    [\"strokeWidth\", \"range\", \"畫筆粗細\"],\r\n    [\"eraserWidth\", \"range\", \"橡皮擦粗細\"],\r\n  ];\r\n\r\n  const canvasRef = React.createRef();\r\n\r\n  const [penButtonOutline, setPenButtonOutline] = React.useState(\"\");\r\n  const [eraserButtonOutline, setEraserButtonOutline] = React.useState(\"outline-\");\r\n  const [dataURI, setDataURI] = React.useState(\"\");\r\n  const [svg, setSVG] = React.useState(\"\");\r\n  const [paths, setPaths] = React.useState([]);\r\n  const [lastStroke, setLastStroke] = React.useState({\r\n    stroke: null,\r\n    isEraser: null,\r\n  });\r\n  //const [pathsToLoad, setPathsToLoad] = React.useState(\"\");\r\n  //const [sketchingTime, setSketchingTime] = React.useState(0);\r\n  const [exportImageType, setexportImageType] = React.useState(\"png\");\r\n\r\n /* const imageExportHandler = async () => {\r\n    const exportImage = canvasRef.current?.exportImage;\r\n\r\n    if (exportImage) {\r\n      const exportedDataURI = await exportImage(exportImageType);\r\n      setDataURI(exportedDataURI);\r\n    }\r\n  };*/\r\n\r\n  const [isDone, setIsDone] = useState(false);\r\n  \r\n  const svgExportHandler = async () => {\r\n    const exportSvg = canvasRef.current?.exportSvg;\r\n\r\n    if (exportSvg) {\r\n      var exportedDataURI = await exportSvg();\r\n      setSVG(exportedDataURI);\r\n      setIsDone(true);\r\n      //console.log(exportedDataURI);\r\n      \r\n      exportedDataURI = exportedDataURI\r\n        .replace('<rect id=\"react-sketch-canvas__mask-background\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\"></rect></g><defs></defs><g id=\"react-sketch-canvas__canvas-background-group\"><rect id=\"react-sketch-canvas__canvas-background\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#FFFFFF\"></rect>', '');\r\n      const blob = new Blob([exportedDataURI], { type: 'image/svg+xml' });\r\n      //console.log(blob);\r\n      uploadBytes(svgRef, blob).then((snapshot) => {\r\n          console.log('SVG upload to Firebase succeed');\r\n      }).catch((error) => {\r\n          console.error('SVG upload to Firebase failed', error);\r\n      });\r\n    }\r\n    \r\n  };\r\n  \r\n  const penHandler = () => {\r\n    const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n    if (eraseMode) {\r\n      setPenButtonOutline(\"\");\r\n      setEraserButtonOutline(\"outline-\");\r\n      eraseMode(false);\r\n    }\r\n  };\r\n\r\n  const eraserHandler = () => {\r\n    const eraseMode = canvasRef.current?.eraseMode;\r\n    \r\n    if (eraseMode) {\r\n      setPenButtonOutline(\"outline-\");\r\n      setEraserButtonOutline(\"\");\r\n      eraseMode(true);\r\n    }\r\n  };\r\n  \r\n  const undoHandler = () => {\r\n    const undo = canvasRef.current?.undo;\r\n\r\n    if (undo) {\r\n      undo();\r\n    }\r\n  };\r\n\r\n  const redoHandler = () => {\r\n    const redo = canvasRef.current?.redo;\r\n\r\n    if (redo) {\r\n      redo();\r\n    }\r\n  };\r\n\r\n  const clearHandler = () => {\r\n    const clearCanvas = canvasRef.current?.clearCanvas;\r\n\r\n    if (clearCanvas) {\r\n      clearCanvas();\r\n    }\r\n  };\r\n\r\n  const resetCanvasHandler = () => {\r\n    const resetCanvas = canvasRef.current?.resetCanvas;\r\n\r\n    if (resetCanvas) {\r\n      resetCanvas();\r\n    }\r\n  };\r\n\r\n  const createButton = (\r\n    label,\r\n    handler,\r\n    themeColor,\r\n    outline,\r\n    spacingClass\r\n  ) => (\r\n    <button\r\n      key={label}\r\n      className={`btn btn-${outline}${themeColor} ${spacingClass} mb-3 btn-lg`}\r\n      type=\"button\"\r\n      onClick={handler}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n\r\n  const goToNext = () =>{\r\n      if(isDone) {\r\n        window.location.href = `/Avatar-classroom/#${playUrl}`;\r\n      }\r\n      else{\r\n        alert(\"請先畫圖並按完成\")\r\n      }\r\n  };\r\n\r\n  const buttonsPenEraser = [\r\n    [\"畫筆\", penHandler, \"primary\", penButtonOutline, \"\"],\r\n    [\"橡皮擦\", eraserHandler, \"primary\", eraserButtonOutline, \"mr-3\"],\r\n  ];\r\n\r\n  const buttonsWithHandlers = [\r\n    [\"復原\", undoHandler, \"secondary\", \"outline-\", \"\"],\r\n    [\"取消復原\", redoHandler, \"secondary\", \"outline-\", \"\"],\r\n    [\"清除全部\", clearHandler, \"secondary\", \"outline-\", \"\"],\r\n    [\"重置\", resetCanvasHandler, \"secondary\", \"outline-\", \"mr-3\"],\r\n    //[\"Export Image\", imageExportHandler, \"success\"],\r\n    //[\"Get Sketching time\", getSketchingTimeHandler, \"success\"],\r\n  ];\r\n\r\n  const buttonsDone = [\r\n    [\"完成\", svgExportHandler, \"success\", \"\", \"mr-3\"],\r\n  ];\r\n\r\n  const buttonsNext = [\r\n    [\"下一步\", goToNext, \"success\", \"\", \"mr-3\"],\r\n  ];\r\n\r\n  const onChange = (updatedPaths) => {\r\n    setPaths(updatedPaths);\r\n  };\r\n\r\n  return (\r\n    <main className=\"container-fluid p-2 justify-content-center\">\r\n      <div className=\"row\">\r\n        <section className=\"col-12\">\r\n          <div class=\"row justify-content-center\">\r\n            <h1>畫出你的虛擬化身</h1>\r\n          </div>\r\n          <section className=\"row no-gutters canvas-area m-1 p-0\">\r\n            <div className=\"col-12 canvas p-0\">\r\n              <ReactSketchCanvas\r\n                ref={canvasRef}\r\n                onChange={onChange}\r\n                onStroke={(stroke, isEraser) =>\r\n                  setLastStroke({ stroke, isEraser })\r\n                }\r\n                {...canvasProps}\r\n              />\r\n            </div>\r\n          </section>\r\n          <form className=\"d-flex flex-column align-items-center\">\r\n            <div class=\"row justify-content-center\">\r\n              <div className=\"col-12 panel d-flex flex-column align-items-center mt-2\">\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"buttonsWithHandlers\">\r\n                  {buttonsWithHandlers.map(([label, handler, themeColor, outline, spacingClass]) =>\r\n                    createButton(label, handler, themeColor, outline, spacingClass)\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 panel d-flex flex-column align-items-center\">\r\n                <div>\r\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"buttonsPenEraser\">\r\n                    {buttonsPenEraser.map(([label, handler, themeColor, outline, spacingClass]) =>\r\n                      createButton(label, handler, themeColor, outline, spacingClass)\r\n                    )}\r\n                  </div>\r\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"buttonsDone\">\r\n                    {buttonsDone.map(([label, handler, themeColor, outline, spacingClass]) =>\r\n                      createButton(label, handler, themeColor, outline, spacingClass)\r\n                    )}\r\n                  </div>\r\n                  <div class=\"btn-group\" role=\"group\" aria-label=\"buttonsNext\">\r\n                    {buttonsNext.map(([label, handler, themeColor, outline, spacingClass]) =>\r\n                      createButton(label, handler, themeColor, outline, spacingClass)\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-10 d-flex flex-column align-items-center\">\r\n                {inputProps.map(([fieldName, type, displayName]) => (\r\n                  <InputField\r\n                    key={fieldName}\r\n                    fieldName={fieldName}\r\n                    displayName={displayName}\r\n                    type={type}\r\n                    canvasProps={canvasProps}\r\n                    setCanvasProps={setCanvasProps}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Draw;\r\n","import { Header, Button, Segment, Modal, Input, Container } from 'semantic-ui-react'\r\n//import React from 'react';\r\nimport firebase from \"../utils/firebase\";\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\nfunction MySettings( { user } ){\r\n    const [isNameModalOpen, setIsNameModalOpen] = React.useState(false);\r\n    const [isPasswordModalOpen, setIsPasswordModalOpen] = React.useState(false);\r\n    const [displayName, setDisplayName] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [oldPassword, setOldPassword] = React.useState('');\r\n    const [newPassword, setNewPassword] = React.useState('');\r\n\r\n    function onSubmitName(){\r\n        setIsLoading(true)\r\n        user.updateProfile({\r\n            displayName,\r\n        }).then(() =>{\r\n            setDisplayName('');\r\n            setIsNameModalOpen(false);\r\n            setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    function onSubmitPassword(){\r\n        setIsLoading(true);\r\n        const credential = firebase.auth.EmailAuthProvider.credential(\r\n            user.email, oldPassword\r\n        );\r\n        user.reauthenticateWithCredential(credential).then(() => {\r\n            user.updatePassword(newPassword).then(() => {\r\n                setIsPasswordModalOpen(false);\r\n                setOldPassword('');\r\n                setNewPassword('');\r\n                setIsLoading(false);\r\n            });\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <>\r\n            <Header>我的檔案</Header>\r\n            <Header size='small'>\r\n                使用者名稱\r\n                <Button floated='right' onClick={() => setIsNameModalOpen(true)}>\r\n                    修改\r\n                </Button>\r\n            </Header>\r\n            <Segment vertical>{user.displayName}</Segment>\r\n            <Modal basic open={isNameModalOpen} size='mini'>\r\n                <Modal.Header>修改使用者名稱</Modal.Header>\r\n                <Modal.Content>\r\n                    <Input \r\n                        placeholder=\"輸入新的使用者名稱\" \r\n                        value={displayName} \r\n                        onChange={(e) => setDisplayName(e.target.value)}\r\n                        fluid \r\n                    />\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={() => setIsNameModalOpen(false)}>取消</Button>\r\n                    <Button onClick={onSubmitName} loading={isLoading} >修改</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n            </>\r\n            <>\r\n                <Header size='small'>\r\n                    修改密碼\r\n                    <Button floated='right' onClick={() =>  setIsPasswordModalOpen(true)}>\r\n                        修改\r\n                    </Button>\r\n                </Header>\r\n                <Segment vertical>********</Segment>\r\n                <Modal basic size='mini' open={isPasswordModalOpen}>\r\n                    <Modal.Header>修改使用者密碼</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Modal.Header size=\"small\">目前密碼</Modal.Header>\r\n                        <Input \r\n                            placeholder=\"輸入舊密碼\" \r\n                            value={oldPassword} \r\n                            onChange={(e) => setOldPassword(e.target.value)}\r\n                            fluid \r\n                        />\r\n                        <Header></Header>\r\n                        <Modal.Header size=\"small\">新密碼</Modal.Header>\r\n                        <Input \r\n                            placeholder=\"輸入新密碼\" \r\n                            value={newPassword} \r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            fluid \r\n                        />\r\n                    </Modal.Content>\r\n                    \r\n                    <Modal.Actions>\r\n                    <Button onClick={() => setIsPasswordModalOpen(false)}>取消</Button>\r\n                    <Button onClick={onSubmitPassword} loading={isLoading} >修改</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MySettings;","import React from 'react';\r\nimport styles from './RwdYoutube.module.css';\r\n\r\nexport default function RwdYoutube({ src }) {\r\n    return (\r\n        <div className={styles.videobox}>\r\n            <iframe frameBorder=\"0\" src={src} allowFullScreen=\"true\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"  />\r\n        </div>\r\n    )\r\n}","//import React from \"react\";\r\nimport { Grid, Container, Button, Embed } from 'semantic-ui-react'\r\nimport React, { useState } from 'react';\r\nimport styles from './styles.module.css'\r\nimport RwdYoutube from '../component/RwdYoutube';\r\nimport firebase from '../utils/firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Mainpage(){\r\n    const [user, setUser] = useState(null);\r\n    \r\n    React.useEffect(() =>{\r\n        firebase.auth().onAuthStateChanged((currentUser) =>{\r\n        setUser(currentUser);\r\n        })\r\n    })\r\n\r\n    return (\r\n        <Container style={{ width: \"100%\", height: \"100vh\" }}>\r\n        \r\n            <Grid centered style={{ marginTop: \"40px\" }}>\r\n                <div style={{ fontWeight:\"bold\", fontSize: 45, color:\"#2bb3bf\" }}>Avatar</div>\r\n            </Grid>\r\n            <Grid centered style={{ marginTop: \"40px\" }}>\r\n                <div style={{ fontWeight:\"bold\", fontSize: 45, color:\"#2bb3bf\" }}>Classroom</div>\r\n            </Grid>\r\n            <Grid centered style={{ marginTop: \"60px\" }}>\r\n                <div style={{fontSize: 30}}>為您提供一個全新</div>\r\n            </Grid>\r\n            <Grid centered style={{ marginTop: \"40px\" }}>\r\n                <div style={{fontSize: 30}}>教學測驗模式</div>\r\n            </Grid>\r\n            <Grid centered style={{ marginTop: \"40px\" }}>\r\n                <div style={{fontSize: 30}}>請搭配 Webcam 使用</div>\r\n            </Grid>\r\n            {user ? (\r\n                <></>\r\n            ) : (\r\n                <Grid centered style={{ marginTop: \"40px\" }}>\r\n                    <Button color='positive' size='large' as={Link} to =\"/signin\">立即註冊/登入</Button>\r\n                </Grid>\r\n            )}\r\n            <Grid centered style={{ marginTop: \"40px\" }}>\r\n                <Grid.Column width={12}>\r\n                    <RwdYoutube\r\n                        src=\"https://www.youtube.com/embed/tiz7wmd3hVI?si=ahy36OFD6OKGsMiv;autoplay=1&mute=1\"//need to mute and autoplay\r\n                        controls\r\n                        width=\"100%\"\r\n                    /> \r\n                </Grid.Column>\r\n            </Grid>\r\n            <br/>\r\n            <Grid style={{ marginTop: \"120px\" }} >\r\n                \r\n                <Grid.Column floated='left' width={10}>\r\n                    <div className={styles.small_note}>製作人名單</div>\r\n                    <div className={styles.small_note}>吳承軒&nbsp;陳苡銜&nbsp;褚帛諭&nbsp;洪麒祥</div>\r\n                </Grid.Column>\r\n                <Grid.Column floated='right' width={6}>\r\n                    <div className={styles.small_note} style={{textAlign: \"right\"}}>In Memory of</div>\r\n                    <div className={styles.small_note} style={{textAlign: \"right\"}}>洪麒祥</div>\r\n                </Grid.Column>\r\n            </Grid>\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nexport default Mainpage;","import GameStore from '../store/GameStore';\r\nimport Game from '../entities/Game';\r\n\r\n\r\nconst findGamesByShortCode = (shortCode) => {\r\n  return new GameStore().list({ shortCode: String(shortCode), state: Game.STATE_WAITING_FOR_PLAYERS });\r\n};\r\n\r\nexport default findGamesByShortCode;\r\n","import React, { useState } from 'react'\r\nimport { Link, Navigate } from \"react-router-dom\"\r\nimport { Button, Form, FormGroup, Label, Input, ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nimport CenteredContainer from '../view_components/CenteredContainer';\r\nimport styles from './styles.module.css'\r\nimport findGamesByShortCode from '../use_cases/findGamesByShortCode';\r\n\r\n\r\nfunction JoinS(){\r\n  const [games, setGames] = useState([]);\r\n  const [shortCode, setShortCode] = useState('');\r\n\r\n  if (games.length > 1) {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n        <ListGroup>\r\n          {\r\n            games.map(game => (\r\n              <Link key={game.id} to={`/join/${game.id}`}>\r\n                <ListGroupItem\r\n                  tag=\"button\"\r\n                  action\r\n                >\r\n                  {game.name}\r\n                </ListGroupItem>\r\n              </Link>\r\n            ))\r\n          }\r\n        </ListGroup>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n  else if (games.length === 1) {\r\n    return <Navigate to={`/join/${games[0].id}`} />;\r\n  }\r\n  else {\r\n    return (\r\n      <CenteredContainer maxWidth={500} verticalCentered={true}>\r\n        <h1 className={styles.hero_heading}>Avatar Classroom</h1>\r\n        <Form\r\n          className=\"mb-5\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            findGamesByShortCode(shortCode).then(setGames);\r\n          }}\r\n        >\r\n          <FormGroup>\r\n            <Label for=\"shortCode\">房間代碼:</Label>\r\n            <Input id=\"shortCode\" type=\"number\" value={shortCode} onChange={e => setShortCode(e.target.value)} />\r\n          </FormGroup>\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!shortCode}\r\n            type=\"submit\"\r\n          >\r\n            加入房間\r\n          </Button>\r\n        </Form>\r\n        \r\n        <aside hidden>\r\n          Want to create your own quiz?&nbsp;\r\n          <Link to=\"/login\">\r\n            Sign Up\r\n          </Link>\r\n        </aside>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JoinS;\r\n","import React from 'react';\r\nimport {\r\n  HashRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport firebase from './utils/firebase';\r\n\r\nimport JoinRoute from './routes/JoinRoute'\r\nimport PlayerRoute from './routes/PlayerRoute'\r\n//import HomeRoute from './routes/HomeRoute/HomeRoute';\r\nimport LobbyRoute from './routes/LobbyRoute';\r\nimport LoginRoute from './routes/LoginRoute';\r\nimport MyGamesRoute from './routes/MyGamesRoute';\r\nimport CreateGameRoute from './routes/CreateGameRoute';\r\n//import HostRoute from './routes/HostRoute';\r\nimport GameDetailsRoute from './routes/GameDetailsRoute';\r\n//import FindGameRoute from './routes/FindGameRoute';\r\n\r\nimport PendingQuestionRoute from './routes/PendingQuestionRoute';\r\nimport QuestionResultsRoute from './routes/QuestionResultsRoute';\r\nimport FinalResultsRoute from './routes/FinalResultsRoute';\r\nimport CurrentQuestionRoute from './routes/CurrentQuestionRoute';\r\n\r\nimport Header from \"./Header\";\r\nimport Signin from './pages/Signin'\r\n//import Posts from \"./pages/Posts\";\r\nimport Draw from \"./pages/Draw\";\r\nimport MySettings from './pages/MySettings';\r\nimport Mainpage from './pages/Mainpage';\r\n\r\nimport JoinS from './pages/JoinS';\r\n\r\nfunction App() {\r\n  const [user, setUser] = React.useState(null);\r\n  React.useEffect(() =>{\r\n    firebase.auth().onAuthStateChanged((currentUser) =>{\r\n      setUser(currentUser);\r\n    })\r\n  })\r\n  return (\r\n    <HashRouter>\r\n      <Header/>\r\n        <div className=\"App\">\r\n          <Routes>\r\n            <Route path=\"/login\" element={<LoginRoute/>} key={LoginRoute.id}/>            \r\n            <Route path=\"/\" exact element={<Mainpage/>} key={Mainpage.id}/> \r\n            <Route path=\"/signin\" exact element={<Signin />} key={Signin.id}/>\r\n            <Route path=\"/join-s\" exact element={<JoinS/>} />\r\n            \r\n            <Route path=\"/lobby/:gameId\" element={<LobbyRoute />} key={LobbyRoute.id}/>\r\n            <Route path=\"/play/:gameId/as/:playerId\" element={<PlayerRoute />} key={PlayerRoute.id}/>\r\n            <Route path=\"/join/:gameId\" element={<JoinRoute />} key={JoinRoute.id}/>\r\n            <Route path=\"/games/create\" element={<CreateGameRoute />} key={CreateGameRoute.id}/>\r\n            <Route path=\"/games/:gameId\" element={<GameDetailsRoute />} key={GameDetailsRoute.id}/>\r\n            <Route path=\"/games\" exact element={<MyGamesRoute />} key={MyGamesRoute.id}/>\r\n            \r\n            <Route path=\"/draw\" exact element={<Draw />} key={Draw.id}/>\r\n            <Route path=\"/settings\" exact element={<MySettings user={user}/>} key={MySettings.id}/>\r\n\r\n            <Route path=\"/host/:gameId/questions/pending\" element={<PendingQuestionRoute/>} key={PendingQuestionRoute.id}/>\r\n            <Route path=\"/host/:gameId/questions/current\" element={<CurrentQuestionRoute />} key={CurrentQuestionRoute.id}/>\r\n            <Route path=\"/host/:gameId/results/final\" element={<FinalResultsRoute />} key={FinalResultsRoute.id}/>\r\n            <Route path=\"/host/:gameId/results/:questionId\" element={<QuestionResultsRoute />} key={QuestionResultsRoute.id}/>\r\n          </Routes>\r\n        </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_heading\":\"styles_hero_heading__1pfyu\",\"small_note\":\"styles_small_note__Xgoyt\",\"nomal_text\":\"styles_nomal_text__1MUKj\"};"],"sourceRoot":""}